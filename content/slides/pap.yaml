levels:
    5:
        4:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
            header: else
            text: "When using an `{if}` command, you can also add an `{else}` command.\nIf the answer is Hedy, the computer will print 'nice'.\nBut if the answer is something else the computer will print 'boo'"
        2:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
            header: if
            text: "The `{if}` command allows you to choose between two options.\nIn this example the computer will print 'nice' if the given answer is Hedy.\nIf the answer is not Hedy, the computer will do nothing."
        7:
            text: Enjoy the adventures in level 5!
            header: Let's go!
        3:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
            text: When using the `{if}` command, don't forget to use the `{print}` command.
            header: Don't forget to print
        5:
            header: Long lines
            text: "You might have noticed that your lines can get very long when you have both an `{if}` and an `{else}` command.\n\nYou can choose to seperate commands and put them on 2 lines, like this:"
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
        1:
            header: Welcome to level 5
            text: 'In this level you will learn to use 3 new commands: `{if}`, `{else}` and `{in}`.'
        6:
            text: "If you have practised with the `{if}` and `{else}` commands, you can also try the `{in}` command.\n\nWith `{in}` you can let the computer check if an item is in a list, for example:\n\nPlease note that Hedy is case sensitive. This means that if you answer \"Green\" instead of \"green\", Hedy will print \"meh\"."
            editor: <iframe class="fragment" src="/adventure/in_command/5/raw"></iframe>
            header: Another new command
    7:
        5:
            header: Ready Set Go!
            text: Enjoy the adventures in level 7!
        3:
            text: When using the repeat command, do not forget the `{print}` command.
            header: Don't forget the print command
            editor: <iframe class="fragment" src="/adventure/print/7/raw"></iframe>
        4:
            text: You can also repeat an `{ask}`, `{if}` or `{else}` command multiple times.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/7/raw"></iframe>
            header: Repeat an ask command
        2:
            editor: <iframe class="fragment" src="/adventure/story/7/raw"></iframe>
            text: "If you want to repeat a line of code, you can use the `{repeat}` 3 `{times}` code.\nIf you want to repeat the line more times, simply change the number.\n\nFor example: If you are programming a story where your character shouts for help for 5 times, it could look like this:"
            header: repeat 3 times
        1:
            text: In this level you will learn how to repeat a line of code as many times a you'd like.
            header: Welcome to level 7
    13:
        7:
            header: Even more questions!
            text: "Now we have combined even more question with the function. Type this code and see what happens.\n\nNote how the variables and the arguments have the same name. This is allowed.\nDoes it confuse you? Just use different names, that is allowed as well.\n```\ndefine song with name, place\n    print 'My ' name ' is ' place\n\nname is ask 'Who?'\nplace is ask 'Where are they?'\ncall song with name, place\n```"
            editor: <iframe class="fragment" src="/adventure/functions/13/raw"></iframe>
        5:
            text: "In this example you see how the argument 'place' is used in the function.\nRun the code and change 'ocean' and 'sea' to something else, and see what happens."
            header: Example
            editor: <iframe class="fragment" src="/adventure/functions/13/raw"></iframe>
        3:
            editor: <iframe class="fragment" src="/adventure/and_or_command/13/raw"></iframe>
            text: "The `{or}` works in the same way as the `{and}` command, but only 1 of the two statements has to be true.\n\nLet's see what happens when you change the `{and}` for `{or}`."
            header: The or command
        1:
            header: Welcome to level 13
            text: "We are now going to learn `{and}` and `{or}`! If you want to check two statements, you don't have to use two ifs but can use and and or.\nFrom now on you could also use arguments in your functions."
        2:
            editor: <iframe class="fragment" src="/adventure/and_or_command/13/raw"></iframe>
            text: "The `{and}` command is always used in a combination with the {if} command.\nThis way you can check if 2 statements are true. For example:"
            header: The and command
        6:
            text: "Now you've ssen how arguments work, you could also combine function with a question.\n\nWhat happens if you make these changes:\n```\ndefine song with place\n    print 'My Bonnie is ' place\n\nanswer is ask 'Where is my Bonnie?'\ncall song with answer\n```"
            header: Example with variable
            editor: <iframe class="fragment" src="/adventure/functions/13/raw"></iframe>
        4:
            header: Functions with arguments
            text: Now that you've learned how to use functions, you'll learn how to use a function with an **argument**. An argument is a variable that is used within a function. It is not used outside the function.
        8:
            header: Let's go!
            text: Enjoy the adventures in level 13!
    2:
        4:
            text: Now that we use variables, we can use multiple variables instead of just one `{echo}`command.
            editor: <iframe class="fragment" src="/adventure/ask_command/2/raw"></iframe>
            header: Multiple variables
        2:
            text: To make or 'set' a variable we use the `{is}` command
            editor: <iframe class="fragment" src="/adventure/is_command/2/raw"></iframe>
            header: Variables
        7:
            text: Enjoy the adventures in level 3!
            header: Let the programming fun begin!
        5:
            text: You can also use the `{sleep}` command to pause the code for a while.
            header: Sleep
            editor: <iframe class="fragment" src="/adventure/sleep_command/2/raw"></iframe>
        6:
            header: Sleep 5
            text: "You can add a number after the `{sleep}` command if you want the pause to be longer.\n\nIf you want, you could even use a variable instead of a number to decide the duration of the sleep command."
            editor: <iframe class="fragment" src="/adventure/sleep_command/2/raw"></iframe>
        3:
            header: Interactive
            editor: <iframe class="fragment" src="/adventure/ask_command/2/raw"></iframe>
            text: "We can also set a variable by asking questions.\n\nThe answer to the question is stored in the variable.\n\nThis way we don't need the `{echo}`  command."
        1:
            header: Welcome to level 2
            text: "In this level you will learn to use variables.\n\nA variable is a word that can be used to store informatie.\n\nFor example: a name, age or favorite sports team."
    4:
        2:
            text: 'In the previous levels, you might have come across this problem:'
            header: Problem
            editor: <iframe class="fragment" src="/adventure/default/4/raw"></iframe>
        3:
            text: "In this level we will fix this problem by using quotation marks.\n\nThis also makes our code look more like 'real' Python code."
            header: Fixing it with quotation marks
        10:
            header: Ready, Set, Go!
            text: Enjoy the adventures in level 4!
        6:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
            text: "You do not want variable names to be printed on the screen.\nThis is why variables should be left out of the quotation marks, like this:"
            header: Quotation marks and variables
        4:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
            text: Each time you use the `{print}` command you need to put the text that you want to appear on the screen in quotation marks.
            header: Quotation marks with print
        1:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
            header: Welcome to level 4
            text: In this level you will learn how to use quotation marks.
        5:
            header: Quotation marks with ask
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
            text: This also goes for the `{ask}` command.
        9:
            header: Clear
            text: "In this level you'll also learn the {clear} command.\nWith this command you can wipe all the text from your output screen.\n\nBe careful that you always use a sleep command too. If you don't the computer will wipe all the text before you can read it!"
            editor: <iframe class="fragment" src="/adventure/clear_command/4/raw"></iframe>
        7:
            header: Quotation marks and variables
            text: "When variable names are used in the middle of a sentence, you have to leave the variables out of the quotation marks.\nThe rest of the sentence however, does need quotation marks. That looks like this:"
            editor: <iframe class="fragment" src="/adventure/quotation_marks/4/raw"></iframe>
        8:
            header: Quotation marks and contractions
            text: "Be careful! Now that you are using quotation marks, you can't use apostrophes in contractions.\n\nPlease try to print a contraction like \"you're\" or \"I'm\" in the screen below and see what happens...."
            editor: <iframe class="fragment" src="/adventure/rock/4/raw"></iframe>
    1:
        3:
            header: The {print} command
            editor: <iframe class="fragment" src="/adventure/print_command/1/raw"></iframe>
            text: "You can change the text after the print command to whatever you want.\n\nOr you could print multiple lines by adding another line of code that also starts with `{print}`."
        2:
            editor: <iframe class="fragment" src="/adventure/print_command/1/raw"></iframe>
            text: "The first code that you can use in level 1 is `{print}`.\n\n`{print}` is used to show text on the screen."
            header: '{print}'
        11:
            text: '`{turn}` is used to make the turtle turn left or right.'
            header: 'Drawing with the turtle: {turn}'
            editor: <iframe class="fragment" src="/adventure/turtle/1/raw"></iframe>
        1:
            header: Welcome to level 1!
            text: "We will start level 1 by making stories in Hedy!\n\nWe need three text codes to create interactive stories."
        8:
            header: Programming!
            text: "The yellow arrow buttons can be used to copy examples.\n<iframe class=\"fragment\" src=\"/hedy/1\"></iframe>"
        7:
            editor: <iframe class="fragment" src="/hedy/1"></iframe>
            header: Programming!
            text: Adventures are shown in tabs.
        5:
            text: "As you could see in the previous example. If you use the `{ask}` command, you can ask a question.\n\nThe answer, however doesn't show in the output screen.\n\nIf you do want the answer to show, you can use the final command of this level: `{echo}`.\n\n`{echo}` is used to repeat the answer of an `{ask}`."
            editor: <iframe class="fragment" src="/adventure/ask_command/1/raw"></iframe>
            header: '{echo}'
        10:
            editor: <iframe class="fragment" src="/adventure/turtle/1/raw"></iframe>
            text: '`{forward}` is used to move the turtle forward.'
            header: 'Drawing with the turtle: {forward}'
        9:
            header: Drawing with the turtle
            text: Now that we have seen at text codes, we will now look at drawing codes next.
        4:
            editor: <iframe class="fragment" src="/adventure/rock/1/raw"></iframe>
            header: '{ask}'
            text: "The second code that you can use in level 1 is `{ask}`.\n\n`{ask}` is used to ask a question that can be answered."
        6:
            text: "With `{print}`, `{ask}` and `{echo}` you can already create a little story.\nThis is a good time to try the Parrot, Story and Rock, Paper Scissors adventures."
            header: Programming!
    8:
        7:
            text: Just like with the `{repeat}` command, you can stop using indentation and the lines will always be shown. Not just if the statement is true.
            header: stopping the indentation
            editor: <iframe class="fragment" src="/adventure/if_command/8/raw"></iframe>
        3:
            editor: <iframe class="fragment" src="/adventure/repeat_command/8/raw"></iframe>
            text: "In this level you can repeat multiple lines of code. To do this you must tell the computer which lines belong together and should be repeated.\nYou do this by using indentation.\n\nUse 4 spaces (or one tab) at the beginning of each line that you want to repeat, like this:"
            header: '{repeat} commands now'
        6:
            editor: <iframe class="fragment" src="/adventure/if_command/8/raw"></iframe>
            header: if and else now
            text: "These are the `{if}` and `{else}` commands now.\nEach line after the `{if}` and `{else}` commands start with indentation."
        5:
            editor: <iframe class="fragment" src="/adventure/if_command/5/raw"></iframe>
            text: "The same goes for the `{if}` and `{else}` commands.\nThese were the commands before:"
            header: if and else before
        8:
            text: "You might have thought of trying to put an if command inside a repeat command, or inside another if command.\nFor now, this is not possible yet. In the higher levels, it will be allowed, but for now let's focus on practising the `{if}` `{else}` and `{repeat}` commands with proper indentation first."
            header: if statements inside if statements
        1:
            header: Welcome to level 8
            text: In this level you will learn to use indentation to make the `{repeat}`, `{if}` and `{else}` commands work for multiple lines of code.
        2:
            header: '{repeat} commands before'
            text: "In the previous levels, the `{repeat}` command looked like this:\n\nYou could only repeat one line of code."
            editor: <iframe class="fragment" src="/adventure/story/7/raw"></iframe>
        9:
            header: Let's check out the adventures!
            text: Enjoy the adventures in level 8!
        4:
            header: '{repeat} commands now'
            text: "If you want to, you can continue after the `{repeat}` command without indentation.\nThe lines that do not start with indentation will not be repeated."
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/8/raw"></iframe>
    15:
        3:
            text: Enjoy the adventures in level 15!
            header: Let's try it out!
        2:
            header: '{while}'
            text: "We are going to learn a new loop, the while loop! The loop continues as long as the statement is true. So don't forget to change the value in the loop.\n\nIn the example code, we continue until a correct answer has been given. If the correct answer is never given, the loop will never end!"
            editor: <iframe class="fragment" src="/adventure/while_command/15/raw"></iframe>
        1:
            text: In this level you will learn about the `{while}` loop.
            header: Welcome to level 15
    12:
        5:
            header: Twinkle Twinkle little star!
            editor: <iframe class="fragment" src="/adventure/songs_2/12/raw"></iframe>
            text: "In this program you see an example of a function.\nLet's see what happens if you fill in the rest of the song!"
        3:
            text: "From this level on you are also allowed to use decimal numbers. This can make programs like your restaurant even better!\n\nNumbers do not quotation marks."
            editor: <iframe class="fragment" src="/adventure/maths/12/raw"></iframe>
            header: Decimal numbers
        4:
            text: "In this level you'll learn how to use functions. A function is a block of code you can easily use multiple times. Using functions helps us organize pieces of code that we can use again and again. To create a function, use define and give the function a name. Then put all the lines you want in the function in a indented block under the define line. Leave one empty line in your code to make it look nice and neat. Great job! You have created a function!\n\nNow, whenever we need that block of code, we just use call with the function's name to call it up! We don't have to type that block of code again."
            header: Functions!
        2:
            editor: <iframe class="fragment" src="/adventure/quotation_marks/12/raw"></iframe>
            text: "This level makes some changes to the usage of quotation marks.\nFrom now on, **all texts** need to be in quotation marks. This includes values of variables, items on lists and text after {if} commands."
            header: Quotation marks
        7:
            text: Enjoy the adventures in level 12!
            header: Ready to try it out?
        6:
            text: As you could see in the example a function is a block of code that can be called anytime. You use `{define}` to set the function and `{call}` to use it.
            header: Functions
        1:
            header: Welcome to level 12
            text: "From this level on you are allowed to use decimal numbers and there are some changes to the quotation marks.\nYou can also use functions from this level on!"
    17:
        4:
            text: Enjoy the adventures in level 17!
            header: Let's try it out!
        1:
            header: Welcome to level 17
            text: in this level you will learn how to use a colon and you will learn the elif command.
        2:
            editor: <iframe class="fragment" src="/adventure/print_command/17/raw"></iframe>
            header: Colon
            text: 'Now we are going to change indentation a little bit. Every time that we need an indentation, we need : at the line before the indentation.'
        3:
            editor: <iframe class="fragment" src="/adventure/elif_command/17/raw"></iframe>
            header: Elif
            text: 'In this level you can also use a new command: elif. elif is short for else if and you need it when you want to make 3 (or more!) options. Check it out!'
    14:
        2:
            text: "These are the new symbols you can use:\n\n  The >  means bigger than...\n\n  The >= means bigger than or the same as...\n\n  The <  means smaller than...\n\n  The <= means smaller than or the same as...\n\nYou can use them like this:"
            editor: <iframe class="fragment" src="/adventure/is_command/14/raw"></iframe>
            header: Symbols
        4:
            header: Return value
            text: In the previous levels you have learned to create functions and use arguments with them. Another great use of a function is to let it calculate something for you. You can give the function a calculation and it will give you the answer of the calculation. This answer is called a **return value**.
        5:
            header: Return value
            text: For example, in this code the function calculate_new_price will calculate the new price of any item. It will give you the new price as a return value.
            editor: <iframe class="fragment" src="/adventure/functions/14/raw"></iframe>
        1:
            text: In this level you'll learn some new symbols that can help you improve your programs, like >. You will also learn to work with return values of a function.
            header: Welcome to level 14
        3:
            editor: <iframe class="fragment" src="/adventure/default/14/raw"></iframe>
            text: "You can also use:\n\n== is the same as.\n\n!= is not\n\n== is used in `{if}` statements."
            header: Symbols
        6:
            text: Enjoy the adventures in level 14!
            header: Let's get to work!
    0:
        9:
            text: "The output can also be a drawing.\n<iframe class=\"embedded-hedy\" src=\"/adventure/turtle/1/raw\"></iframe>"
            header: Programming in Hedy
        4:
            text: "If you can program, you can do many cool things:\n* Build interactive stories\n* Create computer drawings and draw these on paper or fabric\n* Build your own apps to use on your phone"
            header: Programming
        7:
            header: Programming in Hedy
            text: "We start the code with the Run code button underneath the code.\n<iframe class=\"embedded-hedy\" src=\"/adventure/story/1/raw\"></iframe>"
        6:
            header: Programming in Hedy
            text: "Code words will be shown in pink.\n<iframe class=\"embedded-hedy\" src=\"/adventure/story/1/raw\"></iframe>"
        8:
            header: Programming in Hedy
            text: "Output appears on the right-hand side.\n<iframe class=\"embedded-hedy\" src=\"/adventure/story/1/raw\"></iframe>"
        3:
            header: Programming Language
            text: "Maybe you already know some programming languages?\nSome examples are:\n* Scratch\n* Python\n* HTML"
        5:
            header: Programming in Hedy
            text: "In Hedy we use special codes, like `{print}`.\n<iframe class=\"embedded-hedy\" src=\"/adventure/story/1/raw\"></iframe>"
        2:
            header: Programming
            text: "Programming is giving instructions to a computer, using the language of the computer.\n\nSuch a language is called a \"programming language\"."
        1:
            header: Welcome to Hedy!
            text: Hedy is a programming language.
    10:
        4:
            header: Time to program!
            text: Enjoy the adventures in level 10!
        2:
            header: The for command
            editor: <iframe class="fragment" src="/adventure/for_command/10/raw"></iframe>
            text: With for you can make a list and use all items on that list. `{for}` creates a block, like repeat and if so all lines in the block need to start with indentation (4 spaces).
        3:
            editor: <iframe class="fragment" src="/adventure/dishes/10/raw"></iframe>
            header: The for command
            text: 'Here you see another example of the `{for}` command:'
        1:
            header: Welcome to level 10
            text: 'In this level you will learn a new command: `{for}`.'
    6:
        8:
            text: 'You can use calculations with numbers, but you can also use variables to do calculations, like this:'
            header: Calculations with variables
            editor: <iframe class="fragment" src="/adventure/calculator/6/raw"></iframe>
        6:
            header: Summary
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
            text: In summary, you can use +, -, * and / to do maths.
        4:
            header: Multiplication
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
            text: If you want to do multiplications, you can use the asterisk.
        5:
            header: Division
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
            text: You can use the slash for division.
        7:
            header: The = symbol
            editor: <iframe class="fragment" src="/adventure/is_command/6/raw"></iframe>
            text: "From now on you can also use the = symbol instead of the `{is}` command.\nThis goes for both numbers and words, and it also goes after the `{if}` or `{else}` commands."
        1:
            header: Welcome to level 6
            text: In this level we are adding maths to our codes.
        3:
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
            text: If you want to subtract, you can use the minus sign.
            header: Subtraction
        2:
            editor: <iframe class="fragment" src="/adventure/maths/6/raw"></iframe>
            header: Addition
            text: If you want to calculate an addition, simply use the plus sign.
        9:
            text: Enjoy the adventures in level 6!
            header: Let's get to work!
    18:
        1:
            text: Congratulations! You have reached the last level of Hedy! The code you have created here can be copied to real Python environments like replit or PyCharm, and you can continue learning there! Note however that Python can only read English commands, so if you have been using other languages, you will need to switch to English now.
            header: Welcome to level 18
        2:
            editor: <iframe class="fragment" src="/hedy/18"></iframe>
            text: "We arrived at real Python code! That means we need to use parentheses with print and range from now on.\n\nAlso, if you want to print more than one item, you need to separate them by commas.\n\nThe final change we will need to make to get Python code is changing ask into input.\n\nClick on the 'print' tab for all the examples."
            header: The Python way
        3:
            header: The very last adventures!
            text: Enjoy the very last adventures in level 18!
    9:
        7:
            text: Mind that the fourth and sixth line of this code starts with 8 spaces of indentation.
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
            header: Mind the indentation
        8:
            text: Enjoy the adventures in level 9!
            header: Let's go!
        3:
            header: Indentation matters!
            text: Indentation is very important to tell the computer which lines should be repeated and which lines should only be ran once.
            editor: <iframe class="fragment" src="/adventure/repeat_command_2/8/raw"></iframe>
        5:
            editor: <iframe class="fragment" src="/adventure/if_command/9/raw"></iframe>
            header: Indentation matters
            text: Again, indentation is still very important and can make a big difference in the code.
        2:
            text: You are allowed to use multiple lines after `{repeat}`.
            header: Multiple lines after `{repeat}`
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
        1:
            header: Welcome to level 9
            text: "In this level you can use multiple lines of code after an `{if}` or after a `{repeat}` command.\n\nYou can even put a `{repeat}` command within another `{repeat}`  command."
        4:
            text: You can also use multiple lines after `{if}`
            editor: <iframe class="fragment" src="/adventure/if_command/9/raw"></iframe>
            header: Multipe lines after `{if}`
        6:
            text: "Now that you can use multiple lines of code after these command, you can also put them within each other.\nCheck it out:"
            header: An `{if}` inside a `{repeat}`
            editor: <iframe class="fragment" src="/adventure/repeat_command/9/raw"></iframe>
    11:
        1:
            text: "In this level, we add a new form of the `{for}` command. In earlier levels, we used for with a list, but we can also use for with numbers.\n\nThis way we don't need the `{repeat}` command anymore."
            header: Welcome to level 11
        2:
            header: The for command
            editor: <iframe class="fragment" src="/adventure/for_command/11/raw"></iframe>
            text: 'This is what the new for command looks like:'
        4:
            header: Let's start programming!
            text: Enjoy the adventures in level 11!
        3:
            header: the variable i
            editor: <iframe class="fragment" src="/adventure/calculator/11/raw"></iframe>
            text: "In the previous slide the variable was named 'counter', because it was counting down.\nYou can of course use any name for the variable you want.\nThe standard name  for variables in this situation that is used in programming languages like Python is 'i'.\nThat looks like this:"
    16:
        1:
            text: In this level you will learn about the [square brackets] and how to use them.
            header: Welcome to level 16
        3:
            header: Let's try it out!
            text: Enjoy the adventures in level 16!
        2:
            header: Square brackets
            editor: <iframe class="fragment" src="/adventure/random_command/16/raw"></iframe>
            text: We are going to make lists the Python way, with square brackets around the lists! We also keep the quotation marks around each item like we have learned in previous levels. We use square brackets to point out a place in a list. The at random command can not be used anymore.
    3:
        2:
            editor: <iframe class="fragment" src="/adventure/random_command/3/raw"></iframe>
            header: Making a list
            text: "You make a list with `{is}`.\n\nSeperate the items on your list with a comma."
        6:
            editor: <iframe class="fragment" src="/adventure/add_remove_command/3/raw"></iframe>
            text: "The opposite of the `{add}` `{to}` command is the  `{remove}` `{from}` command.\nThis command removes an item from a list."
            header: Remove from
        3:
            header: At random
            text: "You can use the list with the `{at}` `{random}` command.\nThe computer will randomly pick one item of the list.\nEvery time you run this code the output will differ."
            editor: <iframe class="fragment" src="/adventure/dice/3/raw"></iframe>
        4:
            header: At random in a sentence
            text: You can use the `{at}` `{random}` command in a sentence as well.
            editor: <iframe class="fragment" src="/adventure/random_command/3/raw"></iframe>
        5:
            header: Add to
            editor: <iframe class="fragment" src="/adventure/add_remove_command/3/raw"></iframe>
            text: "You can add items to a list with the `{add}` `{to}` command.\n\nYou can choose what to add to the list or you can use the `{add}` `{to}` command in combination with the `{ask}` command.\nThis way you can let the player decide what to add to the list."
        1:
            header: Welcome to level 3
            text: In this level you'll learn how to make a list, add and remove items form your lists and pick a random item off that list.
        9:
            text: Enjoy the adventures in level 3!
            header: Let's get to work!
