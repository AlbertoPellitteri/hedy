adventures:
    default:
        levels:
            1:
                start_code: '{print} hej världen!'
                story_text: "Välkommen till Hedy! På nivå 1 kan du börja med att skriva ut en berättelse.\n\nProva koden själv med den gröna 'Kör kod'-knappen under programmeringsfältet.\n\nÄr du klar? Gå då till nästa flik och lär dig ditt första kommando!\n"
            2:
                example_code: "```\n{print} Välkommen till Hedys\n{ask} Vad önskas att äta?\n{echo} Så du vill ha\n{ask} Vad vill du dricka till?\n{echo} Så du vill ha\n```\n"
                story_text_2: "Om spelaren skriver en hamburgare och cola kan du inte säga \"så du vill ha en hamburgare och cola\", utan du måste göra två separata rader.\nDessutom  upprepar `{echo}`-kommandot bara ordet i slutet av meningen. Så du kan inte säga \"din hamburgare är på väg!\".\n\nDet ändras på nivå 2. På nivå 2 lär du dig att arbeta med variabler, som låter dig spara flera olika informationer och skriva ut dem var du vill.\nSå fortsätt nu till nästa flik!\n"
                story_text: "Grattis! Du har nått nivå 2. Förhoppningsvis har du redan gjort lite fantastisk kod!\nPå den första nivån kanske du märkte att kommandot `{echo}` bara kan spara en information åt gången.\nTill exempel: i restaurangäventyret kunde man upprepa vad kunden ville äta, eller vad de ville dricka, men inte båda i en mening.\n"
                start_code: '{print} hej världen!'
            3:
                story_text: "På den föregående nivån har du lärt dig vad en variabel är och hur du kan använda den för att göra dina äventyr mer interaktiva.\nMen ... det är inte det enda du kan göra med variabler! Du kan också använda variabler för att skapa listor.\nOch du kan till och med låta Hedy välja ett slumpmässigt ord från en lista, vilket låter dig göra riktiga spel!\nTa en snabb titt på nästa flik!\n"
                start_code: '{print} hej världen!'
            4:
                story_text: "På de tidigare nivåerna har du övat på att använda variabler, men du kanske har stött på ett problem.\nDu kanske har försökt att köra en kod som denna:\n\nNaturligtvis ville du skriva ut\n\n`My name is Sophie`\n\nmen Hedy skriver\n\n`My Sophie is Sophie`.\n\nPå den här nivån löser vi problemet genom att använda citattecken.\n"
                example_code: "```\nnamn {is} Sophie\n{print} Jag heter namn\n```\n"
                start_code: "{print} 'Hej världen'"
            5:
                start_code: "namn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy {print} 'cool!' {else} {print} 'meh'"
                story_text: "På de tidigare nivåerna har du redan lärt dig att använda `{at} {random}` som gjorde dina spel annorlunda varje gång du körde koden.\nMen det är inte riktigt interaktivt för spelaren har inget inflytande på vad som händer i spelet.\n\nPå den här nivån kommer du att lära dig kommandot `{if}`, som låter dig ge olika svar i ditt program. På så sätt kan du till exempel programmera ett hemligt lösenord för din dator.\nFortsätt till nästa flik för det nya kommandot!\n"
                example_code: "```\nlösenord {is} {ask} 'Vad är rätt lösenord?'\n```\n"
            6:
                story_text: "På föregående nivå har du övat med `{ask}` och `{if}`. Du kan till exempel fråga gästerna vad de skulle vilja äta.\nVad du dock inte kan göra ännu är att räkna ut priset för allas middag.\n\nNästa nivå gör det möjligt att använda addition, subtraktion och multiplikation i dina program. På så sätt kan du räkna ut priserna i din restaurang, men du kan också lägga till en hemlig kod för att ge dina vänner och familj rabatt.\nEtt annat alternativ i nästa nivå är att programmera ditt eget mattespel, så att ditt småsyskon kan öva multiplikationstabellen.\nGå och se själv!\n"
                start_code: "# placera din kod här"
                example_code: "```\nmatpris {is} 0\ndrickapris {is} 0\ntotalpris {is} 0\n{print} 'Välkommen till McHedy'\nbeställning {is} {ask} 'Vad önskas att äta?'\n{if} beställning {is} hamburgare matpris {is} 5\n{if} beställning {is} pommes frites matpris {is} 2\ndricka {is} {ask} 'Vad vill du dricka?'\n{if} dricka {is} vatten drickapris {is} 0\nelse drickapris {is} 3\ntotalpris {is} food_price + drink_price\n{print} 'Det blir ' totalpris ' dollar, tack'\n```\n"
            7:
                start_code: "{print} 'happy birthday to you'\n{print} 'happy birthday to you'\n{print} 'happy birthday dear Hedy'\n{print} 'happy birthday to you'\n"
                story_text: "Bra jobbat! Du har nått nästa nivå, vilket betyder att du har tränat på `{if}` och `{else}`. Du har säkert märkt att din kod blir längre och längre.\nTill exempel om du vill programmera 'Grattis på födelsedagen'.\n\nDet är mycket kod för i huvudsak samma ord om och om igen. I nästa flik lär du dig tack och lov en lösning med kommandot `{repeat}`, som låter dig upprepa en kodrad flera gånger.\n"
                example_code: "```\n{print} 'happy birthday to you'\n{print} 'happy birthday to you'\n{print} 'happy birthday dear Hedy'\n{print} 'happy birthday to you'\n```\n"
            8:
                start_code: "{print} 'Vi forsätter till nästa flik!'"
                story_text: "Nu har du lärt dig hur du upprepar en enstaka kodrad. Detta är praktiskt, men det räcker inte alltid. Ibland vill du upprepa flera rader samtidigt.\nDen här nivån låter dig gruppera flera rader kod och upprepa den gruppen av rader på en gång!\n"
                example_code: "```\n{repeat} 5 {times} {print} 'På nästa flik kan du upprepa flera rader kod samtidigt!'\n```\n"
            9:
                start_code: "{print} Fortsätt till nästa flik!"
                story_text: "Bra jobbat! Du har nått en ny nivå! På den föregående nivån lärde du dig använda flera rader kod i ett {if}- eller {repeat}-kommando. Men du kan ännu inte kombinera dem ...\nGoda nyheter! På den här nivån kommer du att få lägga en {if} inuti en {if}, eller inuti ett {repeat}-kommando.\n"
                example_code: "```\nsvar = {ask} 'Är du redo att lära dig något nytt?'\n{if} svar {is} ja\n    {print} 'Bra! Du kan lära dig att använda kommandot repeat i if-kommandot!'\n    {print} 'Hurra!'\n    {print} 'Hurra!'\n    {print} 'Hurra!'\n{else}\n    {print} 'Kanske du ska öva lite mer på förra nivån'\n"
            10:
                start_code: "{print} 'Vi forsätter till nästa flik!'"
                story_text: "Det här gå ju bra! På de tidigare nivåerna stod vi fortfarande inför ett litet problem. Du har lärt dig att repetera kodrader, men tänk om du skulle vilja ändra raden lite.\nTill exempel om du vill sjunga låten 'if you're happy and you know it' så skulle det se ut så här:\n\nOm du vill fortsätta med nästa vers, 'stomp your feet' och nästa och nästa, måste du ändra koden helt.\nPå den här nivån kommer du att lära dig kommandot `{for}`, som låter dig göra en lista med moment och upprepa koden med en nytt moment varje gång!\nTa en titt!\n"
                example_code: "```\n{repeat} 2 {times}\n    {print} 'if youre happy and you know it clap your hands'\n{print} 'if youre happy and you know it and you really want to show it'\n{print} 'if youre happy and you know it clap your hands'\n```\n"
            11:
                start_code: "{print} 'Fortsätt till nästa flik!'"
                story_text: "Du har nått nivå 10: bra jobbat! På de högre nivåerna fokuserar Hedy mer och mer på att lära dig programspråket Python.\nI Python finns inget `{repeat}` -kommando, men det finns ett kommando som fungerar som {repeat}. Är du nyfiken på hur man säger `{repeat}` på Python-språk? Fortsätt snabbt för att ta reda på det!\n"
            12:
                start_code: "{print} 'Fortsätt till nästa flik!'"
                story_text: "Kanske du testade att använda decimaltal i ditt restaurangäventyr. Om du gjorde det märkte du förmodligen att Hedy inte förstod dem än och alltid avrundade.\nFrån den här nivån kan du använda decimaltal.\n"
                example_code: "```\nhamburgare = 5\ndryck = 2\ntotalt = hamburgare + dryck\nprint 'Du har beställt en hamburgare och en dryck'\nprint 'Det kostar' totalt 'dollar tack'\n```\n"
            13:
                story_text: "På de tidigare nivåerna lärde du dig hur man lägger två `{if}`-kommandon inuti varandra. Det här fungerar bra, men det ger dig väldigt lång och klumpig kod som den här:\n\nI det här systemet måste du ange både rätt användarnamn och rätt lösenord.\nPå den här nivån kommer du att lära dig kommandot `{and}` som att gör den här koden mycket kortare och lättbegriplig!\nKolla in det!\n"
                example_code: "```\nanvändar = {ask} 'Vad är ditt användarnamn?'\nlösenord = {ask} 'Vad är ditt lösenord?'\n{if} användarnamn {is} 'Hedy'\n    {if} lösenord {is} 'hemligt'\n        {print} 'Välkommen Hedy!'\n    {else}\n        {print} 'Tillträde förbjudet'\n{else}\n    {print} 'Tillträde förbjudet!'\n```\n"
                start_code: "{print} 'Fortsätt till nästa nivå!'"
            14:
                start_code: "{print} 'Fortsätt till nästa flik'"
                story_text: "Med programmet här under kan du räkna ut om du har godkänt ett ämne i skolan (alltså ett betyg på sex eller högre).\nDu kan se att den här koden är extremt ineffektiv, på grund av den mycket långa koden på rad fem.\nAlla olika betyg från 1 till 5 måste programmeras separat. Tur för dig, för på den här nivån kommer du att lära dig hur du gör detta utan denna extremt långa kod!\n"
                example_code: "```\nförsta_poäng = {ask} 'Vilken poäng fick du på ditt första prov?'\nandra_poäng = {ask} 'Vilket poäng fick du på ditt andra prov?'\nsammanlagt = första_poäng + andra_poäng\nmedelvärde = sammanlagt / 2\n{if} medelvärde = 1 {or} medelvärde = 2 {or} medelvärde = 3 {or} medelvärde = 4 {or} medelvärde = 5\n    {print} 'Åh nej! Du har misslyckats med ämnet ...'\n{else}\n    {print} 'Bra! Du har klarat ämnet!'\n```\n"
            15:
                start_code: "{print} 'Fortsätt till nästa nivå!'"
                story_text: "I det spelet här nedanför finns kod för att se till att spelaren kan spela så länge den vill ...\nMen koden är ineffektiv och alldeles för lång. Och vad händer om spelaren vill spela 101 spel istället för 100?\nKan du inte spela hur många gånger som helst?\nPå den här nivån kommer du att lära dig ett kommando som gör allt detta mycket enklare!\n"
                example_code: "```\nspel {is} 'pågår'\n{for} i {in} {range} 1 {to} 100\n    {if} spel {is} 'pågår'\n        svar = {ask} 'Vill du fortsätta?'\n        {if} svar {is} 'nej'\n            spel {is} 'över'\n        {if} svar {is} 'ja'\n            {print} 'Ok, vi fortsätter'\n```\n"
            16:
                start_code: "{print} 'Fortsätt till nästa flik!'"
                story_text: "På den här nivån kommer vi att växa lite mer mot riktig Python-kod. Du kommer också att lära dig hur du matchar två listor.\nPå så sätt kan du skriva kod där ett djur matchas till rätt ljud.\nFör de två koderna här under är rent nonsens!\n"
                example_code: "```\ndjur = 'höna', 'häst', 'ko'\nläten = 'kluck', 'gnägg', 'mu'\n{for} vad {in} djur\n    {print} 'En 'vad' säger ' läten {at} {random}\n```\nDu kan också försöka få det att fungera på det här sättet, men ...\n```\ndjur = 'höna', 'häst', 'ko'\nläten = 'kluck', 'gnägg', 'mu'\n{for} vad {in} djur\n    {for} läte {in} läten\n        {print} 'En 'vad' säger 'läte\n```\n"
            17:
                start_code: "{print} 'Fortsätt till nästa nivå!'"
                story_text: "Du har nästan nått sista nivån i Hedy – bra jobbat! På den här nivån kommer du att lära dig ett riktigt Python-sätt att använda `{print}`.\n"
            18:
                start_code: "{print} ('Bra jobbat!!!')"
                story_text: "Grattis! Du har nått den sista nivån i Hedy! Koden du skrivit här kan kopieras till riktiga Python-miljöer som replit eller PyCharm och du kan fortsätta lära dig där!\nNotera att Python bara kan läsa engelska kommandon, så om du har använt andra språk måste du byta till engelska nu.\n"
        name: Introduktion
        description: Nivåbeskrivning
        default_save_name: introduktion
    story:
        levels:
            1:
                story_text: "På nivå 1 kan du göra en berättelse där du får ange namnet på huvudkaraktären själv.\n\nPå första raden, använd `{ask}` för att fråga vem huvudkaraktären i din saga ska vara.\n\nEfter den första raden, börja med `{print}` om en mening ska skrivas ut på skärmen.\nDu använder `{echo}` om du vill att namnet på huvudkaraktären ska vara på slutet av meningen.\n"
                example_code: "```\n{ask} Huvudkaraktären av denna berättelse är\n{print} Nu kommer huvudkaraktären ta en promenad i skogen\n{echo} Han är lite rädd,\n{print} Han hör galna ljud överallt\n{print} Han är rädd för att detta är en hemsökt skog\n```\n"
                start_code: '{print} Din berättelse börjar här'
                story_text_2: "### Övning\nGör nu en egen berättelse med minst sex kodrader.\nBerättelsen får inte vara samma som exempelkoden.\nAnvänd minst ett `{ask}` - och ett `{echo}` -kommando.\nDu kan göra den om vilket ämne som helst.\nOm du inte kan komma på något ämne kan du använda ett av våra val: ett biobesök, en sportmatch eller en dag i djurparken.\n"
            2:
                story_text: "På nivå 2 kan du göra din berättelse roligare. Huvudpersonens namn kan nu stå var som helst i meningen.\n\nMen du får programmera lite extra för det. Du måste nu namnge din huvudperson först.\n\nDu kan sedan sätta det namnet var som helst i meningen.\n"
                example_code: "```\nnamn {is} {ask} Vad heter huvudkaraktären?\n{print} namn ska nu gå en promenad i skogen\n{print} namn är lite rädd\n{print} Plötsligt hör han ett galet ljud...\n{sleep}\n{print} namn är rädd att detta är en hemsökt skog\n```"
                start_code: '{print} Din berättelse'
                story_text_2: "### Övning\nDags att lägga till variabler till din egen berättelse som du skapade på föregående nivå.\nGå till \"Mina program\", leta efter ditt nivå 1-berättelseäventyr och kopiera koden. Klistra in koden på din inmatningsskärm på den här nivån.\n\nDen här koden fungerar inte på den här nivån eftersom du inte har använt variabler än.\nÄndra `{ask}`-kommandona och `{echo}`-kommandona i din kod till rätt form som du har lärt dig på den här nivån.\n\n**Extra** Lägg till ett sovkommando till din kod för att bygga upp spänningen i din berättelse.\n"
            3:
                story_text: "I nivå 3 kan du göra din berättelse lite roligare. Du kan använda slumpen för monster, djur, eller annat hinder, så här:\n"
                example_code: "```\ndjur {is} 🦔, 🐿, 🦉, 🦇\n{print} Han hör nu ljudet av en djur {at} {random}\n```\n"
                story_text_2: "Kommandot `{add}` kan också vara användbar för din berättelse.\n"
                example_code_2: "```\n{print} Han hör ett ljud\ndjur {is} 🐿, 🦔, 🦇, 🦉\ndjuret {is} {ask} Vad tror du det är?\n{add} djuret {to_list} djur\n{print} det var ett djur {at} {random}\n```\n"
                story_text_3: "Detta är ett exempel på kommandot `{remove}` i din berättelse\n\n### Övning\nKopiera din berättelse från de tidigare nivåerna till den här nivån.\nPå den här nivån har du lärt dig tre nya kommandon: `{at} {random}`, `{add} {to}` och `{remove} {from}`.\nLägg till nya kodrader i din berättelse så att alla de nya kommandona finns med minst en gång i din berättelse.\n"
                example_code_3: "```\n{print} Hans ryggsäck blev alldeles för tung.\n{print} Inuti var en vattenflaska, en ficklampa, och en tegelsten.\nsäck {is} vatten, ficklampa, tegelsten\nkasta {is} {ask} Vad ska han kasta bort?\n{remove} kasta {from} säck\n```\n"
                start_code: '{print} Din berättelse'
            5:
                start_code: "{print} 'Här börjar din berättelse!'"
                story_text: "På den här nivån kan du programmera olika slut, vilket gör din berättelse ännu roligare.\nI exempelkoden kan du se hur du skapar två olika slut.\n\n### Övning 1\nSkriv en ny berättelse på minst sex kodrader om ett ämne som du själv väljer.\nIngen inspiration? Välj ett av dessa ämnen: en superhjälte, en tråkig skoldag, strandad på en öde ö.\n\nGe nu spelaren möjlighet att välja ett lyckligt eller dåligt slut, precis som i exempelkoden.\nProgrammera båda sluten.\n\n### Övning 2\nKopiera den berättelse som du har skapat i ditt eget berättelseäventyr i de tidigare nivåerna.\nHitta ett sätt att lägga till minst två kommandon `{if}` och `{else}` i din berättelse.\nDetta kan vara med ett lyckligt eller dåligt slut, men du kan också försöka hitta andra sätt att få med kommandona.\n"
                example_code: "```\nnamn {is} {ask} 'Vem går genom skogen?'\n{print} namn ' går genom skogen'\n{print} namn ' stöter på ett monster'\nslutet {is} {ask} 'Vill du ha ett lyckligt eller olyckligt slut?'\n{if} slutet {is} lyckligt {print} namn ' tar sitt svärd och monstret springer bort'\n{else} {print} 'Monstret äter upp ' namn\n```\n"
            7:
                example_code: "```\n{print} 'Prinsen fortsatte ropa på hjälp'\n{repeat} 5 {times} {print} 'Hjälp!'\n{print} 'Varför hjälper ingen mig?'\n```\n"
                start_code: "{repeat} 5 {times} {print} 'Hjälp!'"
                story_text: "I en berättelse säger någon samma ord flera gånger. Till exempel när någon ropar på hjälp eller sjunger en sång.\nDu kan lägga in sådana upprepningar i din berättelse, på den här nivån med `{repeat}`.\n\n### Övning\nLägg till upprepningar i din egen berättelse. Gå tillbaka till dina sparade program, välj ditt berättelseprogram från nivå 6 och\nhitta en rad som innehåller `{print}` och upprepa den!\n"
            9:
                story_text: "På den här nivån kan du använda kommandona `{if}` och `{repeat}` inuti andra `{if}`- och `{repeat}`-kommandon.\nDetta ger dig många möjligheter och hjälper dig verkligen att göra din berättelse interaktiv.\n\n### Övning 1\nGör klart koden så att `{if}` fungerar korrekt.\n\n### Övning 2\nLägg till en `{if}` och `{else}` för den del av berättelsen där Robin också åker hem.\n\n### Övning 3\nGå tillbaka till din berättelse på nivå 8 och använd minst två `{if}` inom ett annat `{if}`.\n"
                example_code: "```\n{print} 'Robyn promenerar i stan'\nplats = {ask} 'Går Robyn till en affär eller går hon hem?'\n{if} plats {is} affär\n    {print} 'Hon går in i affären'\n    {print} 'Robyn ser en bok som ser spännande ut'\n    bok = {ask} 'Köper Robyn boken?'\n    {if} bok {is} ja\n        {print} 'Robyn köper boken och går hem'\n    {else}\n        {print} 'Robyn lämnar affären och går hem'\n{else}\n    {print} 'Robyn går hem'\n```\n"
                start_code: '# placera din kod här'
            13:
                start_code: '# placera din kod här'
                story_text: "Med kommandona `{and}` och `{or}` kan du göra dina berättelser mer flexibla. Du kan ställa två frågor och svara baserat på båda svaren.\n\n### Övning 1\nTitta på exempelkoden och gör den klar. Lägg sedan till minst två ytterligare `{if}` -satser med `{and}` eller `{or}`.\n\n### Övning 2\nHitta en berättelse från en tidigare nivå och lägg till ett `{and}` eller `{or}`.\n"
                example_code: "```\n{print} 'Vår hjälte går genom skogen'\n{print} 'Vägen delar sig på två håll'\nväg = {ask} 'Vilken väg ska hon välja?'\nvapen = {ask} 'Vilket vapen drar hon?'\n{if} väg {is} 'vänster' {and} vapen {is} 'svärd'\n    _\n```\n"
            4:
                example_code: "```\nname {is} {ask} _ Vad heter du? _\n{print} Huvudpersonen heter _ namn\n{print} namn _ ska nu vandra i skogen _\n{print} namn _ är lite rädd _\ndjur {is} 🦔, 🐿, 🦉, 🦇\n{print} _ Han hör ljudet av _ djur {at} {random}\n{print} namn _ är rädd för att detta är en trollskog _\n```\n"
                start_code: "{print} 'Din berättelse skrivs ut här!'"
                story_text: "Du kanske har märkt att det fortfarande finns ett problem på de tidigare nivåerna. Försökte du skriva ut en mening som innehöll ordet namn? T.ex. `{print}` mitt namn är namn.\nDu kan lösa det på den här nivån. Du måste använda citattecken runt allt du ska skriva ut.\n\n### Övning\nKopiera exempelkoden och få den att funka genom att lägga till citattecken på raderna.\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera koden för din berättelse. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\nTänk efter: variablerna i din egen berättelse ska stå utanför citattecknen. Precis som den andra raden i exempelkoden. På den raden är variabelns namn placerat utanför citattecken.\n"
            8:
                story_text: "På den här nivån kan du använda flera rader i dina `{if}` -kommandon; på så sätt kan du uppgradera ditt lyckliga eller sorgliga slut!\n\n### Övning 1\nExempelkoden visar två olika slut: ett där karaktärerna hoppar in i en tidsmaskin och ett där de inte gör det.\nFyll i luckorna med minst en mening per slut.\n**(extra)** Gör berättelsen längre. Vad händer i berättelsen? Du kan också lägga till en andra `{ask}` med olika alternativ.\n\n### Övning 2\nGå tillbaka till dina sparade program, välj ditt berättelseprogram från nivå 5. Skriv nu ett bra och ett dåligt slut på minst tre rader vardera!\n"
                example_code: "```\n{print} 'ÅH NEJ! T-rex närmar sig!\"\nend = {ask} 'Vill du ha ett lyckligt eller sorgligt slut?'\n{if} slut {is} lyckligt\n    {print} 'I sista ögonblicket hoppar Richard tillbaka in i tidsmaskinen!'\n    {print} _\n{else}\n    {print} 'Åh nej! Richard är för långsam ...\"\n    {print} _\n```\n"
                start_code: '# Placera din kod här'
            10:
                story_text: "På den här nivån kan du använda kommandot {for} i din berättelse. På detta sätt kan du enkelt programmera barnboken  'Brown bear, Brown bear, what do you see'.\n\n### Övning\n\nTitta på <a href=\"https://www.yonkerspublicschools.org/cms/lib/NY01814060/Centricity/Domain/1621/Brown%20Bear%20Book.pdf\"> berättelsen</a> om du inte känner till den, och se till att den skrivs ut som i boken.\n"
                example_code: "```\ndjur = _ , _ , _ , _ \n{print} 'Brunbjörn, brunbjörn'\n{print} 'Vad ser du?'\n```\n"
                start_code: '# placera din kod här'
            12:
                story_text: "På den här nivån behövs citattecken för att spara flera ord i en variabel.\n\n### Övning\n\nHitta en berättelse från en tidigare nivå, vilken nivå som helst är okej. Lägg till citattecken på rätt ställen."
                example_code: "```\nnamn = 'Drottningen av England'\n{print} namn ' åt en tårtbit, när plötsligt...'\n```\n"
                start_code: '# placera din kod här'
            15:
                start_code: '# placera din kod här'
                story_text: "Using the `{while}` loop can make your stories more interesting. For example, you can use `{while} game {is} 'on'` so you can play until the game is over.\nOr you can use `{while} sword {is} 'lost'` so the player can't continu the game until they have found something.\n"
                example_code: "```\nnycklar = 'förlorade'\n{print} 'Du står i din trädgård och du har tappat dina nycklar.'\n{print} 'Var vill du leta efter dem?'\n{print} 'Du kan välja: träd, rabatt, sten, postlåda'\n{while} nycklar == 'förlorade'\n    plats = {ask} 'Var vill du titta?'\n    {if} plats == 'rabatt'\n        {print} 'Här är de!'\n        nycklar = 'hittade'\n    {else}\n        {print} 'Nej, de är inte här: ' plats\n{print} 'Nu kan du gå in i huset!'\n```\n"
            18:
                start_code: '# placera din kod här'
                story_text: "We are going to print another story, but now we have to use brackets with `{print}`.\n\n### Exercise 1\nCreate a story of at least 5 sentences. You don't have to use 'name' just yet.\n"
                story_text_2: "### Övning 2\nVi har redan förberett en `{input}` åt dig. Använd först variabeln `name` i din berättelse.\nLägg sedan till en andra `{ask}` och använd den variabeln också.\nTips: Kom ihåg kommatecken i en `{print}` mellan text och variabler!\n"
                example_code: "```\n{print}('Välkommen till den här berättelsen!')\n```\n"
                example_code_2: "```\nnamn = {input}(\"Vad heter du?\")\n{print}('Välkommen till den här berättelsen!')\n```\n"
        name: Berättelse
        description: Berättelse
        default_save_name: Berättelse
    parrot:
        levels:
            2:
                start_code: '{print} Jag är papegojan Hedy!'
                story_text: "På förra nivån skapade du en papegoja som härmar dig. På den här nivån kommer vi att göra papegojan interaktiv med en variabel och `{ask}`-kommandot.\nVi kommer också att göra papegojan mer verklighetstrogen genom att lägga till `{sleep}`-kommandon efter att något har sagts.\n"
                example_code: "```\n{print} Jag är papegojan Hedy\nnamn _ _ vad heter du?\n{print} namn\n_\n{print} skri\n_\n{print} namn\n```\n"
                story_text_2: "### Övning\nAvsluta först rad 2 med ett `{is}`- och ett `{ask}`-kommando.\nFyll sedan i ett `{sleep}`-kommando på rad 4 och 6 för att låta papegojan vara tyst en liten stund.\n\n**Extrauppgift** Kan du få papegojan att fråga efter mer än bara ditt namn genom att lägga till fler rader kod?\n"
            3:
                story_text: "Lär din papegoja ett nytt ord med `{add}`.\n### Övning\nKan du lägga till kommandot `{add} {to}` för att få koden att fungera?\n"
                start_code: '# placera din kod här'
                example_code: "```\nord {is} skri, Hedy\n{print} Träna din papegoja!\nnytt_ord {is} {ask} Vilket ord vill du lära den?\n_ nytt_ord _ ord\n{print} 🧒 Säg nytt_ord, Hedy!\n{print} 🦜 ord {at} {random}\n```\n"
            1:
                example_code: "```\n{print} Jag heter papegojan Hedy\n{ask} vad heter du?\n{echo}\n{echo}\n```\n"
                start_code: '{print} Jag är papegojan Hedy

                    {ask} Vad heter du?

                    {echo}

                    {echo}

                    '
                story_text: "Skapa din egen papegoja som härmar dig!\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nLåt papegojan ställa en annan fråga. Fyll i de tomma rutorna i exemplet!\n**Extra** Du kan också låta papegojan ställa flera frågor. Lägg till några fler rader kod under din egen kod.\n"
                example_code_2: "```\n{print} Jag heter papegojan Hedy\n{ask} _\n{echo}\n{echo}\n"
            5:
                story_text: "Belöna din papegoja om den säger rätt ord!\n\n### Övning\nAvsluta koden genom att fylla i de fyra saknade kommandona.\n"
                example_code: "```\nord {is} skri, Hedy\n{print} 'Träna din papegoja!'\nnytt_ord {is} {ask} 'Vilket ord vill du lära den?'\n{add} nytt_ord {to_list} ord\nsagt_ord {is} ord {at} {random}\n{print} '🧒 Säg ' nytt_ord', Hedy!'\n{print} '🦜' sagt_ord\n_ sagt_ord {is} nytt_ord _ '🧒 Bra jobbat, Hedy! 🍪'\n_ _ '🧒 Nej, Hedy! Säg ' nytt_ord\n```\n"
                start_code: '# placera din kod här'
            4:
                start_code: '# Skriv din kod här'
                story_text: "På den här nivån måste vi använda citattecken i kommandona `{ask}` och `{print}`.\n### Övning\nKomplettera koden genom att fylla i citattecken på de tomma platserna.\n"
                example_code: "```\nord {is} skri, Hedy\n{print} _ Träna din papegoja! _\nnytt_ord {is} {ask} _ Vilket ord vill du lära den? _\n{add} nytt_ord {to_list} ord\n{print} _ 🧒 Säg _nytt_ord _, hedy!_\n{print} _ 🦜 _ ord {at} {random}\n```\n"
        name: Papegoja
        description: Skapa din egen papegoja som härmar dig!
        default_save_name: Papegoja
    songs:
        levels:
            11:
                start_code: '# placera din kod här'
                example_code: "```\n_ monkeys _ _ 5 _ 1\n    {print} monkeys ' little monkeys jumping on the bed'\n    _\n```\n"
                story_text: "På den här nivån kan du använda `{for}` med `{range}` för att göra sånger där du räknar, till exempel fem små apor.\n\n### Övning 1\nFyll i luckorna och få koden att fungera! Om du inte kommer ihåg sångtexten kan du slå upp den själv.\n\n### Övning 2\nSångens sista rad skiljer sig från de andra. Skriv ut den raden inuti `{for}` och använd en `{if}` för att få den att fungera korrekt.\n"
            12:
                story_text: "I den här sången kan vi göra det ännu enklare att programmera 'if you're happy and you know it, clap your hands'. Eftersom vi kan placera alla handlingar i en variabel, kolla in det:\n\n### Övning\nKan du lägga till rätt antal indrag (mellanslag) på varje rad för att få låten att spelas korrekt?\nTips: Alla rader behöver inte vara indragna.\n"
                example_code: "```\nactions = 'clap your hands', 'stomp your feet', 'shout Hurray!'\n{for} action {in} actions\n    {for} i {in} {range} 1 {to} 2\n        {print} 'if youre happy and you know it'\n        {print} action\n    {print} 'if youre happy and you know it and you really want to show it'\n    {print} 'if youre happy and you know it'\n    {print} action\n```\n"
                start_code: '# placera din kod här'
            16:
                story_text: "In this level, you can program a song like OldMacDonald even more quickly. You can connect the right animal to the right sound by simply putting them in the same place in the list.\nThe Drunken Sailor is also quickly made in this level. You only need 8 lines for the entire song, check it out!\n"
                example_code: "```\nanimals = ['pig', 'dog', 'cow']\nsounds = ['oink', 'woof', 'moo']\n{for} i {in} {range} 1 {to} 3\n    animal = animals[i]\n    sound = sounds[i]\n    {print} 'Old McDonald had a farm'\n    {print} 'E I E I O!'\n    {print} 'and on that farm he had a ' animal\n    {print} 'E I E I O!'\n    {print} 'with a ' sound sound ' here'\n    {print} 'and a ' sound sound ' there'\n    {print} 'here a ' sound\n    {print} 'there a ' sound\n    {print} 'everywhere a ' sound sound\n```\n\n```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines\n    {for} i {in} {range} 1 {to} 3\n        {print} line\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
                start_code: '# placera din kod här'
            6:
                start_code: "{print} 'Vi sjunger!'"
                story_text: "Sånger innehåller ofta många upprepningar. Ibland bygger upprepningarna också på räkning.\nTill exempel i den välkända sången 'Bottles of beer'. Du kan programmera den låten med lite matematik.\n\nTips: Använd funktionen för högläsning för att låta Hedy sjunga sången för dig!\n\n### Övning\nDu kan nu upprepa raderna 2 till 7 hur många gånger som helst genom att kopiera raderna.\n"
                example_code: "```\nvers = 99\n{print} vers ' ölflaskor på väggen'\n{print} vers ' ölflaskor'\n{print} 'Ta en ner, skicka runt den'\nvers = vers - 1\n{print} vers ' ölflaskor på väggen'\n{sleep}\n```\n"
                story_text_2: "This children's song counts down from 5 little monkeys to 1 monkey.\nIf you copy line 2 - 7 and paste it under the the code, you can sing the whole song!\n"
                example_code_2: "```\nantal = 6\nantal = antal - 1\n{print} antal ' små apor som hoppar på sängen'.\n{print} 'En av dem ramla ner av och slog huvudet.'\n{print} 'Mamma ringde till doktorn och doktorn sa'\n{print} 'INGA FLER APOR SOM HOPPAR PÅ SÄNGEN!'\n{sleep}\n```\n"
            7:
                story_text: "Sånger innehåller ofta många upprepningar. Till exempel ... Baby Shark! Om du sjunger den sjunger du samma sak hela tiden:\n\nBaby Shark tututududutudu <br>\nBaby Shark tututududutudu <br>\nBaby Shark tututudutudu <br>\nBaby Shark\n\n### Övning\nKan du skriva ut låten Baby Shark med `{repeat}`? Avsluta koden genom att ersätta tomrummen i koden?\n**Extra** Efter Baby Shark kan du naturligtvis också programmera andra låtar. Det finns många låtar med upprepning!\nKan du komma på en sång  tilloch skriva ut den?\n"
                example_code: "```\n{repeat} _ _ {print} 'Baby Shark tututudutudu'\n{print} 'Baby Shark'\n```\n"
                start_code: "{print} 'Baby Shark'"
            8:
                story_text: "I en tidigare nivå har du programmerat låten 'Bottles of beer'. Men utan kommandot `{repeat}` var du tvungen att kopiera verserna många gånger.\nI den här nivån kan du upprepa sången 99 gånger, bara genom att lägga till en endarad!\n\n### Övning\nLägg till rätt kommando på de tomma platserna och indentera koden på rätt sätt.\n"
                example_code: "```\nverse = 99\n_ 99 {times}\n{print} verse ' bottles of beer on the wall'\n{print} verse ' bottles of beer'\n{print} 'Take one down, pass it around'\nverse = verse - 1\n{print} verse ' bottles of beer on the wall'\n```\n"
                start_code: '# placera din kod här'
            10:
                story_text: "Med `{for}` kan du skriva ut hela sången om baby shark (inklusive alla andra hajar i familjen) på bara 6 rader!\n\n### Övning 1\nKan du göra baby shark-koden ännu kortare genom att använda kommandot `{for}`? Gör klart exempelkoden.\n"
                example_code: "```\nfamily = baby, mammy, daddy, grandma, grandpa\n_ _ _ _ \n  {print} _\n```\n"
                start_code: '# placera din kod här'
                example_code_2: "```\napor = 5, 4, 3, 2, 1\n```\n"
                story_text_2: "### Övning 2\nSkriv ut låten Fem små apor hoppade på sängen. Slå upp texten om du inte kommer ihåg.\n\n**(extra)** Skriv ut låten Old MacDonald had a farm och se till att alla djur gör ett annat ljud med hjälp av en `{if}`.\n"
            18:
                start_code: '# placera din kod här'
                story_text: "In level 16 we made songs using lists. These programs however are no longer working properly in this level. The colons from level 17 and the brackets from level 18 still need to be added.\n\n### Exercise 1\nThe Drunken sailor song is given as sample code, but not yet working.\nCan you make sure everything works again? To help you, we've put _ in the places of _some_ errors.\n\n### Exercise 2\nNow also look up your Old MacDonald song from level 16, and correct it.\n"
                example_code: "```\nlines = ['what shall we do with the drunken sailor', 'shave his belly with a rusty razor', 'put him in a long boat till hes sober']\n{for} line {in} lines _\n    {for} i {in} {range} 1 {to} 3 _\n        {print} _ line _\n    {print} 'early in the morning'\n    {for} i {in} {range} 1 {to} 3\n        {print} 'way hay and up she rises'\n    {print} 'early in the morning'\n```\n"
        name: Sjung en sång!
        description: Skriv ut en sång
        default_save_name: Sång
    turtle:
        name: Sköldpadda
        description: Gör din egen ritning
        default_save_name: Sköldpadda
        levels:
            1:
                story_text: "Du kan också rita med Hedy. Genom att kombinera svängar och linjer kan du göra en fyrkant eller trappa!\n\nMed `{forward}` ritar du en linje framåt. Talet efter avgör hur långt sköldpaddan kommer att gå. `{turn} {right}` vrider ett kvarts varv medurs, `{turn} {left}` vrider moturs.\n\nOm du vill gå bakåt använder du kommandot `{forward}` men med ett negativt tal. Till exempel `{forward} -100`\n\n### Övning\nDet här är början på en liten trappa. Kan du göra så den får fem steg?\n"
                example_code: "```\n{forward} 50\n{turn} {right}\n{forward} 50\n{turn} {left}\n{forward} 50\n```\n"
                start_code: "{forward} 50\n{turn} {left}"
            8:
                start_code: angles = {ask} 'How many angles should I draw?'
                story_text: "Nu när vi kan upprepa flera rader kan vi lättare skapa figurer.\nVi behöver bara ställa in vinkeln en gång och sedan använda den variabeln i `{repeat}`.\n\n### Övning 1\nExempelkoden skapar en kvadrat. Ändra koden så att den skapar en annan figur, till exempel en triangel eller en sexhörning. \nDetta kräver en ändring av två kodrader.\nTips: En hel cirkel är 360 grader.\n\n### Övning 2\nSkapa nu en ritning som består av minst två polygoner.\n"
                example_code: "```\nvinkel = 90\n{repeat} 4 {times}\n    {turn} vinkel\n    {forward} 50\n```\n"
                story_text_2: "**(extra)** Vi kan nu förbättra programmet för att rita olika figurer. Gör klart koden och du kan rita vilken polygon som helst!\n"
                example_code_2: "```\nangles = {ask} 'How many angles should I draw?'\nangle = 360 / angles\n{repeat} angle {times}\n    {turn} _\n    {forward} _\n```\n"
            2:
                story_text: "In this level you can use variables to make the turtle interactive. For example you can ask the player how many steps the turtle must make.\n"
                example_code: "```\nsvar {is} {ask} Hur många steg ska sköldpaddan ta?\n{forward} svar\n```\n"
                story_text_2: "På nivå 1 kunde sköldpaddan dessutom bara svänga till vänster eller höger. Det är lite tråkigt!\nPå nivå 2 kan den peka med näsan åt alla håll.\n\nAnvänd 90 för att vrida en kvarts varv. Vi kallar detta för grader. Ett helt varv är 360 grader.\n\n### Övning\nKan du göra en figur med den här koden? Kanske en triangel eller en cirkel?\n"
                example_code_2: "```\n{print} Rita figurer\nvinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} Sköldpaddslopp!\nvinkel {is} 90\n{turn} vinkel\n{forward} 25"
            3:
                example_code: "```\nvinklar {is} 10, 50, 90, 150, 250\n{turn} vinklar {at} {random}\n{forward} 25\n```\n"
                story_text: "På den här nivån kan du använda `{at} {random}` med sköldpaddan. Ett slumpmässigt val gör att sköldpaddan går en annan väg varje gång.\nAnvänd `{at} {random}` för att välja ett värde från en lista.\n### Övning\nKan du kopiera och klistra in rad 2 och 3 för att skapa en längre slumpmässig väg?\n"
                start_code: "vinklar {is} 10, 50, 90, 150, 250\n{turn} vinklar {at} {random}\n{forward} 25"
            4:
                story_text: "In level 4 you have to use quotation marks with `{print}` and `{ask}`. Also when drawing!\n"
                example_code: "```\n{print} _ Rita figurer _\nvinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} 'Rita figurer'\nvinkel {is} 90\n{turn} vinkel\n{forward} 25"
                example_code_2: "```\n{color} {white}\n{forward} -80\n{color} {green}\n{forward} 50\n{color} {yellow}\n{forward} 50\n{color} {red}\n{forward} 50\n```\n"
                story_text_2: "You can also change the color of the lines with the command `{color}`. Check out the example.\nYou can also use the command `{color} {white}` to make 'invisible' lines. You could use these white lines to move the turtle anywhere in the screen before you start drawing.\n"
            5:
                example_code: "```\n{print} 'Rita figurer'\nfigur {is} {ask} 'Vill du ha en kvadrat eller en triangel?'\n{if} figur {is} triangel vinkel {is} 120\n{else} vinkel {is} 90\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n{turn} vinkel\n{forward} 25\n```\n"
                start_code: "{print} 'Rita figurer'\nfigur {is} {ask} 'Vill du ha en kvadrat eller triangel?'\n{if} figur {is} triangel vinkel {is} 120 {else} vinkel {is} 90\n{turn} vinkel\n{forward} 25"
                story_text: "In level 5 you can make a choice with `{if}`. For example between different types of figures.\n"
                story_text_2: "### Övning\nFyll i rätt tal i den här koden för att få det att fungera.\nNär du har gjort det kan du försöka lägga till alternativet baklänges.\n\n**Extra** Istället för att använda 'vänster' och 'höger', gör om programmet med nord, ost, syd och väst.\nPå så sätt kan du lägga till ännu fler vägbeskrivningar som nordost och sydväst etc.\n"
                example_code_2: "```\nriktning {is} {ask} \"Vill du gå åt vänster, höger eller rakt fram?\n{if} riktning {is} vänster {turn} _\n{if} riktning {is} höger {turn} _\n{forward} 100\n```\n"
            6:
                story_text: "In this level you can use calculations to draw different figures.\nYou may have learned in school that turning a full circle is 360 degrees. If not, now you know!\nThat's why you also use 90 degrees for a square. 360 divided by 4 is 90.\nNow that we can do math with Hedy, we can draw all the figures we want!\n"
                example_code: "```\nvinklar = {ask} 'Hur många vinklar vill du ha?'\nvinkel = 360 / vinklar\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n{forward} 50\n{turn} vinkel\n```\n"
                start_code: "{print} 'Rita figurer'"
            9:

                start_code: '# place your code here'
                story_text: "Now that we can use a `{repeat}` inside a `{repeat}`, we can create more complex figures.\n\n### Exercise 1\nThis code creates three black triangles, change that into five pink squares.\n\n **(extra)** Create a figure of your own choosing consisting of at least two different shapes types.\n"
                example_code: "```\n{color} {black}\n{repeat} 3 {times}\n    {repeat} 3 {times}\n        {forward} 10\n        {turn} 120\n    {color} {white}\n    {forward} 50\n    {color} {black}\n```\n"
    dishes:
        name: Dishes?
        levels:
            4:
                story_text: "Med citattecken kan du göra ditt diskprogram ännu bättre.\n\n### Övning\nFyll först i rätt symboler eller kommandon i tomrummen för att få detta exempelprogram att fungera.\nFick du rätt på det? Bra! Kopiera nu din egen kod från föregående nivå och få den att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\npeople {is} mom, dad, Emma, Sophie\n{print} _ the dishes are done by _\n{sleep}\n{print} people {at} _\n```\n"
                start_code: "{print} 'Who does the dishes?'"
            10:
                example_code: "```\ndays = Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday\nnames = mom, dad, Emma, Sophie\n{for} day {in} days\n    {print} names {at} {random} ' does the dishes on ' day\n```\n"
                start_code: '# place your code here'
                story_text: "På den här nivån kan du göra ett schema för hela veckan på ett enkelt sätt!\n\n### Övning\nLägg till en andra syssla, t.ex. dammsugning eller städning, och se till att den också är uppdelad för hela veckan.\n<br> **(extra)** Programmet är inte rättvist, du kan ha otur och behöva diska hela veckan. Hur skulle du kunna göra programmet mer rättvist?\n"
            3:
                story_text: "Är ni alltid oense hemma om vem som ska diska eller göra vid kattlådan idag?\nDå kan du låta datorn välja mycket rättvist. Det kan du programmera på den här nivån!\n"
                example_code: "```\npeople {is} mom, dad, Emma, Sophie\n{print} people {at} {random}\n```\n"
                story_text_2: "### Övning\nGör en egen version av programmet för diskmaskinen. Gör först en lista över dina familjemedlemmar.\nTänk sedan ut en uppgift som måste göras och låt datorn bestämma vem som ska göra uppgiften med kommandot `{at} {random}`.\n\n**Extra** Känner du inte för att diska själv? Hacka programmet genom att ta bort ditt namn från listan med kommandot `{remove}` `{from}`.\n"
                start_code: '{print} Who does the dishes?'
            6:
                story_text_2: "If you are extremely unlucky the previous program might choose you to to the dishes for the whole week! That's not fair!\nTo create a fairer system you can use the `{remove}` command to remove the chosen person from the list. This way you don't have to do the dishes again untill everybody has had a turn.\n\nMonday and tuesday are ready for you! Can you add the rest of the week?\nAnd... can you come up with a solution for when your list is empty?\n"
                story_text: "How often is everyone going to do the dishes? Is that fair? You can count it in this level.\n"
                example_code: "```\npeople = mom, dad, Emma, Sophie\nemma_washes = 0\ndishwasher = people {at} {random}\n{print} 'The dishwasher is' dishwasher\n{if} dishwasher {is} Emma emma_washes = emma_washes + 1\n{print} 'Emma will do the dishes this week' emma_washes 'times'\n```\n\nNow you can copy lines 3 to 5 a few times (e.g. 7 times for a whole week) to calculate for a whole week again.\nDo you make the code for the whole week?\n"
                example_code_2: "```\npeople = mom, dad, Emma, Sophie\ndishwasher = people {at} {random}\n{print} 'Monday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n{print} 'Tuesday the dishes are done by: ' dishwasher\n{remove} dishwasher {from} people\ndishwasher = people {at} {random}\n```\n"
                start_code: "{print} 'Who does the dishes?'"
            5:
                story_text: "Med `{if}` kan du nu ha roligare valmöjligheter i programmet. Du kan låta programmet reagera på datorns val.\n### Övning\nKan du avsluta koden så att den skriver ut 'tyvärr' när det är din tur och annars 'ja!'?\nGlöm inte citattecken!\n"
                example_code: "```\npersoner {is} mamma, pappa, Emma, Sophie\ndiskmaskin {is} personer {at} {random}\n_ diskmaskin {is} Sophie {print} _ Synd att jag måste diska.\n_ {print} 'som tur är ingen disk eftersom' _ 'redan diskar'\n```\n"
                start_code: "{print} 'Who does the dishes?'"
            7:
                story_text: "Med `{repeat}` kan du upprepa delar av koden. Du kan använda detta för att beräkna vem som kommer att diska under flera dagar!\n### Övning\nAnvänd kommandot `{repeat}` för att bestämma vem som ska diska under en hel vecka. Varje tomrum måste fyllas med ett kommando eller ett tal!\n**(extra)** Kan du komma på andra uppgifter i huset? Anpassa koden så att den beslutar om tre hushållssysslor. Glöm inte att skriva ut vilka uppgifter det handlar om!\n"
                example_code: "```\npeople = mom, dad, Emma, Sophie\n{repeat} _ _ {print} 'the dishwasher is' _\n```\n"
                start_code: "{print} 'Who does the dishes?'"
        description: Use the computer to see who does the dishes (Start at level 2)
        default_save_name: Dishes
    dice:
        name: Dice
        description: Make your own dice
        default_save_name: Dice
        levels:
            3:
                story_text: "In this level we can choose from a list. With that we can let the computer choose one side of the die.\nTake a look at the games you have in your closet at home.\nAre there games with a (special) die? You can also copy it with this code.\nFor example, the dice of the game Earthworms with the numbers 1 to 5 and an earthworm on it.\n\n![Die of earthworms with 1 to 5 and an earthworm on it](https://cdn.jsdelivr.net/gh/felienne/hedy@24f19e9ac16c981517e7243120bc714912407eb5/coursedata/img/dobbelsteen.jpeg)\n"
                example_code: "```\nchoices {is} 1, 2, 3, 4, 5, earthworm\n{print} choices {at} {random}\n```\n"
                start_code: '{print} What will the die indicate this time?'
                story_text_2: "### Exercise\nThe dice in the example above are dice for a specific game. Can you make normal dice?\nOr other special dice from a different game?\n"
                example_code_2: "```\nchoices {is} _\n```\n"
            4:
                start_code: "{print} 'What will the die indicate this time?'"
                story_text: "På den här nivån kan du också skapa tärningar. Men den här gången kan du prova det själv, utan exempelkod!\n\n### Övning\nGör dina egna tärningar i den här nivån.\nTips: Om du inte har någon aning om hur man gör tärningar. Ta en titt på dina tärningar från föregående nivå, men glöm inte att lägga till citattecken.\n"
            5:
                story_text: "Vi ska lägga till kommandona `{if}` och `{else}` till vår tärning!\n\n### Övning\nKomplettera exempelkoden så att koden säger \"Du kan sluta kasta\" när du har kastat en daggmask. Den ska säga \"Du måste kasta igen\" om du har kastat något annat.\n**Extra** Kanske vill du återskapa en tärning från ett helt annat spel. Det går också bra! Hitta då på en egen reaktion, t.ex. 'ja' för 6 och 'synd' för något annat.\n"
                start_code: "{print} 'What will the die indicate this time?'"
                example_code: "```\nvalmöjligheter {is} 1, 2, 3, 4, 5, daggmask\nkast {is} val {at} {random}\n{print} 'du har kastat' valmöjligheter\n_ throw {is} daggmask {print} 'Du kan sluta kasta.'\n_ {print} 'Du måste kasta igen!'\n```\n"
            6:
                story_text: "Du kan också låta en daggmask dö igen, men nu kan du också beräkna hur många poäng som har kastats.\nDu kanske vet att masken räknar fem poäng för daggmaskar. Nu kan du efter ett kast direkt räkna ut hur många poäng du har kastat.\nDetta är koden för att beräkna poäng för en tärning:\n\n### Övning\nKan du göra koden så att du får fram den totala poängen för åtta tärningar? För att göra det måste du klippa och klistra in några rader i koden.\n"
                start_code: "{print} 'What will the die indicate this time?'"
                example_code: "```\nval = 1, 2, 3, 4, 5, daggmask\npoäng = 0\nkast = val {at} {random}\n{print} 'du kastade' kast\n{if} kast {is} daggmask poäng = poäng + 5 {else} poäng = poäng + kast\n{print} 'det är' poäng 'poäng'\n```\n"
                example_code_2: "\nDid you manage to calculate the score for 8 dice? That required a lot of cutting and pasting, right? We are going to make that easier in level 7!\n"
            7:
                story_text: "Du kan också göra en tärning igen på nivå 5. Med `{repeat}` -koden kan du enkelt kasta en handfull tärningar.\n\n### Övning\nFörsök att avsluta exempelkoden!  **(extra)** Tänk på ett spel du känner till som använder en tärning och programmera det med hjälp av `{repeat}`.\n"
                example_code: "```\nval = 1, 2, 3, 4, 5, 6\n_ _ _ _ _ _ _\n```\n"
                start_code: "{print} 'What will the die indicate this time?'"
            10:
                story_text: "### Övning\nÄr alla för långsamma på att kasta tärning? På den här nivån kan du låta Hedy kasta allas tärningar på en gång!\nByt ut namnen mot namnen på dina vänner eller familj och avsluta koden så att alla kastar.\n"
                example_code: "```\nspelare = Ann, John, Jesse\nval = 1, 2, 3, 4, 5, 6\n_ _ _ _\n    {print} 'spelare ' kastar ' val {at} {random}\n   {sleep}\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "In this game you have to throw 6 in as little tries as possible.\n"
                example_code: "```\noptions = 1, 2, 3, 4, 5, 6\n{print} 'Throw 6 as fast as you can!'\nthrown = 0\ntries = 0\n{while} thrown != 6\n    thrown = options {at} {random}\n    {print} 'You threw ' thrown\n    tries = tries + 1\n{print} 'Yes! You have thrown 6 in ' tries ' tries.'\n```\n"
                start_code: '# place your code here'
    rock:
        description: Make your own rock, paper, scissors game
        levels:
            15:
                start_code: '# place your code here'
                story_text: "Play until you beat the computer! But first, finish the example code...\n"
                example_code: "```\nvunnit = 'nej'\nalternativ = 'sten', 'sax', 'påse'\n{while} vunnit == 'nej'\n    ditt_val = {ask} 'Vad väljer du?'\n    datorval = alternativ {at} {random}\n    {print} 'du valde ' ditt_val\n    {print} 'datorn valde ' datorval\n    {if} datorval == ditt_val\n        {print} 'Oavgjort!'\n    {if} computer_choice == 'sten' {and} your_choice == 'sax'\n        {print} 'Du förlorade!'\n    {if} computer_choice == 'sten' {and} your_choice == 'påse'\n        {print} 'Du vann!'\n        vunnit = 'ja'\n_\n```\n"
            1:
                story_text: "I nivå 1 kan du börja med ett sten, sax, påse-spel.\n\nMed `{ask}` kan du göra ett val, och med `{echo}` kan du upprepa det valet.\n"
                example_code: "```\n{print} Vad väljer du?\n{ask} Välj mellan sten, sax eller påse.\n{echo} Så ditt val var:\n```\n"
                start_code: '{print} Välkommen till din egen sten sax påse!

                    {ask} Vad väljer du?

                    '
                story_text_2: "### Övning\nIstället för att använda ord skulle man kunna använda emojier: ✊✋✌\nKan du skriva en kod med emojier?\n"
                example_code_2: "```\n{print} what do you choose?\n{ask} choose from _\n{echo} so your choice was:\n```\n"
            2:
                story_text: "På den här nivån kan du öva på att variablerna, så att du kan göra spelet sten, sax, påse på nästa nivå!\n### Övning\nAvsluta koden genom att fylla i **variabeln** i tomrummen.\nDet här spelet är inte särskilt interaktivt, men inga bekymmer! På nästa flik kommer du att lära dig hur du använder variabler med kommandot `{ask}` för att göra ditt spel interaktivt!\n"
                example_code: "```\nval är sten\n{print} Jag väljer _\n```\n"
                start_code: '# place your code here'
            3:
                story_text: "Du kan använda kommandot `{at} {random}` för att låta datorn välja sten, sax eller påse!\n\n### Övning\nAvsluta koden genom att använda kommandot `{at} {random}`.\n"
                example_code: "```\nval {is} sten, sax, påse\n{print} val _\n```\n"
                start_code: '{print} Welcome to your own rock scissors paper!'
                story_text_2: "**Extra** Gör ett spel för två spelare. Be först de två spelarna att mata in sina namn. Låt sedan datorn slumpmässigt välja åt dem.\n"
                example_code_2: "```\nval {is} sten, sax, påse\nspelare_1 {is} {ask} Namn på spelare 1:\n_\n```\n"
            4:
                story_text: "På den här nivån kan vi också programmera sten, sax, påse. Men om du vill lägga till text måste du använda citattecken även här.\n### Övning\nKopiera din kod från föregående nivå och få den att fungera genom att använda citattecken efter varje `{print}` - eller `{ask}` -kommando.\n"
                start_code: "{print} 'Welcome to your own rock scissors paper!'"
            5:
                story_text: "På den här nivån kan vi avgöra om det är oavgjort eller inte. För det behöver du den nya koden `{if}`.\n\n### Övning\nAvsluta koden genom att fylla i luckorna:\n* Låt datorn välja ett slumpmässigt alternativ\n* Fråga spelaren vad han eller hon vill välja\n* Fyll i de korrekta variablerna på rad 4 och 5.\n* Programmera rad 6 så att Hedy kan kolla om det är oavgjort eller inte.\n"
                example_code: "```\nalternativ {is} sten, sax, påse\ndatorns_val {is} _\nval {is} _\n{print} 'du valde ' _\n{print} 'datorn valde ' _\n{if} _ {is} _ {print} 'oavgjort!' {else} {print} 'inte oavgjort'\n```\n\nFyll i rätt kod i tomrummen för att se om det är oavgjort.\n"
                start_code: "{print} 'Welcome to your own rock scissors paper!'"
            9:
                story_text: "På den här nivån kan du programmera hela spelet sten, sax, påse genom att nästla `{if}` -kommandon. \n\n### Övning\nKan du göra klart koden? Programmet behöver berätta vem som har vunnit för varje kombination.\n\n**(extra)** Vill du spela mer än en omgång? Utöka koden så att du kan spela flera omgångar. Du kan till och med använda en `{ask}` för att fråga användaren hur många rundor hen vill spela.\n"
                example_code: "```\nchoices {is} rock, paper, scissors\nyour_choice {is} {ask} 'What do you choose?'\n{print} 'You choose ' your_choice\ncomputer_choice {is} choices {at} {random}\n{print} 'The computer chooses ' computer_choice\n{if} computer_choice {is} your_choice\n    {print} 'Tie'\n{if} computer_choice {is} rock\n    {if} your_choice {is} paper\n        {print} 'You win!'\n    {if} your_choice {is} scissors\n        {print} 'You lose!'\n# finish this code\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "### Övning\nPå de tidigare nivåerna har du ofta gjort ditt eget sten-sax-påse-spel. Kan du skriva klart koden och använda kommandot {for} rätt så spelet fungerar?\n"
                example_code: "```\nval = _\nspelare = _\n{for} _\n```\n"
                start_code: '# place your code here'
            13:
                story_text: "Med kommandot `{and}` kan du förkorta din sten-, sax-, påsekod! Kolla in exempelkoden.\n\n### Övning\nGör färdigt koden så att en vinnare alltid koras. Kör din kod några gånger för att kolla att vinnaren alltid skrivs ut.\n"
                example_code: "```\nalternativ = 'sten', 'sax', 'påse'\nditt val = {ask} 'Vad väljer du?'\ndatorval = alternativ {at} {random}\n{print} 'Du väljer' ditt_val\n{print} 'Datorn väljer ' datorval\n{if} datorval {is} ditt_val\n    {print} 'Oavgjort'\n{if} datorval {is} 'sten' {and} ditt_val {is} 'påse'\n    {print} 'Du vann!'\n{if} datorval {is} 'sten' {and} ditt_val {is} 'sax'\n    {print} 'Datorn vann!'\n_\n```\n"
                start_code: '# place your code here'
        name: Rock, paper, scissors
        default_save_name: Rock
    calculator:
        name: Calculator
        description: Create a calculator
        default_save_name: Calculator
        levels:
            6:
                story_text: "Now that you can calculate, you can also create a program to practice maths calculations. You can make up the calculations yourself, for example:\n"
                example_code: "```\ntal_1 {is} {ask} 'Mata in första talet:'\ntal_2 {is} {ask} 'Mata in andra talet:'\nrätt_svar = tal_1 * tal_2\n{print} tal_1 ' gånger ' tal_2 ' är ' rätt_svar\n```\n"
                story_text_2: "### Övning\nKalkylatorn här ovanför räknar ut svaret åt dig, men du kan också göra ett program för att testa dina egna matteskills, så här:\nFyll i luckorna för att göra det klart!\n"
                example_code_2: "```\nrätt_svar = 11 * 27\nanswer = {ask} 'Hur mycket är 11 gånger 27?'\n{if} svar {is} _ {print} 'Bra jobbat!'\n{else} {print} 'Fel! Det var ' _\n```\n"
                start_code: "{print} 'Welcome to this calculator!'"
                story_text_3: "\n**Extrauppgift** Du kan också låta datorn göra slumpmässiga summor på egen hand med random.\n\nSå här väljer du ett antal tabeller att öva på och av det får du alltid en annan summa:\n"
            9:
                story_text: "På nivå 6 gjorde du en miniräknare och på den här nivån kan du utöka den koden så att den ställer flera frågor.\n\n### Övning 1\nKan du avsluta rad 10 så programmet fungerar?\n\n### Övning 2\nGe spelaren feedback när den matar in rätt eller fel svar. För att göra det behöver du lägga till ett `{else}`.\n"
                example_code: "```\npoäng = 0\n{repeat} 10 {times}\n    tal = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    tal1 = tal {at} {random}\n    tal2 = tal {at} {random}\n    korrekt_svar = tal1 * tal 2\n    {print} 'Vad är ' tal1 ' gånger ' tal2 '?'\n    svar = {ask} 'Skriv ditt svar här ...'\n    {print} 'Du svarade' svar\n    {if} _ {is} _\n        poäng = poäng + 1\n{print} 'Bra jobbat! Du har ... ' poäng ' av 10 poäng!'\n```\n"
                start_code: "{print} 'Welcome to this calculator!'"
            12:
                start_code: '# place your code here'
                story_text: "På den här nivån kan du göra en miniräknare som fungerar för decimaltal.\n\n### Övning 1\nFyll i tomrummen för att göra klart miniräknaren. Kom ihåg att använda punkt och inte komma för decimaltal.\n\n### Övning 2\nSkapa ett nytt matematikövningsprogram, men använd nu decimaltal.\nSkapa en lista med tal, välj två som ska multipliceras och låt spelaren svara.\nOch naturligtvis måste du kolla svaret! **(extra)** Öka svårighetsgraden genom att lägga till liv: En spelare förlorar ett liv för ett felaktigt svar och efter tre felaktiga svar slutar spelet.\n"
                example_code: "```\nnumber1 = {ask} 'What is the first number?'\nnumber2 = {ask} 'What is the second number?'\nanswer = number1 + number2\n{print} number1 ' plus ' number2 ' is ' answer\n```\n"
            14:
                story_text: "In this level you can programm the game 'Guess which number'\n"
                example_code: "```\n{print} 'Guess which number'\nnumbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nnumber = numbers {at} {random}\ngame = 'on'\n{for} i {in} {range} 1 {to} 10\n    {if} game == 'on'\n        guess = {ask} 'Which number do you think it is?'\n        {if} guess > number\n            {print} 'Lower!'\n        {if} guess < number\n            {print} 'Higher!'\n        {if} guess == number\n            {print} 'You win!'\n            game = 'over'\n```\n"
                start_code: '# place your code here'
            10:
                story_text: "Det här räknespelet hjälper dig att öva på multiplikationstabellerna!\n### Övning\nKan du lägga till fler tal i listan så du kan öva multiplikationstabellerna upp till 10?\n"
                example_code: "```\nnumbers = 1, 2, 3\n{for} number1 {in} numbers\n    {for} number2 {in} numbers\n        answer = {ask} 'How much is ' number2 ' times ' number1 '?'\n        correct = number1 * number2\n        {if} answer {is} correct\n            {print} 'Great job!'\n        {else}\n            {print} 'Thats wrong. The right answer is ' correct\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "Du kan lägga till `{while}` -slingan i räknespelet som du lärder dig göra på en tidigare nivå.\nDet gör att spelaren inte kan fortsätta till nästa fråga om den svarar fel.\n"
                example_code: "```\nscore = 0\n{for} i {in} {range} 0 {to} 9\n    numbers = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    number1 = numbers {at} {random}\n    number2 = numbers {at} {random}\n    correct = number1 * number2\n    answer = 0\n    {while} answer != correct\n        {print} 'How much is ' number1 ' times ' number2 '?'\n        answer = {ask} 'Fill in your answer:'\n        {print} 'Your answer is ' answer\n    {print} 'Good job!'\n{print} 'You win!'\n```\n"
                start_code: '# place your code here'
            11:
                story_text: "With a `{for}` you can simplify tables of multiplication practise program.\n\n### Exercise 1\nImprove the example code such that it prints a nice multiplication table: <br> \"1 times 10 is 10\", \"2 times 10 is 20\", etc.\n\n### Exercise 2\nGo back to your level 10 multiplication code, and modify it so that it uses a `{for}` and `{range}`.\n"
                example_code: "```\nnumber = 10\n{for} i {in} {range} 1 to 10\n    {print} i * number\n```\n"
                start_code: '# place your code here'
            13:
                example_code: "```\nanswer1 = {ask} 'What is 10 times 7?'\nanswer2 = {ask} 'What is 6 times 7?'\n{if} _ _ _ _ _ _ _\n    {print} _\n```\n"
                story_text: "\n### Exercise 1\nLet's make the practice program a bit harder. The player now has to answers two questions correctly. Fill out the blanks to complete the program.\n\n### Exercise 2 (extra)\nSometimes, calculations have multiple correct answers. For example, 10 can be divided by 5 and by 2. So the question 'What number divides 10?' can be answered by 2 and by 5.\nAsk for a calculation that has multiple correct answers, ask the player to answer it, and determine if it is correct using `{or}`.\nEmpty the programming field and create your own solution.\n"
                start_code: '# Schrijf jouw code hier'
    restaurant:
        levels:
            4:
                start_code: '# place your code here'
                story_text: "På den här nivån måste du använda citattecken när du använder kommandona `{print}` eller `{ask}`.\n\n### Övning\nLägg till citattecken i den här koden för att få det att fungera! Var försiktig: variabler ska inte stå inom citattecken.\n\n### Övning 2\nGå tillbaka till förra nivån och kopiera din restaurangkod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\n_ Lägg till citattecken i den här koden _\n{print} Välkommen till Restaurang Chez Hedy!\n{print} Idag serverar vi pizza eller lasagne.\nmat {is} {ask} Vad vill du äta?\n{print} Bra val! Det är min älsklingsrätt!\ntopping {is} {ask} Vill du ha kött eller grönsaker till det?\n{print} mat med topping är på väg!\ndryck {is} {ask} Vad vill du dricka till?\n{print} Tack för din beställning.\n{print} Din mat och dryck kommer strax!\n```\n"
            5:
                story_text: "### Övning\nExempelkoden visar hur du kan programmera att du har slut på ett menyalternativ i din restaurang.\nKopiera din egen restaurangkod från de tidigare nivåerna. Skapa ett problem i din restaurang och koda det, som i exempelkoden.\nDu kan till exempel också få slut på ett menyalternativ, eller så tar du inte kreditkort eller så är glassmaskinen trasig.\n\n**Extrauppgift** Har du programmerat problemet och lämpliga svar? Försök sedan att lägga till fler `{if}`- och `{else}`-kommandon i din kod.\nFörsök att lägga till en `{if}` efter varje `{ask}`-kommando i din kod för att göra den så interaktiv som möjligt!\n"
                example_code: "```\ndrycker_i_lager {is} vatten, läsk, cola, apelsinjuice\ndryck {is} {ask} 'Vad vill du dricka?'\n{if} dryck {in} drycker_i_lager {print} 'En' drink 'på väg!'\n{else} {print} 'Tyvärr, vi har inte det'\n```\n"
                start_code: '# place your code here'
            9:
                start_code: '# place your code here'
                story_text: "På den här nivån kan du använda dig av nästlad kod för att göra din restaurang mer realistisk och roligare!\n\n### Övning\nIndragen (mellanslagen) togs bort i exempelkoden. \nKan du räkna ut hur mycket indrag varje rad behöver för att koden ska fungera korrekt?\nOm kunden beställer pizza ska Hedy inte fråga vilken sås kunden vill ha.\n\n**(extra)** En restaurang har inte alla såser i lager. Gör en lista över tillgängliga såser och ge ett svar vid varje beställning om ni säljer den. <br>\n**(extra)** Pizzor har en fyllning. Fråga kunderna vad de vill ha.<br>\n**(extra)** Vill kunderna ha något att dricka? Fråga dem också! <br>                    \n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy!'\npeople = {ask} 'Hur många personer är det i sällskapet?'\n{print} 'Bra!'\npris = 0\n{repeat} personer {times}\n_ mat = {ask} 'Vad önskas?'\n_ {print} mat\n_ {if} mat {is} pommes frites\n_ pris = pris + 3\n_ sås = {ask} 'Vilken typ av sås vill du ha till dina pommes frites?'\n_ {if} sås {is} nej\n_ {print} 'ingen sås'\n_ {else}\n_ pris = pris + 1\n_ {print} 'med ' sås\n_ {if} mat {is} pizza\n_ pris = pris + 4\n{print} 'Det blir ' pris ' dollar'\n{print} 'Smaklig måltid!'\n```\n"
            10:
                story_text: "På den här nivån lär du dig hur du enkelt tar upp beställningar för olika maträtter.\n\n### Övning 1\nGör klart koden med en `{ask}` där det är tomt så att kunden får en fråga vad de vill äta för varje rätt.\n"
                example_code: "```\nrätter = förrätt, varmrätt, efterrätt\n{for} rätt {in} rätter\n    {print} 'Vad önskas till ' rätt '?'\n    _\n    _\n```\n"
                story_text_2: "### Övning\nNaturligtvis kan du också beställa för flera personer!\nKan du lägga till rätt mängd indrag före varje rad så att koden fungerar korrekt?\nTips: Vissa rader behöver inte ha någon indragning alls.\n"
                example_code_2: "```\ncourses = appetizer, main course, dessert\nnames = Timon, Onno\n{for} name {in} names\n    {for} course {in} courses\n        food = {ask} name ', what would you like to eat as your ' course '?'\n        {print} name ' orders ' food ' as their ' course\n```\n"
                start_code: courses = appetizer, main course, dessert
            1:
                story_text: "På nivå 1 kan du göra din egen virtuella restaurang och ta emot dina gästers beställningar.\n"
                example_code: "```\n{print} Välkommen till Hedys restaurang 🍟\n_ Vad vill du beställa?\n{echo} Så du vill beställa\n{print} Tack för din beställning!\n{print} Den är på väg!\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nFyll först i rätt kommando på de tomma platserna för att koden ska fungera korrekt.\nLägg sedan till minst fyra rader kod till restaurangprogrammet.\nFråga kunden vad han eller hon vill dricka och fråga om han eller hon vill betala med kontanter eller kort.\nFundera till sist ut ett trevligt sätt att säga hejdå till din kund.\n"
                start_code: '# place your code here'
            2:
                story_text: "På nivå 2 kan du utöka din restaurang genom att använda variabler. På nivå 1 kunde Hedy bara `{echo}` beställningen en gång och bara komma ihåg det sista som beställdes.\nNu kan du använda variabler och Hedy kan komma ihåg både maten och påläggen!\n"
                example_code: "```\n{print} Välkommen till Hedys restaurang!\n{print} Idag serverar vi pizza eller lasagne.\nmat {is} {ask} Vad vill du äta?\n{print} Bra val! Det är min älsklingsrätt!\ntopping {is} {ask} Vill du ha kött eller grönsaker till?\n{print} mat med topping är på väg!\n```\n"
                start_code: '# place your code here'
                story_text_2: "#### Övning\nKopiera din egen restaurangkod från föregående nivå till inmatningsskärmen nedan.\nRätta koden genom att byta ut kommandona `{ask}` och `{echo}` och använda variabler, som du har lärt dig på den här nivån.\n\nNu när din kod fungerar igen är det dags att lägga till något mer.\nTitta på den sista raden i exempelkoden: `{print} mat med topping är på väg!`\nPå den raden används två variabler för att skapa en sammanfattning av beställningen.\nLägg nu till din egen sammanfattning av den mat och dryck som kunden beställt.\n\n**Extra** Nu när du har lärt dig hur man använder variabler kan du använda så många variabler i en rad som du vill. Kan du lägga till fler variabler i din kod, till exempel äta på plats eller take away, kontant eller kort, med eller utan sugrör osv.\n"
            3:
                story_text: "Having trouble to decide what you wanna have for dinner? You can let Hedy choose for you!\nSimply add lists of your favorite (or least favorite) meals and Hedy can randomly choose your dinner.\nYou can also have a bit of fun, by letting Hedy choose the price for your dinner as well! What will you get?\n"
                example_code: "```\nrätter {is} spagetti, brysselkål, hamburgare\n{print} Du kommer att få rätter {at} {random} ikväll!\npriser {is} 1 euro, 10 euro, 100 euro\n{print} Det kostar priser {at} {random} tack.\n```\n"
                story_text_2: "### Övning\nGör nu din egen version av den slumpmässiga restaurangen.\nGör själv en lista över förrätter, huvudrätter, efterrätter, drycker och priser.\nAnvänd sedan kommandona `{print}` och `{at} {random}` för att tala om för kunden vad som kommer att finnas menyn ikväll.\n"
                example_code_2: "```\n{print} Välkommen till din egen slumpmässiga restaurang!\nförrätter {is} _\nhuvudrätter {is} _\nefterrätter {is} _\ndrycker {is} _\npriser {is} _\n_\n```\n"
                start_code: '# place your code here'
            6:
                story_text: "På den här nivån kan du använda matematik för att beräkna det totala priset på din kunds beställning, vilket kan göra din virtuella restaurang mer realistisk.\nMen du kan också lägga till många fler saker till din virtuella restaurang, till exempel fler rätter.\n\n### Övning\nDu kan lägga till många fler saker till din virtuella restaurang. Kan du till exempel …\n- fråga hur många som kommer och multiplicera priset med det beloppet?\n- lägga till en ny rätt?\n- ge folk rabatt när de anger en (hemlig) kupongkod?\n- lägga till en barnmeny?\n- komma på andra roliga saker att lägga till?\n"
                example_code: "\nYou can make a simple restaurant code, like this:\n```\n{print} 'Welcome to Hedys restaurant'\n{print} 'Here is our menu:'\n{print} 'Our main courses are pizza, lasagne, or spaghetti'\nmain = {ask} 'Which main course would you like?'\nprice = 0\n{if} main {is} pizza price = 10\n{if} main {is} lasagne price = 12\n{if} main {is} spaghetti price = 8\n{print} 'You have ordered ' main\n{print} 'That will be ' price ' dollars, please'\n{print} 'Thank you, enjoy your meal!'\n```\n"
                start_code: '# place your code here'
            7:
                story_text: "På den här nivån har du lärt dig hur du använder kommandot `{repeat}` för att upprepa en kodrad ett visst antal gånger.\nDu kan använda det i din restaurang för att `{ask}` flera personer vad de vill äta.\n\n### Övning\nKan du komplettera koden? Hedy måste upprepa den här frågan lika många gånger som det finns människor. Så om det finns fem personer måste frågan ställas fem gånger.\n**(extra)** Utöka din kod med fler frågor, till exempel om drycker eller sås.\n"
                example_code: "```\n{print} 'Välkommen till restaurang Chez Hedy'\npeople = {ask} 'Hur många personer är det i sällskapet?'\n```\n"
                start_code: '# place your code here'
            11:
                start_code: '# place your code here'
                story_text: "Vi kan använda `{for}` med `{range}` för att skriva ut beställningar från flera kunder på ett ordnat sätt.\n\n### Övning\nAvsluta restaurangkoden så att du kan ta upp en beställning av flera personer. Skriv ut ordernumret varje gång: 'Order 1', 'Order 2' osv.\nÄr du osäker på hur du ska gå till väga? Ta en titt på din nivå 8-kod.\n\n**(extra)** På nivå 9 använde restaurangen även priser. Det kan du lägga till här också!\n"
                example_code: "```\n{print} 'Välkommen till restaurang Hedy!'\nmänniskor = {ask} 'För hur många personer vill du beställa?'\n{print} 'Du vill alltså beställa för ' människor ' människor.'\n{print} 'Då börjar vi!'\n```\n"
            12:
                story_text: "Från och med den här nivån kan du använda decimaltal för att göra menyn mer realistisk.\n\n### Övning\nKan du komma på en kod för att ge dina vänner och din familj 15% rabatt?\n"
                example_code: "```\nprice = 0\nfood = {ask} 'What would you like to order?'\ndrink = {ask} 'What would you like to drink?'\n{if} food {is} 'hamburger'\n    price = price + 6.50\n{if} food {is} 'pizza'\n    price = price + 5.75\n{if} drink {is} 'water'\n    price = price + 1.20\n{if} drink {is} 'soda'\n    price = price + 2.35\n{print} 'That will be ' price ' dollar, please'\n```\n"
                start_code: '# place your code here'
            8:
                story_text: "In this level you can make your virtual restaurant more elaborate by repeating multiple lines of code. Like this:\n"
                example_code: "```\n{print} 'Welcome to Hedys restaurant!'\npeople = {ask} 'How many people will be joining us today?'\n{print} 'Great!'\n{repeat} people {times}\n    food = {ask} 'What would you like to order?'\n    {print} food\n{print} 'Thank you for ordering!'\n{print} 'Enjoy your meal!'\n```\n"
                story_text_2: "### Övning\nDen här koden kan utökas med fler alternativ på menyn, t.ex. drycker och/eller flera rätter eller efterrätter. Lägg till minst ett ytterligare alternativ.\n**(extra)** Lägg till ännu fler artiklar, så många alternativ du vill!\n"
                start_code: '# place your code here'
            13:
                story_text: "På den här nivån kommer du att lära dig nya kommandon för att utöka din kod ytterligare.\n\n### Övning 1\nPlacera ett `{and}` och ett `{or}` på den logiska platsen i programmet.\n\n### Övning 2\nUtöka din restaurang med minst ett till `{and}` och ett `{or}`.\nSkapa till exempel en speciell rabattkupong som endast gäller pizza, eller ge din kund en gratis dryck\nmed pommes frites och pannkakor. Eller något helt annat förstås!\n"
                example_code: "```\n    {print} 'Detta är vår rabattmeny'\n    pris = pris - 3\n{if} dryck {is} 'vatten' _ dryck {is} 'juice'\n    {print} 'Det är ett hälsosamt val'\n{print} 'Det kostar ' pris ' dollar'\n```\n"
                start_code: '# place your code here'
            15:
                story_text: "With the `{while}` you can make sure your costumers can keep adding orders until they are done.\n"
                example_code: "```\n{print} 'Välkommen till McHedy'\nmer = 'ja'\n{while} mer == 'ja'\n    order = {ask} 'Vad vill du beställa?'\n    {print} order\n    mer = {ask} 'Vill du beställa något mer?'\n{print} 'Tack!'\n```\n"
                start_code: '# place your code here'
        name: Restaurant
        description: Create your own virtual restaurant
        default_save_name: Restaurant
    fortune:
        levels:
            1:
                story_text: "Har du någonsin varit på marknad och fått din framtid förutspådd av en spåkvinna? Eller har du någonsin spelat med en magisk åttaboll?\nDå vet du säkert att de inte riktigt kan förutse din framtid, men det är ändå kul att spela!\n\nPå de kommande nivåerna kan du lära dig hur du skapar din egen spåmaskin!\nPå nivå 1 kan du börja enkelt genom att låta Hedy presentera sig som en spåkvinna och låta henne `{echo}` spelarnas svar.\nSå här:\n"
                example_code: "```\n_ Hej, jag är spåkvinnan Hedy!\n_ Vem är du?\n_ Låt mig ta en titt i min kristallkula.\n_ Jag ser ... Jag ser ...\n_ Ditt namn är\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm och fyll i de tomma rutorna så att koden fungerar.\n**Extra** Ändra koden och låt spåkvinnan inte bara förutsäga ditt namn utan även din ålder, ditt favoritsportlag eller något annat om dig själv.\n"
                start_code: '# place your code here'
            3:
                story_text: "På de tidigare nivåerna har du skapat din första spåmaskin, men Hedy kunde inte förutsäga någonting, bara `{echo}`.\nPå den här nivån kan du använda en variabel och kommandot `{at} {random}` för att verkligen låta Hedy välja ett svar åt dig. Titta till exempel på den här koden:\n"
                example_code: "```\n{print} Jag är spådamen Hedy!\nfråga {is} {ask} Vad vill du veta?\n{print} Det här är vad du vill veta: fråga\nsvar {is} ja, nej, kanske\n{print} Min kristallkula säger …\n{sleep} 2\n{print} svar {at} {random}\n```\n"
                story_text_2: "### Övning\nJust nu kan Hedy bara svara ja, nej eller kanske. Kan du ge Hedy fler svarsalternativ, till exempel 'definitivt' eller 'fråga igen'.\n"
                start_code: '# place your code here'
            4:
                start_code: '# place your code here'
                story_text: "Den här nivån har inga nya funktioner, men ger dig chansen att öva på att använda citattecken.\nDu kan göra om din kod från nivå 3 och se till att lägga till citattecken på rätt ställen!\n\nTänk på att vi på nivå 3 inte kunde använda ordet 'fråga' både som namn på variabeln och som ett normalt ord som kan skrivas ut.\nCitattecken på nivå 3 gör detta möjligt!\n\n### Övning\nVi har tagit bort alla citattecken från den här exempelkoden; kan du lägga till dem på alla ställen där det behövs?\n\n### Övning 2\nGå tillbaka till den föregående nivån och kopiera din spådomskod. Få koden att fungera på den här nivån genom att lägga till citattecken på rätt ställen.\n"
                example_code: "```\n_ Lägg till citattecken i denna kod _\n{print} Jag är spåkvinnan Hedy!\nfråga {is} {ask} Vad vill du veta?\n{print} Detta är din fråga: fråga\nsvar {is} ja, nej, kanske\n{print} Min kristallkula säger ...\n{sleep} 2\n{print} svar {at} {random}\n```\n"
            10:
                story_text: "På den här nivån lär du dig att programmera spelet MASH (M=herrgård, A=lägenhet, S=stuga, H=hus). I det här spelet kan du förutsäga för alla spelare samtidigt hur deras framtid kommer att se ut.\n\n### Övning 1\nLägg till två namn i listan och se hur programmets utdata förändras när du kör det.\n"
                example_code: "```\nbostäder = en herrgård, en lägenhet, ett skjul, ett hus\nkärlekar = ingen, en kunglighet, sin granne, sin sanna kärlek\nhusdjur = hund, katt, elefant\nnamn = Jenna, Ryan, Jim\n_\n    {print} namn ' bor i ' bostäder {at} {random}\n    {print} namn ' kommer att gifta sig med ' älskar {at} {random}\n    {print} namn ' kommer att få en ' husdjur {at} {random} ' som husdjur.\n   {sleep}\n```\n"
                start_code: '# place your code here'
            5:
                story_text: "### Övning\nI exempelkoden ser du hur man gör ett spåprogram som låter dig vända oddsen till din fördel. Detta fuskprogram säger alltid att du kommer att vinna på lotteriet, men dina vänner kommer aldrig att vinna.\n\nAnvänd detta för att göra ditt eget program – var kreativ! Du kan till exempel skriva kod som förutspår att:\n* ditt favoritsportlag kommer att slå alla konkurrenter!\n* din favoritfilm kommer att väljas till filmkvällen!\n* du vinner biljetter till din favoritshow!\n* du är den vackraste av dem alla, som Snövits magiska spegel.\nSläpp loss din fantasi!\n\nDitt program måste bestå av minst 10 rader kod och måste ha minst ett `{if}`- och `{else}`-kommando.\n"
                example_code: "```\nvänner {is} Jordan, Lucy, Dave\n{print} 'Jag kan förutse om du kommer att vinna på lotteriet imorgon!'\nperson {is} {ask} 'Vem är du?'\nbra_svar {is} Hurra! Du vinner!, Du kommer definitivt att vinna!, Vi har en vinnare!\ndåligt_svar {is} Otur! Försök igen!, En annan person kommer att vinna, Du förlorar!\n{if} person {in} vänner {print} bra_svar {at} {random}\n{else} {print} dåligt_svar {at} {random}\n```\n"
                start_code: '# place your code here'
            6:
                story_text: "På den här nivån kan du använda matematik i dina förutsägelser som spåkvinna. Detta gör att du kan hitta på (fåniga) formler för att beräkna framtiden.\nDu kan till exempel beräkna hur rik du kommer att bli eller hur många barn du kommer att få när du blir vuxen.\n\n\n\n### Övning\nKan du hitta på en egen (fånig) spåmaskin?\n"
                example_code: "```\n{print} 'Jag är spådamen Hedy!'\n{print} 'Jag kan förutsäga hur många barn du kommer att få när du blir stor!\"\nålder = {ask} 'Hur gammal är du?'\nsyskon = {ask} 'Hur många syskon har du?'\nlängd = {ask} 'Hur lång är du i centimeter?'\nbarn = längd / ålder\nbarn = barn - syskon\n{print} 'Du kommer att få …'\n{sleep}\n{print} barn ' barn!'\n```\n"
                start_code: '# place your code here'
            7:
                story_text: "### Övning\nAvsluta det här programmet som talar om för dig om din crush älskar dig tillbaka eller inte.\n"
                example_code: "```\n{print} 'Jag har en blomma med magiska kronblad'\n{print} 'Om du plockar kronbladen kommer blomman att berätta för dig om din crush älskar dig tillbaka'\nantal = {ask} 'Hur många kronblad vill du välja?'\nalternativ = de älskar dig, de älskar dig inte\n_ _ _ _ alternativ {at} {random}\n```\n"
                start_code: '# place your code here'
            8:
                example_code: "```\n{print} 'Jag är spåkvinnan Hedy!'\n{print} 'Du kan ställa tre frågor till mig.'\nsvar = ja, nej, kanske\n_ _ _\n   fråga = {ask} 'Vad vill du veta?'\n   {print} fråga\n   {sleep}\n   {print} 'Min kristallkula säger ...' svar {at} {random}\n```\n"
                start_code: '# place your code here'
                story_text: "I nästa exempel kan du låta din spådam ställa flera frågor och även skriva ut dem!\n\n### Övning\nKan du fylla i rätt kommando på de tomma platserna?\n"
            12:
                story_text: "Från och med nivå 12 måste du också använda citattecken i listor, före och efter varje punkt.\n\n### Övning\nLägg till två förutsägelser i listan"
                example_code: "```\nfortunes = 'you will be rich', 'you will fall in love', 'you will slip on a banana peel'\n{print} 'I will take a look in my crystall ball for your future.'\n{print} 'I see... I see...'\n{sleep}\n{print} fortunes {at} {random}\n```\n"
                start_code: '# place your code here'
        name: Fortune teller
        description: Let Hedy predict the future
        default_save_name: Fortune Teller
    haunted:
        levels:
            4:
                example_code: "```\n_ Lägg till citattecken till denna kod _\n{print} Fly från spökhuset!\n{print} Det finns tre dörrar framför dig ...\nval {is} {ask} Vilken dörr väljer du?\n{print} Du valde dörr ... val\nmonster {is} en zombie, en vampyr, INGENTING DU KLARADE DIG\n{print} Du ser ...\n{sleep}\n{print} monster {at} {random}\n ```\n"
                start_code: '# place your code here'
                story_text: "På den här nivån lär du dig att använda citattecken i dina spel.\n\n### Övning\nKan du göra ditt spökhus så att det fungerar på nivå 4?\n\n### Övning 2\nGå tillbaka till föregående nivå och kopiera koden för ditt spökhus. Få koden att fungera i den här nivån genom att lägga till citattecken på rätt ställen.\n"
            5:
                start_code: '# place your code here'
                story_text: "Fram till den här nivån har Spökhusspelet alltid bett spelaren att välja en dörr, men som du kanske har märkt behöver spelaren inte svara rätt.\nOm spelaren fyllde i ett helt slumpmässigt svar fungerade spelet fortfarande och spelaren kunde till och med vinna (trots att hen inte valde en dörr).\nI den här nivån kan du bara vinna spelet genom att välja samma dörr som Hedy valde slumpmässigt.\n\n### Övning\nKan du hitta de fyra ord som saknas för att göra koden färdig?\n"
                example_code: "```\n{print} 'Fly från spökhuset!'\n{print} 'Det finns tre dörrar framför dig ...'\ndörrar {is} 1, 2, 3\nmonster {is} varulv, mumie, vampyr, zombie\nvald_dörr {is} {ask} 'Vilken dörr väljer du?'\n{print} 'Du valde dörr ...' vald_dörr\n{sleep}\nkorrekt_dörr {is} dörrar {at} {random}\n_ _ _ _ {print} 'Bra! Du har rymt!'\n{else} {print} 'Åh nej! Du blir uppäten av en ...' monster {at} {random}\n```\n"
            16:
                start_code: '# place your code here'
                story_text: "This haunted house game uses the connection between the lists you can use in this level.\nFor example: all the properties that belong to the zombie are first in all the lists, witch second and vampire third.\nCheck out the code!\n"
                example_code: "```\nnumbers = [1, 2, 3]\ni = numbers[{random}]\nhint = ['growling', 'a cackling laugh', 'fluttering batwings']\nmonsters = ['zombie', 'witch', 'vampire']\nbad_fate = ['Your brain is eaten', 'You are forever cursed', 'You are bitten']\ngood_fate = ['You throw the ham. The zombie is distracted and starts eating it.', 'You set the curtains on fire. The witch flees out of fear for the fire', 'The vampire hates garlic and flees']\nweapons = ['ham', 'lighter', 'garlic']\n{print} 'You are standing in front of an old mansion'\n{print} 'Something is not right here'\n{print} 'You hear ' hint[i]\n{print} 'You are going to explore it'\n{print} 'You enter the kitchen and see a lighter, a raw ham and a garlic.'\nyour_weapon = {ask} 'What do you bring with you?'\n{print} 'With your ' your_weapon ' you enter the living room'\n{print} 'There you find a ' monsters[i]\nneeded_weapon = weapons[i]\n{if} your_weapon == needed_weapon\n    {print} 'You use your ' your_weapon\n    {print} good_fate[i]\n    {print} 'YOU WIN!'\n{else}\n    {print} 'You have chosen the wrong weapon...'\n    {print} bad_fate[i]\n    {print} 'GAME OVER'\n```\n"
            2:
                start_code: monster1 {is} _
                story_text: "In this haunted house you can choose your monsters with emojis. Of course you could also use words.\n"
                example_code: "```\nmonster_1 {is} 👻\nmonster_2 {is} 🤡\nmonster_3 {is} 👶\n{print} Du går in i spökhuset.\n{print} Plötsligt ser du ett monster_1\n{print} Du springer in i det andra rummet …\n{print} Men där väntar ett monster_2 på dig!\n{print} Åh, nej! Gå snabbt till köket.\n{print} Men när du går in anfaller monster_3 dig!\n```\n"
                story_text_2: "### Exercise\nIn the example above the monsters are predetermined. So each time you run your code, the output is the same.\nCan you add `{ask}` commands to make the haunted house interactive and have the players choose the monsters they come across?\n"
                example_code_2: "```\nmonster_1 {is} _\nmonster_2 {is} _\nmonster_3 {is} _\n{print} Du går in i spökhuset.\n{print} Plötsligt ser du ett monster_1\n{print} Du springer in i det andra rummet …\n{print} Men där väntar ett monster_2 på dig!\n{print} Åh, nej! Gå snabbt till köket.\n{print} Men när du går in anfaller monster_3 dig!\n```\n"
            3:
                story_text: "På de tidigare nivåerna har du gjort en början till ditt spökhusspel, men som du kanske har märkt har berättelsen alltid haft ett hemskt slut.\nPå den här nivån kan du göra din berättelse mer interaktiv genom att ändra utgången av spelet; ibland blir du uppäten, ibland flyr du!\nLåt Hedy bestämma slumpmässigt!\n\n### Övning\nKopiera exempelkoden och fyll i luckorna för att få det att fungera!\n\n**Extrauppgift** Den här berättelsen är ganska enkel, så du kanske kan lägga till en mer spännande berättelse.\nDu har också mycket begränsade resultat just nu – det finns bara tre alternativ för vad som finns bakom dörrarna. Kanske kan du komma på fler monster att lägga till i listan!\n"
                start_code: '# place your code here'
                example_code: "```\n_ Escape from the haunted house!\n_ There are 3 doors in front of you...\n_ _ _ Which door do you choose?\n_ You picked door ... choice\nmonsters _ a zombie, a vampire, NOTHING YOUVE ESCAPED\n_ You see...\n{sleep}\n_ _ _ _\n```\n"
            1:
                story_text: "I det här äventyret jobbar du med att skapa ett spel där du måste fly från ett hemsökt hus genom att välja rätt dörr.\nOm du väljer rätt dörr kommer du att överleva, men om du inte gör det kan ett hemskt monster...\n \nPå nivå 1 börjar vi vårt spökhusspel med att hitta på en skrämmande historia och frågar spelaren vilket monster de kommer att se i spökhuset.\n"
                example_code: "```\n{print} How did I get here?\n{print} I remember my friend telling me to go into the old mansion...\n{print} and suddenly everything went black.\n{print} But how did I end up on the floor...?\n{print} My head hurts like Ive been hit by a baseball bat!\n{print} What's that sound?\n{print} Oh no! I feel like Im not alone in this house!\n{print} I need to get out of here!\n{print} There are 3 doors in front of me..\n{ask} Which door should i pick?\n{echo} I choose door\n{print} ...?\n```\n"
                story_text_2: "### Övning\nKopiera exempelkoden till din inmatningsskärm genom att klicka på den gula knappen.\nAvsluta nu berättelsen genom att lägga till minst fem rader kod.\nKom ihåg att börja varje kodrad med ett `{print}`-kommando.\n"
                start_code: '{print} How did I get here?'
            9:
                story_text: "På den här nivån kan du använda dig av nästlade satser, vilket gör spökhuset ännu mer interaktivt!\n\n### Övning\nNu är det väldigt svårt att vinna det här spelet; kan du göra det lättare att vinna?\nÄndra din kod så att den bara har en felaktig dörr och två korrekta dörrar istället för en korrekt dörr och två felaktiga? \nTips: Detta innebär att du ändrar variabeln korrekt_dörr till fel_dörr och byter ut koden `{if}` och `{else}`.\nOch naturligtvis kan du också ändra berättelsen och göra den mer personlig. Ändra monstren eller gör det till en glad spelshow där du får en gåva!\n"
                example_code: "```\n{print} 'Escape from the Haunted House!'\nplayer = alive\ndoors = 1, 2, 3\nmonsters = zombie, vampire, giant spider\n{repeat} 3 {times}\n    {if} player {is} alive\n        correct_door {is} doors {at} {random}\n        {print} 'There are 3 doors in front of you...'\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} chosen_door {is} correct_door\n            {print} 'No monsters here!'\n        {else}\n            {print} 'You are eaten by a ' monsters {at} {random}\n            player = dead\n    {else}\n        {print} 'GAME OVER'\n{if} player {is} alive\n    {print} 'Great! You survived!'\n```\n"
                start_code: "{print} 'Escape from the haunted house!'"
            11:
                story_text: "På den här nivån har vi ändrat kommandot `{for}` så att vi kan berätta för spelaren var de befinner sig. \n\n### Övning 1\nAvsluta programmet så att spelaren vet vilket rum de befinner sig i.\n\n### Övning 2\nGör programmet till ett äventyr genom att följa dessa steg:\n\n1. Gör en lista med valmöjligheter (till exempel: slåss eller fly).\n2. Se till att spelaren kan välja ett alternativ med `{ask}`\n3. Är svaret rätt? Då får de gå vidare till nästa monster. Ger de fel svar? Låt spelaren veta det med en `{print}`. \n\n**(extra)** Om du gör ett felaktigt val visas ändå ett monster! Hur kan man ändra på det?\n"
                start_code: "{print} 'Escape from the haunted house!'"
                example_code: "```\n{print} \"Escape from the Haunted House!\"\nmonster = zombie, vampyr, jättespindel\n_\n    {print} 'Rum' i\n    vilket_monster = monster {at} {random}\n```\n"
            14:
                story_text: "In this level you can use the `<` and `>` symbol to introduce lives to your game.\n"
                example_code: "```\n{print} 'Escape from the haunted house'\nlives = 3\ndoors = 1, 2, 3\nmonsters = 'the wicked witch', 'a zombie', 'a sleeping 3 headed dog'\n{for} i {in} {range} 1 {to} 10\n    {if} lives > 0\n        good_door = doors {at} {random}\n        monster = monsters {at} {random}\n        chosen_door = {ask} 'Which door do you choose?'\n        {if} good_door == chosen_door\n            {print} 'You have chosen the correct door'\n        {else}\n            {print} 'You see...' monster\n            {if} monster == 'a sleeping 3 headed dog'\n                {print} 'Pffieuw.... Its asleep'\n            {else}\n                {print} 'You lose one life'\n                lives = lives -1\n    {else}\n        {print} 'GAME OVER'\n```\n"
                start_code: '# place your code here'
        name: Haunted House
        description: Escape from the haunted house
        default_save_name: Haunted House
    piggybank:
        name: Piggy Bank
        description: Count your pocketmoney!
        default_save_name: Piggy Bank
        levels:
            12:
                story_text: "I det här äventyret får du lära dig att göra en digital spargris.\n\n### Övning\nGör klart koden för att beräkna hur mycket pengar du har och hur lång tid du behöver spara för att köpa det du vill ha!\n**(extra)** Kanske har du redan sparat lite pengar? Dra av det från det belopp som du kommer att behöva spara ihop.\n"
                example_code: "```\n{print} 'Den digitala spargrisen'\nönskan = {ask} 'Vad skulle du vilja köpa?'\npris = {ask} 'Vad kostar det?'\nsparat = {ask} 'Hur mycket pengar har du redan sparat?'\nfickpeng = {ask} 'Hur mycket fickpengar får du per vecka?'\natt_spara = pris - sparat\nveckor = att_spara / fickpeng\n{print} 'Du kan köpa en ' _ ' om ' _ ' veckor.'\n```\n"
                start_code: '# place your code here'
            14:
                story_text: "På den här nivån kan du låta Hedy berätta för dig om du har sparat tillräckligt med pengar!\n"
                example_code: "```\nmoney = {ask} 'How much money have you saved?'\nwish = {ask} 'How much money do you need?'\nallowance = {ask} 'How much pocket money do you get each week?'\nto_save = wish - money\nweeks = to_save / allowance\n{if} wish > money\n    {print} 'You need to save up some more!'\n    {print} 'Youll need ' weeks ' more weeks.'\n{else}\n    {print} 'Great! You have enough'\n    {print} 'Lets go shopping!'\n```\n"
                start_code: '# place your code here'
    language:
        levels:
            16:
                example_code: "```\nfrench_words = ['bonjour', 'ordinateur', 'pomme de terre']\ntranslation = ['hello', 'computer', 'potato']\nscore = 0\n{for} i {in} {range} 1 {to} 3\n    answer = {ask} 'What does ' french_words[i] ' mean?'\n    correct = translation[i]\n    {if} answer == correct\n        {print} 'Correct!'\n        score = score + 1\n    {else}\n        {print} 'Wrong, ' french_words[i] ' means ' translation[i]\n{print} 'You gave ' score ' correct answers.'\n```\n"
                start_code: '# place your code here'
                story_text: "Make your own program to practice your vocabulary in a new language.\n"
            5:
                story_text: "Gör ditt eget program för att öva glosor på ett nytt språk.\n\n### Övning\nGör koden längre genom att lägga till minst tre ytterligare glosor som spelaren ska lära sig.\n**Extra** Du kan naturligtvis välja att använda ett annat språk än franska. Du kan ändra koden till vilket språk som helst som du vill lära dig.\n"
                example_code: "```\n{print} 'Learn French!'\ncat {is} {ask} '🐱'\n{if} cat {is} chat {print} 'Terrific!'\n{else} {print} 'No, cat is chat'\nfrog {is} {ask} '🐸'\n{if} frog {is} grenouille {print} 'Super!'\n{else} {print} 'No, frog is grenouille'\n```\n"
                start_code: '# place your code here'
        name: Language
        description: Practice words in a foreign language
        default_save_name: Language
    secret:
        name: SuperSpy
        description: Make your own spy code
        levels:
            12:
                start_code: '# place your code here'
                story_text: "I det här äventyret kan du skapa din egen superspionkod. Koda ett meddelande som bara rätt agent kan avkoda.\nOm fienden försöker knäcka koden kommer de att få falsk information för att slösa på deras tid.\n\n### Övning 1\nGör din egen hemliga kod för din superspion och lämna tillbaka båda delarna bara till den rätta spionen.\n\n### Övning 2\nLägg till en tredje komponent till koden, till exempel ett klädesplagg eller ett föremål.\n"
                example_code: "```\nnamn {is} {ask} 'Vad heter du?'\nom namn {is} '_'\n    a {is} 'Åk till flygplatsen'\n{else}\n    a {is} 'Åk till tågstationen'\nlösenord {is} {ask} 'Vad är lösenordet?'\n{if} lösenord {is} _\n    b {is} 'imorgon kl. 02.00'\n{else}\n    b {is} 'idag kl. 10.00'\n{print} _ _ _\n```\n"
            13:
                story_text: "Vi kan förenkla superspionkoden med `{and}`, så att vi bara behöver en `{if}`.\n\n### Övning 1\nKomplettera koden genom att fylla i det rätta kommandot på den tomma platsen. Tips: Superspionen måste besvara BÅDA frågorna korrekt innan hen får den hemliga informationen!\n\n### Övning 2\nVi vill förvirra fienden ännu mer! Skapa en lista med falska svar och välj ett slumpmässigt när ett felaktigt svar ges.\n"
                example_code: "```\nname {is} {ask} 'Vad heter du?'\nlösenord {is} {ask} 'Vad är ditt lösenord?'\n{if} namn {is} 'Agent007' _ lösenord {is} 'TOPSECRET'\n    {print} 'Åk till flygplatsen kl. 02.00'\n{else}\n    {print} 'Åk till tågstationen kl. 10.00'.\n ```\n"
                start_code: '# place your code here'
        default_save_name: SuperSpy
    blackjack:
        levels:
            17:
                story_text: "Blackjack is a simple game of cards in which you have to get as close to 21 points as possible. You get two cards. Each card is worth their numeral value, and the face cards (Jack, Queen and King) are worth 10 points.\nThe Ace is worth either 1 or 11 points (you can choose). The dealer, your opponent, also gets two cards.\nIf you want, you can get another card, and its points will be added to your total. The dealer can also choose to take another card.\nBut be careful not to get more than 21 points, because if you do, you lose!\nThe player who gets closest to 21, without going over it, wins!\n\nHave fun!\n"
                example_code: "```\n{print} 'BLACKJACK'\nkort = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'knekt', 'dam', 'kung', 'ess']\npoäng = 0\ngivens_poäng = 0\nkort_1 = kort[{random}]\nkort_2 = kort[{random}]\nkort_3 = kort [{random}]\ngivens_kort_1 = kort[{random}]\ngivens_kort_2 = kort[{random}]\ngivens_kort_3 = kort[{random}]\n# Poäng för kort 1\n{if} kort_1 == 'knekt' {or} kort_1 == 'dam' {or} kort_1 == 'kung':\n    poäng = poäng + 10\n{elif} kort_1 == 'ess':\n    poäng = poäng + 11\n{else}:\n    poäng = poäng + kort_1\n# Poäng för kort 2\n{if} kort_2 == 'knekt' {or} kort_2 == 'dam' {or} kort_2 == 'kung':\n    poäng = poäng + 10\n{elif} kort_2 == 'ess':\n    poäng = poäng + 11\n{else}:\n    poäng = poäng + kort_2\n# Poäng för givens_kort 1\n{if} givens_kort_1 == 'knekt' {or} givens_kort_1 == 'dam' {or} givens_kort_1 == 'kung':\n    givens_poäng = givens_poäng + 10\n{elif} givens_kort_1 == 'ess':\n    givens_poäng = givens_poäng + 11\n{else}:\n    givens_poäng = givens_poäng + givens_kort_1\n# Poäng för givens_kort 2\n{if} givens_kort_2 == 'knekt' {or} givens_kort_2 == 'dam' {or} givens_kort_2 == 'kung':\n    givens_poäng = givens_poäng + 10\n{elif} givens_kort_2 == 'ess':\n    givens_poäng = givens_poäng + 11\n{else}:\n    givens_poäng = givens_poäng + givens_kort_2\n# Två ess\n{if} kort_1 == 'ess' {and} kort_2 == 'ess':\n    poäng = 12\n{if} givens_kort_1 == 'ess' {and} givens_kort_2 == 'ess':\n    givens_poäng = 12\n# Resultattavla\n{print} 'Du har en ' kort_1 ' och en ' kort_2 ' (' poäng ' poäng)'\n{print} 'Given har en ' givens_kort_1 ' och en ' givens_kort_2 ' (' givens_poäng ' poäng)'\n# Extra kort för spelaren\nhit = {ask} 'Vill du ha ett extra kort?'\n{if} hit == 'ja':\n    {if} kort_3 == 'knekt' {or} kort_3 == 'dam' {or} kort_3 == 'kung':\n        poäng = poäng + 10\n    {elif} kort_3 == 'ess':\n        {if} poäng > 11:\n            poäng = poäng + 11\n        {else}:\n            poäng = poäng + 1\n    {else}:\n        poäng = poäng + kort_3\n    {print} 'Du får ett extra ' kort_3 ' (' poäng ' poäng)'\n{else}:\n    {print} 'Inga extra kort'\n# Vinnare\n{if} poäng > 21 {or} givens_poäng > poäng {or} givens_poäng == 21:\n    {print} 'Du förlorar'\n{elif} givens_poäng < 17:\n    {print} 'Given tar ett extra kort. Det är ... ' givens_kort_3\n    {if} givens_kort_3 == 'knekt' {or} givens_kort_3 == 'dam' {or} givens_kort_3 == 'kung':\n        givens_poäng = givens_poäng + 10\n    {elif} givens_kort_3 == 'ess':\n        {if} givens_poäng < 11:\n            givens_poäng = givens_poäng + 11\n        {else}:\n            givens_poäng = givens_poäng + 1\n    {else}:\n        givens_poäng = givens_poäng + givens_kort_3\n    {print} 'Given har ' givens_poäng ' poäng nu'\n    {if} givens_poäng < 21 {and} givens_poäng > poäng:\n        {print} 'Du förlorar'\n    {else}:\n        {print} 'Du vinner'\n{elif} poäng > givens_poäng {and} poäng < 21:\n    {print} 'Du vinner!'\n```\n"
                start_code: '# place your code here'
        name: Blackjack
        description: Try to get as close to 21 as you can
        default_save_name: Blackjack
    tic:
        name: Tic Tac Toe
        description: Play a game of Tic Tac Toe!
        default_save_name: Tic
        levels:
            13:
                story_text: "I detta äventyr kan du programmera en omgång tripp-trapp-trull. Du kan spela med två personer. I tur och ordning väljer du ett nummer på den plats (1 - 9) du vill sätta ditt tecken (x eller o) på.\nDen första spelaren som får tre i rad (horisontellt, vertikalt eller diagonalt) vinner!\n\n### Övning 1\nSpelet fungerar, men det har några problem. Till exempel kan alla spelare välja vilket fält som helst, även ett som redan tagits! Använd en `{if}` om platsen är tagen, och i så fall varna spelaren.\n\n### Övning 2\nSpelet avgör inte heller vem som har vunnit. Du måste lägga till detta genom att kontrollera om tre rutor på rad har samma symbol.\n\n### Övning 3 (extra)\nMan har inte alltid en kompis att spela med. Kan du skapa en datormotståndare?\n"
                example_code: "```\nspelare = 'x'\nruta = '.', '.', '.', '.', '.', '.', '.', '.', '.'\n\n{for} i {in} {range} 1 {to} 9\n    val = {ask} 'Spelare ' spelare ', vilken plats väljer du?'\n    ruta {at} val = spelare\n    {clear}\n    print ruta {at} 1 ruta {at} 2 ruta {at} 3\n    print ruta {at} 4 ruta {at} 5 ruta {at} 6\n    print ruta {at} 7 ruta {at} 8 ruta {at} 9\n    {if} spelare = 'x'\n        spelare = 'o'\n    {else}\n        spelare = 'x'\n```\n"
                start_code: '# place your code here'
            14:
                story_text: "In the previous levels you've made a tic tac toe game. Now you've learned how to use the = sign, the == sign and the != sign.\nYou can use this knowledge in your new Tic Tac Toe game, like this:\n"
                start_code: '# place your code here'
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{for} i {in} {range} 1 {to} 9\n    {if} game != 'over'\n        choice = {ask} 'Player ' sign ', which spot?'\n        {if} choice {in} open_spots\n            {remove} choice {from} open_spots\n            {if} choice == 1\n                spot_1 = sign\n            {if} choice == 2\n                spot_2 = sign\n            {if} choice == 3\n                spot_3 = sign\n            {if} choice == 4\n                spot_4 = sign\n            {if} choice == 5\n                spot_5 = sign\n            {if} choice == 6\n                spot_6 = sign\n            {if} choice == 7\n                spot_7 = sign\n            {if} choice == 8\n                spot_8 = sign\n            {if} choice == 9\n                spot_9 = sign\n        {else}\n            {print} 'That spot was already taken'\n        {print} spot_1 spot_2 spot_3\n        {print} spot_4 spot_5 spot_6\n        {print} spot_7 spot_8 spot_9\n        {print} ' '\n        winner = {ask} 'Did you win?'\n        {if} winner == 'yes'\n            {print} 'Good job, player ' sign '!'\n            game = 'over'\n        {else}\n            {if} sign == 'x'\n                sign = 'o'\n            {else}\n                sign = 'x'\n```\n"
            15:
                start_code: '# place your code here'
                story_text: "På den här nivån kan du förbättra ditt tripp-trapp-trull-spel med {while}-loopen. Med den loopen kan du kombinera `{if} game != 'over'` och `{for} i {in} {range} 1 {to} 9` till bara en kodrad.\nKolla själv:\n"
                example_code: "```\nsign = 'x'\nopen_spots = 1, 2, 3, 4, 5, 6, 7, 8, 9\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{while} game != 'over'\n    choice = {ask} 'Player ' sign ', which spot?'\n    {if} choice {in} open_spots\n        {remove} choice {from} open_spots\n        {if} choice == 1\n            spot_1 = sign\n        {if} choice == 2\n            spot_2 = sign\n        {if} choice == 3\n            spot_3 = sign\n        {if} choice == 4\n            spot_4 = sign\n        {if} choice == 5\n            spot_5 = sign\n        {if} choice == 6\n            spot_6 = sign\n        {if} choice == 7\n            spot_7 = sign\n        {if} choice == 8\n            spot_8 = sign\n        {if} choice == 9\n            spot_9 = sign\n    {else}\n        {print} 'That spot was already taken'\n    {print} spot_1 spot_2 spot_3\n    {print} spot_4 spot_5 spot_6\n    {print} spot_7 spot_8 spot_9\n    {print} ' '\n    winner = {ask} 'Did you win?'\n    {if} winner == 'yes'\n        {print} 'Good job, player ' sign '!'\n        game = 'over'\n    {else}\n        {if} sign == 'x'\n            sign = 'o'\n        {else}\n            sign = 'x'\n```\n"
            17:
                start_code: '# place your code here'
                story_text: "På de tidigare nivåerna hade tripp-trapp-trull-spelet en irriterande funktion. Efter varje drag var man tvungen att själv fylla i om man hade vunnit eller inte.\nDetta gjorde spelet spelbart, men också ganska långsamt. På den här nivån har vi lärt oss kommandot `{elif}`, som kan lösa det problemet.\nAtt använda `{elif}` för att låta Hedy kontrollera om en spelare har vunnit eller inte är kul, men det kräver också en hel del extra rader.\n\nI exempelkoden ser du att vi lagt till kraven för att vinna (tre rutor på rad horisontellt, vertikalt eller diagonalt).\nDu hittar dem på rad 46 till 69. Du kan se att varje gång kravet är uppfyllt (alltså om en spelare har vunnit) sätts variabeln spel till 'over'.\nDetta innebär att `{while}`-slingan stoppas och att spelet avslutas.\n"
                example_code: "```\nsign = 'x'\nopen_spots = [1, 2, 3, 4, 5, 6, 7, 8, 9]\ngame = 'on'\nspot_1 = '.'\nspot_2 = '.'\nspot_3 = '.'\nspot_4 = '.'\nspot_5 = '.'\nspot_6 = '.'\nspot_7 = '.'\nspot_8 = '.'\nspot_9 = '.'\n{print} 'TIC TAC TOE!'\n{print} spot_1 spot_2 spot_3\n{print} spot_4 spot_5 spot_6\n{print} spot_7 spot_8 spot_9\n{print} ' '\n{while} game != 'over':\n    choice = {ask} 'Player ' sign ', which spot?'\n    {if} choice {in} open_spots:\n        {remove} choice {from} open_spots\n        {if} choice == 1:\n            spot_1 = sign\n        {if} choice == 2:\n            spot_2 = sign\n        {if} choice == 3:\n            spot_3 = sign\n        {if} choice == 4:\n            spot_4 = sign\n        {if} choice == 5:\n            spot_5 = sign\n        {if} choice == 6:\n            spot_6 = sign\n        {if} choice == 7:\n            spot_7 = sign\n        {if} choice == 8:\n            spot_8 = sign\n        {if} choice == 9:\n            spot_9 = sign\n    {else}:\n        {print} 'That spot was already taken'\n    {print} spot_1 spot_2 spot_3\n    {print} spot_4 spot_5 spot_6\n    {print} spot_7 spot_8 spot_9\n    {print} ' '\n    {if} spot_1 == spot_2 {and} spot_2 == spot_3 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_4 == spot_5 {and} spot_5 == spot_6 {and} spot_4 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_7 == spot_8 {and} spot_8 == spot_9 {and} spot_7 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_1 == spot_4 {and} spot_4 == spot_7 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_2 == spot_5 {and} spot_5 == spot_8 {and} spot_2 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_3 == spot_6 {and} spot_6 == spot_9 {and} spot_3 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_1 == spot_5 {and} spot_5 == spot_9 {and} spot_1 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {elif} spot_3 == spot_5 {and} spot_5 == spot_7 {and} spot_3 != '.':\n        {print} 'Player ' sign ' wins!'\n        game = 'over'\n    {else}:\n        {if} sign == 'x':\n            sign = 'o'\n        {else}:\n            sign = 'x'\n```\n"
    quizmaster:
        name: Quizmaster
        description: Make your own quiz!
        default_save_name: Quizmaster
        levels:
            14:
                story_text: "In this adventure you can make your own quiz! Fill in the blanks, add more questions and enjoy your own quiz!\nYou can make a quiz about anything you like: your hobby, your favorite animal, your favorite book or anything at all!\n"
                example_code: "```\n{print} 'Make your own quiz'\npoints_a = 0\npoints_b = 0\n{print} 'Question'\n{print} 'Answer option A'\n{print} 'Answer option B'\nanswer = {ask} 'Which answer?'\n{if} answer == 'A'\n    points_a = points_a + 1\n{if} answer == 'B'\n    points_b = points_b + 1\n{print} 'End of the quiz!'\n{print} 'Lets see the results!'\n{if} points_a > points_b\n    {print} 'You belong to the A club'\n{if} points_b > points_a\n    {print} 'You belong to the B club'\n```\n"
                start_code: '# place your code here'
    years:
        levels:
            11:
                start_code: '# placera din kod här'
                story_text: "På den här nivån kan du använda kommandot `{for}` number `{in}` `{range}` för att räkna ner till det nya året.\n\n### Övning\nFyll i luckorna och få koden att fungera!\n"
                example_code: "```\n{for} tal {in} {range} _ {to} _\n    {print} tal\n{print} 'Gott nytt år!'\n```\n"
        name: Nyårsdagen
        description: Nedräkning till det nya året!
        default_save_name: Nedräkning till nyår
    pressit:
        levels:
            5:
                story_text_2: "You can also link turtle commands to keys.\n\n### Exercise\nCopy the lines a few times so you can create a larger drawing.\n"
                story_text: "In this level there is another new keyword: `{pressed}`!\nWith `{pressed}` you can use keys on your keyboard to control what lines are used.\n\n### Exercise\nLook at the example and add one more line of code that reacts to a key press.\n"
                start_code: '# place your code here'
                example_code: "```\n{print} 'Do you want a good (g) or bad (b) ending?'\n{if} g {is} {pressed} {print} 'They lived happily ever after ❤'\n{else} {print} 'The prince was eaten by a hippopotamus 😭'\n```\n"
                example_code_2: "```\n{if} y {is} {pressed} {forward} 15\n{else} {turn} 90\n```\n"
            7:
                story_text: "Now that you have learned about `{repeat}`, we can press keys multiple times.\nYou can use it to make the turtle walk forward and turn.\n\n### Exercise\nThe code you have seen in level 5 only checks the key once. Copy the example code and add a `{repeat}` to it, so that you can press the keys many times.\nUse this code to draw something nice.\n"
                example_code: "```\n{if} x {is} {pressed} {forward} 15 {else} {turn} 90\n```\n"
                start_code: '# place your code here'
            9:
                story_text: "Now that you know how to combine statements, you can create a touch type tool with `{pressed}`.\n\n### Exercise\nFinish the code. Each time a random letter should be chosen, which you have to press. You get a point for a correct press, and and two points deduction for a wrong press.\n**(extra)** Clear the screen after each letter, and show the user how many points they have scored.\n"
                example_code: "```\npoints = 0\nletters = a, b, c, d, e\n{repeat} 10 {times}\n    letter = _ _ _\n    {print} 'Press the letter ' letter\n    {if} letter {is} {pressed}\n    _\n    _\n    _\n```\n"
                start_code: '# place your code here'
        description: Try linking a keyboard key to a command!
        default_save_name: Pressed
        name: Key presses
    ask_command:
        name: fråga
        levels:
            1:
                example_code_2: "```\n{print} Hej!\n{ask} Vad heter du?\n{echo} hej\n```\n"
                story_text: "## Kommandot fråga\nNu när du kan använda kommandot `{print}` är du redo att lära dig nästa kommando: `{ask}`. Med kommandot `{ask}` kan du ställa en fråga. Kolla in det här:\n"
                example_code: "```\n{print} Hej!\n{ask} Vad heter du?\n```\n"
                story_text_2: "## Kommandot eko\nOm du vill att datorn ska upprepa svaret kan du använda kommandot `{echo}`. Tänk på att svaret återges i slutet av meningen, så i det här exemplet efter hej.\n"
                story_text_3: "### Övning\nProva kommandona `{ask}` och `{echo}`. Fyll först i de tomma fälten för att få programmet att fungera.\nStäll sedan ytterligare två frågor med kommandot `{ask}`. Efter varje `{ask}` använder du ett `{echo}` för att skriva ut svaret på skärmen.\n"
                example_code_3: "```\n_ Hur mår du?\n_\n```\n"
                start_code: "{print} Hej!\n{ask} Vad heter du?\n{echo} hej\n"
            2:
                story_text: "## Kommandot fråga\nNu när vi kan använda **variabler** i vår kod behöver vi inte längre kommandot `{echo}`.\nVi kan använda variabler för att lagra svaren på våra frågor och på så sätt kan vi använda svaret på flera frågor i vår kod.\nKolla in det:\n\nPå så sätt blir din kod interaktiv!\n"
                example_code: "```\nnamn {is} {ask} Vad heter du?\n{print} Hej namn\nålder {is} {ask} Hur gammal är du?\n{print} namn är ålder år gammal.\n```\n"
                story_text_2: "### Övning\nI förra fliken övade du på att tilldela variabler med kommandot `{is}`.\nDu har skapat minst tre variabler och använt dem med ett print-kommando.\nNu vill vi att du istället för att sätta variablerna gör dem interaktiva, som vi gjorde i vårt exempel.\n\nKopiera din kod från föregående flik och gör variablerna interaktiva med `{ask}`-kommandon.\n"
                example_code_2: "```\nfavoritdjur is ask Vilket är ditt favoritdjur?\nprint Jag gillar favoritdjur\n```\n"
                start_code: "namn {is} {ask} Vad heter du?\n{print} Hej namn\nålder {is} {ask} Hur gammal är du?\n{print} namn är ålder år gammal."
        description: Introduktion till kommandot fråga
        default_save_name: kommandot_fråga
    random_command:
        levels:
            16:
                story_text: "Vi ska göra listor på Python-sättet, med hakparenteser runt listorna! Vi skriver också citattecken runt varje element som vi har lärt oss på tidigare nivåer.\nVi använder hakparenteser för att peka ut en plats i en lista. Kommandot {at} {random} kan inte längre användas."
                start_code: "frukt = ['äpple', 'banan', 'körsbär']\n{print} frukt[slump]"
                example_code: "```\nvänner = ['Ahmed', 'Ben', 'Cayden']\nlyckotal = [15, 18, 6]\n{for} i {in} {range} 1 {to} 3\n    {print} 'lyckotalet för ' vänner[i]\n    {print} 'är ' lyckotal[i]\n```\n"
            3:
                story_text: "## På slump\nPå den här nivån kan du göra en lista med kommandot `{is}`. Du kan låta datorn välja ett slumpmässigt element från den listan. Det gör du med `{at} {random}`.\n"
                example_code: "```\ndjur {is} hundar, katter, kängurur\n{print} djur {at} {random}\n```\n"
                story_text_2: "Du kan använda kommandot `{at} {random}` i en mening också.\n"
                example_code_2: "```\nmat {is} smörgås, pizzaslice, sallad, burrito\n{print} Jag ska ha mat {at} {random} till lunch.\n```\n"
                start_code: "djur {is} hund, katt, känguru\n{print} djur {at} {random}\n"
                story_text_3: "### Övning\nProva kommandot `{at} {random}` genom att göra din egen spelshow (som de på tv) där du väljer en dörr eller resväska och den innehåller ett stort pris!\nKan du göra det? Vi har redan lagt in de första raderna i exempelkoden.\n"
                example_code_3: "```\n{print} Den stora spelshowen!\n{print} Det står tre resväskor framför dig …\nvalt {is} {ask} Vilken resväska väljer du?\npriser {is} _\n_\n```\n"
        name: slump
        description: introduktion av kommandot random
        default_save_name: kommandot_random
    sleep_command:
        levels:
            2:
                start_code: "{print} Min favoritfärg är …\n{sleep} 2\n{print} grön!"
                story_text: "## Kommandot sov\nEtt annat nytt kommando på den här nivån är `{sleep}`, som pausar ditt program en sekund. Om du skriver ett tal efter {sleep}, pausar programmet så många sekunder.\n"
                example_code: "```\n{print} Min favoritfärg är …\n{sleep} 2\n{print} grön!\n```\n"
        name: sov
        description: introduktion till kommandot sov
        default_save_name: kommandot_sov
    if_command:
        name: om annars
        description: Introduktion till kommandot if
        default_save_name: kommandot_if
        levels:
            5:
                story_text: "## Om … annars …\nPå nivå 5 finns det något nytt, `{if}`! Med `{if}` kan du välja mellan två olika alternativ.\nDen här koden skrivs ut fint om du anger Hedy som namn, och bu! om du anger något annat.\n`{ask}` och `{print}` fungerar fortfarande som på nivå 4.\n"
                example_code: "```\nnamn {is} {ask} 'vad heter du?'\n{if} namn {is} Hedy {print} 'nice' {else} {print} 'bu!'\n```\n"
                story_text_2: "Ibland blir koden med `{if}` riktigt lång och får inte plats på raden. <br> Du kan också dela koden över två rader så att den andra raden börjar med `{else}` så här:\n"
                example_code_2: "```\nnamn {is} {ask} 'vad heter du?'\n{if} namn {is} Hedy {print} 'nice'\n{else} {print} 'bu!'\n```\n"
                story_text_3: "### Övning\nFörsök att skriva din egen kod med `{if}` och `{else}`. Du kan använda exempelkoden om du vill.\n"
                example_code_3: "```\nsvara {is} {ask} '2 + 2 = ?'\n_ _ _ 4 _ 'Bra jobbat!'\n_ _ 'Nej, 2 + 2 = 4'\n```\n"
                start_code: "namn {is} {ask} 'vad heter du?'\n{if} namn {is} Hedy {print} 'nice'\n{else} {print} 'bu!'"
            8:
                start_code: "namn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy\n    {print} 'Välkommen Hedy'\n    {print} 'Du kan spela på din dator!'\n"
                example_code: "```\nnamn {is} {ask} 'Vad heter du?'\n{if} namn {is} Hedy\n    {print} 'Välkommen Hedy'\n    {print} 'Du kan spela på din dator!'\n```\n"
                story_text: "## Om … Annars …\nDu har lärt dig att upprepa ett block med kodrader efter ett `{repeat}`-kommando.\nNu kan du också använda indrag för att skapa block efter ett {if}- eller {else}-kommando.\nKolla in exempelkoden.\n\n### Övning\nLägg till ett {else}-kommando till exempelkoden. Gör ett kodblock med indrag. Det gör du genom att börja varje rad med fyra mellanslag.\n"
    quotation_marks:
        levels:
            12:
                example_code: "```\nname = 'Hedy the Robot'\n{print} 'Hello ' name\n```\n"
                story_text: "**All texts need to be in quotation marks**\nFor this level on you will also have to use quotation marks when storing a text with `=`:\n"
                story_text_2: "**All items in lists need quotation marks too**\nLists are texts, so they need quotation marks too. Mind that each single item on the list has quotation marks.\nThis allows you to save two words as 1 item on the list, for example 'Iron Man'.\n"
                example_code_2: "```\nsuperheroes = 'Spiderman', 'Batman', 'Iron Man'\n{print} superheroes {at} {random}\n```\n"
                story_text_3: "**All text after `{if}` comparisons need quotation marks too**\n"
                example_code_3: "```\nname = {ask} 'What is your name?'\n{if} name = 'Hedy the Robot'\n    {print} 'Hi there!'\n```\n"
                story_text_4: "**Numbers don't need quotation marks**\nFor numbers, you do not use quotation marks in the `=`:\n"
                example_code_4: "```\nscore = 25\n{print} 'You got ' score\n```\n"
                start_code: "name = {ask} 'What is your name?'\n{if} name = 'Hedy the Robot'\n    {print} 'Hi there!'"
            4:
                story_text: "## 'Quotation marks'\nIn level 4 `{ask}` and `{print}` have changed.\nYou must put text that you want to print between quotation marks.\nThis is useful, because now you can print all the words you want. Also the words you used to store something with `{is}`.\nMost programming languages also use quotation marks when printing, so we are also getting a step closer to real programming!\n"
                story_text_2: "## Contractions\nImportant! Mind that now that we're using quotation marks, Hedy will get confused when you use the apostrophe for contractions like I'm or What's.\nMake sure to remove those apostrophes and change the spelling to I am or What is.\nCheck out the example code to see the wrong way of using apostrophes.\n"
                example_code: "```\n{print} 'You need to use quotation marks from now on!'\nanswer {is} {ask} 'What do we need to use from now on?'\n{print} 'We need to use ' answer\n```\n"
                example_code_2: "```\n_ This is the wrong way of using apostrophes _\n{print} 'I'm babysitting my sister's kids'\n{print} 'What's more fun than that?'\n```\n"
                start_code: "{print} 'You need to use quotation marks from now on!'\nanswer {is} {ask} 'What do we need to use from now on?'\n{print} 'We need to use ' answer"
        name: "'quotation marks'"
        description: Introduction quotation marks
        default_save_name: quotation_marks
    repeat_command_2:
        name: Repeat 2
        description: repeat command 2
        default_save_name: repeat_command_2
        levels:
            7:
                story_text: "## Repeat with other commands and with variables\nYou have practiced the `{repeat}` command in combination with the `{print}` command now, but did you know you could also use other commands with `{repeat}` ?\nIn this example code you can see that `{repeat}` can also be used with an `{ask}`, `{if}` or `{else}` command.\n"
                story_text_2: "Another interesting thing you can so with the `{repeat}` command is using variables to set the amount of times something should be repeated. In the example code you can see that we first ask the person how old they are.\nThen, in line 3, the question is repeated 'age' times. So we have used the variable 'age' with the `{repeat}` command.\n"
                example_code: "```\n{repeat} 2 {times} answer = {ask} 'Did you know you could ask a question multiple times?'\n{if} answer {is} yes {repeat} 2 {times} {print} 'You knew that already!'\n{else} {repeat} 3 {times} {print} 'You have learned something new!'\n```\n"
                example_code_2: "```\n{print} 'Yay! It is your birthday!'\nage = {ask} 'How old are you now?'\n{repeat} age {times} {print} 'Hip Hip Hurray!'\n```\n"
                start_code: "{repeat} 2 {times} answer = {ask} 'Did you know you could ask a question multiple times?'\n{if} answer {is} yes {repeat} 2 {times} {print} 'You knew that already!'\n{else} {repeat} 3 {times} {print} 'You have learned something new!'"
            8:
                story_text: "### In the block or not?\nIn this level you have to think carefully which lines of code should be in the block and which shouldn't.\nFor example: If you want to sing the song *the muffin man*. You only want the line with 'the muffin man' to be repeated twice.\nThis means the last line shouldn't start with indentation as it doesn't belong to the block.\nIf you do start the last line with indentation the song will turn out wrong.\n\n## Exercise\nEach line in the example code starts with a blank. Remove the blanks and try to figure out which line need indentation and which don't to make the muffin man song.\n"
                example_code: "```\n_ {print} 'Do you know the muffin man?'\n_ {repeat} 2 {times}\n_ {print} 'The muffin man'\n_ {print} 'Do you know the muffin man, who lives on Drury Lane?'\n```\n"
                start_code: "{repeat} 3 {times}\n    {print} 'This line will be repeated...'\n    {print} 'This one too...'\n{print} 'but this one will not!'"
    maths:
        description: Introducing maths
        name: maths
        default_save_name: maths
        levels:
            6:
                start_code: "{print} '5 times 5 is ' 5 * 5"
                story_text: "## 1 + 1\nIn this level you learn something new: you can now also calculate.\n\nThe plus is easy, you write it like with math: `5 + 5` for example. The minus also works fine, it is `5 - 5`.\n\nThe times is a bit different, because there is no times symbol on your keyboard. Just search, there really isn't!\nThat is why we multiply with the asterisk above 8: `5 * 5`. Read that as \"5 times 5\" that helps you remember it best.\n"
                example_code: "```\n{print} '5 plus 5 is ' 5 + 5\n{print} '5 minus 5 is ' 5 - 5\n{print} '5 times 5 is ' 5 * 5\n```\n"
                story_text_2: "We also make a change in storing a word in a variable! You may now use `=` instead of  `{is}` when we store a name or a number in a variable, like this:\n"
                example_code_2: "```\nname = Hedy\nanswer = 20 + 4\n```\n"
            12:
                start_code: "{print} 'decimal numbers now need to use a dot'\n{print} 2.5 + 2.5"
                story_text: "**Decimal numbers**\nSo far, Hedy did not allow for decimal numbers like 1.5, but now we do allow that. Note that computers use the `.` for decimal numbers."
                example_code: "```\n{print} 'Two and a half plus two and a half is...'\n{print} 2.5 + 2.5\n```\n"
    while_command:
        name: while
        description: while
        default_save_name: while_command
        levels:
            15:
                start_code: "answer = 0\n{while} answer != 25\n    answer = {ask} 'What is 5 times 5?'\n{print} 'A correct answer has been given'"
                story_text: "We are going to learn a new loop, the `{while}` loop! We continue the loop as long as the statement is true.\nSo don't forget to change the value in the loop.\n\nIn the example code, we continue until a correct answer has been given.\nIf the correct answer is never given, the loop never ends!"
                example_code: "```\nanswer = 0\n{while} answer != 25\n    answer = {ask} 'What is 5 times 5?'\n{print} 'A correct answer has been given'\n```\n"
    harry_potter:
        name: Harry Potter
        description: Harry Potter adventures
        default_save_name: Harry Potter
        levels:
            10:
                story_text: "### Exercise\nWe can also make a Harry Potter themed fortune teller. Fill in blanks such that 9 lines are printed.\n**Extra** Change the theme of the fortune teller into something else, such as your favorite book, film or tv show.\n"
                example_code: "```\nhouses = Gryffindor, Slytherin, Hufflepuff, Ravenclaw\nsubjects = potions, defence against the dark arts, charms, transfiguration\nfears = Voldemort, spiders, failing your OWL test\nnames = Harry, Ron, Hermione\n_\n_ {print} name ' is placed in ' houses {at} {random}\n_ {print} name ' is great at ' subjects {at} {random}\n_ {print} name 's greatest fear is ' fears {at} {random}\n```\n"
                start_code: '# place your code here'
    print_command:
        name: skriv
        description: Introduktion till kommandot print
        default_save_name: skriv-kommandot
        levels:
            1:
                story_text: "## Kommandot skriv\nDu kan skriva ut text på skärmen med kommandot `{print}`.\n"
                story_text_2: "### Övning\nI Hedy hittar du övningar i varje äventyr. En övning ger dig möjlighet att öva på de nya kommandona och begreppen och låter dig gör exempelkoden mer personlig.\nI den här övningen ser du ett rosa tomt utrymme. Du måste fylla i det tomma utrymmet innan koden kan köras.\n\nFyll i kommandot `{print}` i det tomma utrymmet och lägg sedan till ytterligare fem rader kod. Varje rad måste börja med ett `{print}`-kommando.\nHa så kul!\n"
                example_code: "```\n{print} Hej, programmerare!\n{print} Välkommen till Hedy!\n```\n"
                example_code_2: "```\n_ Hej!\n```\n"
                start_code: "{print} Välkommen till Hedy!\n"
            17:
                start_code: "{for} i {in} {range} 1 {to} 10:\n    {print} i\n{print} 'Klar eller inte, här kommer jag!'"
                story_text: "Nu ska vi ändra reglerna för indragning lite. Varje gång vi behöver en indragning måste vi ha `:` på raden före indragningen.\n"
                example_code: "```\n{for} i {in} {range} 1 {to} 10:\n    {print} i\n{print} 'Klar eller inte, här kommer jag!'\n```\n"
            18:
                start_code: "namn = 'Hedy'\n{print}('Jag heter ', namn)"
                story_text: "Vi har kommit fram till riktig Python-kod! Det betyder att vi måste använda parenteser med `{print}` och `{range}` från och med nu.\nDet betyder också att du kan använda Hedy-kod från den här nivån i vilken Python-miljö som helst så länge du använder de engelska nyckelorden. Om du inte har gjort det hittils kan du ställa om det i kommandomenyn."
                example_code: "```\n{print}('Hej!')\n{for} i {in} {range}(1, 10):\n   {print}('Detta är rad ', i)\n```\n"
                story_text_2: Om du vill skriva ut mer än en sak måste du ha kommatecken mellan.
                example_code_2: "```\ntemperatur = 25\n{print}('Det är ', temperatur, ' grader ute')\n```\n"
                story_text_3: Den sista ändringen vi behöver göra för att få Python-kod är att ändra `{ask}` till `{input}`.
                example_code_3: "```\n{print}('Jag heter Hedy!')\nnamn = {input}('Vad heter du?')\n{print}('Du heter alltså ', namn)\n```\n"
    is_command:
        name: är
        description: introduktion till kommandot är
        default_save_name: kommandot_är
        levels:
            2:
                story_text: "## Variabler\nDu kan döpa ett ord med `{is}`. Det kallas för en **variabel**. I det här exemplet har vi skapat en variabel som heter namn och en variabel som heter ålder. Du kan använda ordet namn var som helst i din kod och det kommer att ersättas med Hedy, till exempel så här:\n"
                example_code: "```\nnamn {is} Hedy\nålder {is} 15\n{print} namn är ålder år gammal\n```\n"
                story_text_2: "### Övning\nDags att göra dina egna variabler!\nI exempelkoden gjorde vi ett exempel på variabeln `favorite_animals`. På rad 1 sätts (tilldelas) variabeln och på rad 2 har vi använt variabeln i ett skriv-kommando.\nAvsluta först vårt exempel genom att fylla i ditt favoritdjur i de tomma fälten. Gör sedan minst tre av dessa koder själv. Välj en variabel och sätt variabeln med kommandot {is}. Använd den sedan med ett {print}-kommando, precis som vi gjorde.\n"
                example_code_2: "```\nfavoritdjur är _\n{print} Jag gillar favoritdjur\n```\n"
                start_code: "namn {is} Hedy\nålder {is} 15\n{print} namn är ålder år gammal"
            14:
                start_code: "ålder = {ask} 'Hur gammal är du?'\n{if} ålder < 13\n    {print} 'Du är yngre än jag!'\n{else}\n    {print} 'Du är äldre än jag!'"
                story_text: "Vi kommer att lära oss fler nya saker. Du kanske redan känner till dem från matematiken, `<` och `>`.\n `<` kollar om det första talet är mindre än det andra, t.ex. ålder `<` 12 kontrollerar om ålder är mindre än 12.\nOm du vill kolla om det första talet är mindre eller lika med det andra kan du använda `<=`, t.ex. ålder `<=` 11.\n `>` kollar om det första talet är större än det andra, t.ex. poäng `>` 10 kollar om poäng är större än 10.\nOm du vill kolla om det första talet är större eller lika med det andra kan du använda `>=`, t.ex. poäng `>=` 11.\nDu använder dessa jämförelser i en `{if}`, så här:\n"
                example_code: "```\nålder = {ask} 'Hur gammal är du?'\n{if} ålder > 12\n    {print} 'Du är äldre än jag!'\n```\n"
                story_text_2: "Från och med den här nivån kan du använda två likhetstecken om du vill jämföra exakt. Detta är vad de flesta programspråk gör:\n"
                example_code_2: "```\nname = {ask} 'Vad heter du?'\n{if} namn == 'Hedy'\n    {print} 'Du är cool!'\n```\n"
                story_text_3: "Du kan också jämföra om något *inte* är lika med något annat med hjälp av `!=` så här:\n"
                example_code_3: "```\nname = {ask} 'Vad heter du?'\n{if} namn != 'Hedy'\n    {print} 'Du är inte Hedy'\n```\n"
    add_remove_command:
        name: lägg till och ta bort
        description: introduktion till lägg till och ta bort
        default_save_name: kommandot_lägg_till_ta_bort
        levels:
            3:
                story_text: "## Lägg till\nDu kan lägga till element i listan med kommandot `{add} {to}`. För att lägga till ett element i en lista kan du helt enkelt skriva `{add} penguin {to} animals` eller så kan du använda kommandot `{ask}` som i exempelkoden.\n"
                example_code: "```\ndjur {is} hund, katt, känguru\ngillar {is} {ask} Vilket är ditt favoritdjur?\n{add} gillar {to_list} djur\n{print} Jag väljer djur {at} {random}\n```\n"
                story_text_2: "## Ta bort\nOm du kan lägga till element i en lista kan du naturligtvis också ta bort dem. Detta görs med kommandot `{remove} {from}`.\n"
                example_code_2: "```\ndjur {is} hund, katt, känguru\nogillar {is} {ask} Vilket djur gillar du inte?\n{remove} ogillar {from} djur\n{print} Jag väljer djur {at} {random}\n```\n"
                story_text_3: "### Övning\nProva de nya kommandona i den virtuella restaurangen. Lägg till den smak som spelaren hoppas till listan och ta bort de smaker som den är allergisk mot.\n"
                example_code_3: "```\n{print} Hemlig milkshake\nsmaker {is} jordgubb, choklad, vanilj\nhoppas {is} {ask} Vilken smak hoppas du på?\n_\nallergier {is} {ask} Är du allergisk mot några smaker?\n_\n{print} Du får en milkshake med smaker {at} {random}\n```\n"
                start_code: "djur {is} hund, katt, känguru\ngillar {is} {ask} Vilket är ditt favoritdjur?\n{add} gillar {to_list} djur\nogillar {is} {ask} Vilket djur gillar du inte?\n{remove} ogillar {from} djur\n{print} Jag väljer djur {at} {random}"
    in_command:
        name: i
        description: Introduktion till kommandot i
        default_save_name: kommandot_i
        levels:
            5:
                story_text: "## Listor\nNär vi vill kontrollera om något finns i en lista kan vi nu använda kommandot `{in}`.\nDen här koden skriver ut snyggt! om du väljer grönt eller gult, annars meh.\n"
                example_code: "```\nsnygga_färger {is} grön, gul\nfavoritfärg {is} {ask} 'Vilken är din favoritfärg?'\n{if} favoritfärg {in} snygga_färger {print} 'snyggt!'\n{else} {print} 'meh'\n```\n"
                story_text_2: "### Exercise\nFinish the example code by filling in the blanks with commands that you've learned.\nWhen you've finished the code, try to create a code of your own and use a question that you've thought of yourself.\n"
                example_code_2: "```\nanimals is dog, cow, sheep\nanswer is ask 'What is your favorite animal?'\n_ answer _ animals _ 'Mine too!'\n_ _ 'My favorite animals are dogs, cows and sheep'\n```\n"
                start_code: "pretty_colors {is} green, yellow\nfavorite_color {is} {ask} 'What is your favorite color?'\n{if} favorite_color {in} pretty_colors {print} 'pretty!'\n{else} {print} 'meh'"
    repeat_command:
        name: Repeat
        description: repeat command
        default_save_name: repeat_command
        levels:
            7:
                story_text: "## Repeat! Repeat! Repeat!\nLevel 7 adds the `{repeat}` command.  `{repeat}` can be used to execute one line of code multiple times. Like this:\n\n### Exercise\nPlay around with the repeat command. Can you make the happy birthday song in only 3 lines of code instead of 4 now?\n"
                example_code: "```\n{repeat} 3 {times} {print} 'Hedy is fun!'\n```\n"
                start_code: "{print} 'happy birthday to you'\n{print} 'happy birthday to you'\n{print} 'happy birthday dear Hedy'\n{print} 'happy birthday to you'\n"
            8:
                start_code: "{repeat} 5 {times}\n    {print} 'Hello everyone'\n    {print} 'This will be printed 5 times'"
                story_text: "### Repeat commands and indentation\nIn this level you can repeat multiple lines of code with only 1 repeat command.\nYou do this by making a block of lines that you want to repeat.\nThe lines in this block will need **indentation** .\nThat means putting four spaces at the beginning of each line. You will also have to indent when you just want to create a block of one line.\n"
                example_code: "```\n{repeat} 5 {times}\n    {print} 'Hello everyone'\n    {print} 'This is all repeated 5 times'\n```\n"
            9:
                start_code: "{repeat} 3 {times}\n    food = {ask} 'What do you want?'\n    {if} food {is} pizza\n        {print} 'nice!'\n    {else}\n        {print} 'pizza is better'"
                story_text: "In this level you can not only use multiple lines with `{if}` and `{repeat}`, but you can also put them together!\nIn the example you see an `{if}` command within a `{repeat}` command. It is also allowed the other way around, and an `{if}` is also allowed in an `{if}` and a `{repeat}` in a `{repeat}`.\nGive it a try!\n"
                example_code: "```\n{repeat} 3 {times}\n    food = {ask} 'What do you want?'\n    {if} food {is} pizza\n        {print} 'nice!'\n    {else}\n        {print} 'pizza is better'\n```\n"
    for_command:
        name: for
        description: for command
        default_save_name: for
        levels:
            10:
                start_code: "animals {is} dog, cat, blobfish\n{for} animal {in} animals\n    {print} 'I love ' animal"
                story_text: "## For\nIn this level we learn a new code called `{for}`. With `{for}` you can make a list and use all elements.\n`{for}` creates a block, like `{repeat}` and `{if}` so all lines in the block need to start with 4 spaces."
                example_code: "```\nanimals {is} dog, cat, blobfish\n{for} animal {in} animals\n    {print} 'I love ' animal\n```\n"
            11:
                start_code: "{for} counter {in} {range} 1 {to} 5\n    {print} counter"
                story_text: "In this level, we add a new form of the `{for}`. In earlier levels, we used `{for}` with a list, but we can also use `{for}` with numbers.\nWe do that by adding a variable name, followed by  `{in}` `{range}`. We then write the number to start at, `{to}` and the number to end at.\n\nTry the example to see what happens! In this level again, you will need to use indentations in lines below the `{for}` statements."
                example_code: "```\n{for} counter {in} {range} 1 {to} 5\n    {print} counter\n```\n"
    and_or_command:
        name: and or
        description: introducing and or
        default_save_name: and or
        levels:
            13:
                start_code: "name = {ask} 'what is your name?'\nage = {ask} 'what is your age?'\n{if} name {is} 'Hedy' {and} age {is} 2\n    {print} 'You are the real Hedy!'"
                story_text: "We are now going to learn `{and}` and `{or}`! If you want to check two statements, you don't have to use two `{if}`s but can use `{and}` and `{or}`.\n\nIf you use `{and}`, both statements, left and right of the `{and}` need to be true. We can also use `{or}`. Then only one statement needs to be correct."
                example_code: "```\nname = {ask} 'what is your name?'\nage = {ask} 'what is your age?'\n{if} name {is} 'Hedy' {and} age {is} 2\n    {print} 'You are the real Hedy!'\n```\n"
    elif_command:
        name: elif
        description: elif
        default_save_name: elif
        levels:
            17:
                story_text: "In this level you can also use a new command: `{elif}`. `{elif}` is short for `{else}` `{if}` and you need it when you want to make 3 (or more!) options.\nCheck it out!\n"
                example_code: "```\nprices = ['1 million dollars', 'an apple pie', 'nothing']\nyour_price = prices[{random}]\n{print} 'You win ' your_price\n{if} your_price == '1 million dollars' :\n    {print} 'Yeah! You are rich!'\n{elif} your_price == 'an apple pie' :\n    {print} 'Lovely, an apple pie!'\n{else}:\n    {print} 'Better luck next time..'\n```\n"
                start_code: "prices = ['1 million dollars', 'an apple pie', 'nothing']\nyour_price = prices[{random}]\n{print} 'You win ' your_price\n{if} your_price == '1 million dollars' :\n    {print} 'Yeah! You are rich!'\n{elif} your_price == 'an apple pie' :\n    {print} 'Lovely, an apple pie!'\n{else}:\n    {print} 'Better luck next time..'"
    rock_2:
        name: Rock, paper, scissors 2
        description: Part 2 of rock, paper, scissors
        default_save_name: rock_2
        levels:
            2:
                story_text: "Now that you have learned how to use the `{ask} command, you can make your rock, paper, scissors code interavtive too!\n\n### Exercise\nMake the rock, paper, scissors code interactive by adding the `{ask}` command and a question to your rock, paper, scissors code.\n"
                example_code: "```\nchoice is _\n{print} I choose choice\n```\n"
