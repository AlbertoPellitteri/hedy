sections:
-   subsections:
    -   title: 海迪（Hedy）是什么？
        text: "海迪（Hedy ）是一种文本编程语言，专为（前）青少年（10 至 15 岁）开发。\n与 Scratch 等儿童编程语言相比，海迪（Hedy ）不使用模块，而是使用文本代码。\n因此，借助海迪（Hedy ），您将学习如何像真正的程序员一样输入代码，但要通过有趣的练习分小步进行。\n通过这种方式，Hedy 可以通过一种可交互且非常有趣的方式作为真正的编程语言（如 Python）的基础！\n在这里，您可以观看有关 海迪（Hedy ） 作为编程语言的发展的[视频](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s)。\n"
    -   title: 目标群体
        text: "海迪（Hedy ）是以中小学生（10-15 岁）为目标开发。\n对学生们来说，能够很好地阅读是很重要的。 我们建议在学生至少达到三年级阅读水平之前不要开始使用 海迪（Hedy ）。\n在开始使用海迪（Hedy ） 之前，学生（和老师！）不需要任何编程经验。\n"
    -   title: 海迪（Hedy ）是如何工作的？
        text: "海迪（Hedy ）分为多个级别，在这些级别中教授新命令。每个级别都包含各种冒险活动来练习新学到的命令。\n作为老师，您可以决定哪些冒险活动适合您的学生。在这个级别他们会开餐厅、设计计算器或鬼屋吗？在每个级别中，冒险活动都是按照从易到难的顺序排列的。\n因此，您的学生将不断接受挑战。冒险活动可以由学生单独完成，或者您可以在课堂教学中指导他们。\n\n冒险活动还包括一个代码范例，以确保数字化知识较少的教师也能够使用海迪（Hedy） ！\n当然，海迪（Hedy ）也迎合了喜欢自己设计课程和冒险活动的有创意的老师！\n\n在编写一定级别的所有冒险活动的程序之后，您的学生可以在测验中测试他们对这些知识的掌握程度。\n您可以在课程页面上追踪学生的作业和学习进度。\n"
    -   title: 设备
        text: "海迪（Hedy）是基于网络的编程语言，这意味着它可以在任何有浏览器的设备上使用（谷歌浏览器、火狐浏览器、Edge等），因此笔记本电脑、铬笔记本、平板电脑甚至智能手机都适合使用海迪（Hedy）。\n在使用海迪（Hedy）之前，不需要下载任何东西，只要进入网站就可以了！\n"
    -   title: 海迪（Hedy ）社区
        text: "欢迎所有海迪（Hedy ）老师、程序员和其他爱好者加入我们的[Discord服务器](https://discord.gg/8yY7dEme9r)。这是聊海迪（Hedy）的理想场所：我们有一些频道，在那里你可以展示你很酷的项目和课程，有一些频道可以报告错误（bug），还有一些频道可以与其他老师和海迪（Hedy）创作团队聊天。\n"
    title: 简介
    key: 简介
-   subsections:
    -   title: 创建一个班级
        text: "作为一名教师，你可以为你的学生创建一个班级。在这个班级里，你可以看到学生的账户和他们编写的程序，你可以监督他们的学习进度。\n你还可以自定义你的班级，选择哪些冒险活动可供你的学生使用。这样，你的学生就不会面对大量的冒险活动和级别而不知所措，他们可以专注于你想要他们练习的冒险活动。\n"
    -   text: "这里有两种方法可以让您的学生们加入您的班级。您可以让他们建立自己的账户，或者您可以为他们创建账户。\n\n**学生建立自己的账户**。\n您的学生们可以到海迪（Hedy）网站上创建自己的账户，就像您做的那样。要让他们进入您的班级，他们只需点击您发给他们的邀请链接就可以了。\n您可以在班级页面上找到这个邀请链接，并将其发送给您的学生们。请注意，您的学生们必须首先登录到海迪（Hedy）然后再点击邀请链接才能顺利加入班级。\n\n**您为您的学生们创建账户**。\n有时，您为自己的学生们创建一大堆账户会比较容易。这可以通过点击 \"创建学生账户 \"按钮，并为他们填写用户名和密码来实现。\n学生们可以用您选择的用户名和密码登录。然后，如果他们愿意，可以改变他们的用户名或密码，他们仍然会留在你的班级中。\n"
    -   text: "当学生创建个人资料时，他们应该选择一种“首选语言”。Hedy将始终以这种选定的语言加载。\n以后可以通过再次导航到“我的帐户”和“我的个人设置”来更改此语言。\n从2021年12月起，每个Hedy帐户都必须设置首选语言。\n当您的帐户或学生的帐户在此日期之前创建时，您将收到一条消息，指出缺少首选语言。\n不用担心！导航到“我的个人资料”，然后在个人资料设置中设置您的首选语言。\n在您设置语言之前，Hedy将以您的浏览器语言显示，当不支持此语言时，将以英语显示。\n\n**对于非英语人士**\n您不仅可以将冒险活动的语言更改为您自己的语言。您还可以选择关键字（例如“打印”或“询问”）应使用的语言。\n通过这种方式，您可以教学生使用英语关键字进行编码，但您也可以让他们用自己的语言进行编程。例如，荷兰学生可以使用“vraag”命令而不是“询问”命令。\n"
    -   text: "由于您现在已登录，因此您将看到带有“我的个人资料”和“我的程序”的蓝色横幅。\n这些选项卡也适用于您的学生。在“我的程序”中，您可以找到已保存的所有程序。\n\n您可以在白色栏中为程序命名并按绿色按钮“保存程序”来轻松保存程序。\n您（和您的学生）也可以共享程序。这些程序将发布在我们的探索页面上，供所有人查看和使用。\n如果要取消共享程序，请转到“我的程序”，然后单击“取消共享”。\n"
    title: 准备工作
    key: 准备工作
-   key: 教学
    title: 与Hedy一起教学
    subsections:
    -   text: "Hedy包含许多不同的级别，每个级别都教授不同的新技能。我们建议每节课教一个级别。\n这让你的学生有时间完全掌握一个新的命令或概念，并在进入下一个级别之前练习它。\n我们在课程中使用这种结构：\n"
        title: ' '
    -   title: Introduction
        text: "您可以通过激活学生的已有知识来开始上课：他们对该主题已经知道了什么，他们在上一课中学到了什么，以及他们犯了哪些错误，现在已经从中吸取了哪些教训？\n这样，当您尝试引入新课时，所有以前学到的命令和经常犯的错误都会在学生的记忆中保持新鲜感。\n"
    -   title: 介绍新的概念和命令
        text: "对于一些学生来说，新的概念和命令可能很难完全理解。\n这就是为什么向你的学生示范新命令的正确使用是很重要的。\n特别是在低年级阶段，一些学生根本没有编程经验，他们可能很难理解新的抽象概念。\n展示大量的例子可以使一个抽象的概念（例如：\"什么是变量？\"）更容易被识别和理解（\"看，变量宠物变成了狗\"）。\n"
    -   title: 让我们开始工作
        text: "每个级别都包含不同的冒险活动，你可以在粉红色的标签中找到。第一个粉红色选项卡解释了此级别中的新命令。\n以下选项卡是学生可以尝试并制作自己的冒险活动。\n冒险活动是从易到难排列，因此我们建议您从左侧的冒险活动开始，然后尝试右边的冒险活动。\n最后一个选项卡“下一步是什么”提供了您将在下一个级别中学到的内容的一些提示。当然，您可以给您的学生们选择在每个级别应该进行的冒险活动。\n他们并不总是必须进行每一次冒险活动。每个冒险活动都包含一个范例代码，学生可以使用绿色按钮进行尝试。\n范例代码被复制到工作领域，学生可以在那里尝试代码并对其进行调整以使其成为自己的代码。\n激励您的学生通过添加自己的想法并创作自己的冒险活动，将范例代码转换为自己的代码。\n"
    -   title: 小测验
        text: "要测试您的学生是否已选择该级别中的所有新信息，您可以让他们进行测验。\n该测验包含10个关于新概念和命令的多项选择题。\n并非每个级别都有测验，因为我们仍在编制测验。\n"
    -   text: "通过进行简短的评估来总结您的课。学生们学到了什么？他们遇到了哪些困难？\n他们是如何从错误中学习的？当然：他们创造了什么？\n学生往往对自己的作品感到非常自豪，所以最好给学生一点时间让他们有机会向同学展示他们的工作。\n"
-   levels:
    -   sections:
        -   title: 学生忘记键入命令
            example:
                error_code: "Hedy 无法打印此内容\n"
                solution_code: "打印Hedy可以打印此内容!\n"
        -   example:
                error_text: "如果用大写字母键入命令，那么这个命令将不起作用。\n"
                solution_text: "删除大写字母。\n"
        -   title: 学生在没有使用询问的情况下使用了回声命令
            example:
                error_code: "回声 你的名字是\n"
                solution_code: "询问 你叫什么名字？\n回声 你的名字是\n"
        -   example:
                error_text: "而他们是对的! 这就是为什么他们将在下一阶段学习如何使用适当的变量。\n"
                solution_text: "在级别 1 中，我们必须将其保持在以下位置：\n"
        -   title: '海龟：学生让海龟走出屏幕'
            example:
                error_code: "向前 300\n旋转 90\n"
                solution_code: "向前 100\n旋转 90\n"
        -   example:
                solution_code: "向前 -100\n"
                error_code: "向后 100\n"
    -   level: '2'
        sections:
        -   example:
                error_text: "Hedy无法识别带有拼写错误的命令。\n"
                solution_text: "教会你的学生们阅读错误信息。这样他们就能自己找出出错的原因。\n"
        -   title: 学生们忘记了询问命令已经改变
            example:
                error_code: "询问你想吃什么?\n"
                solution_code: "订单是询问你想吃什么？\n"
        -   example:
                error_text: "对于一些学生来说，得知 回声 命令不再起作用可能会令人沮丧。这就是为什么解释使用变量的优点非常重要的原因。例如，您可以在代码中使用多个变量，并且可以将它们放在句子中的任何位置！\n"
                solution_text: "用一个变量来代替。\n"
        -   title: 学生在打印命令中使用变量名作为单词
            example:
                error_code: "名字是Hedy\n打印 嗨，我的名字是名字\n"
                solution_code: "名字是Hedy\n打印 嗨，我是名字\n"
        -   example:
                error_text: "一个变量应该用一个词来命名。你可以用下划线来连接两个词。这样也可以算作一个词。\n"
                solution_text: "添加一个下划线。\n"
        -   title: 学生们可能对同一个变量使用两个不同的名称
            example:
                error_code: "马是询问你的马叫什么？\n打印你的马叫名字\n"
                solution_code: "名字是问你的马叫什么？\n打印你的马叫名字\n"
    -   sections:
        -   title: 学生们尝试打印整个列表
            example:
                error_code: "食品是苹果，牛奶，巧克力\n打印食品\n"
                solution_code: "打印苹果，牛奶，巧克力\n\n或\n\n食品是苹果，牛奶，巧克力\n打印随机选择的食品\n"
        -   example:
                error_text: "此问题可能也发生在级别 2 中。现在，列表也可能发生这种情况。\n"
                solution_text: "不要在常规文本中使用变量或列表的名称并打印。在第 4 级中，这个问题是用引号解决的。\n"
        -   title: 学生随机地忘记
            example:
                error_code: "鸟类是麻雀，海鸥，知更鸟\n随机地打印鸟类\n"
                solution_code: "鸟类是麻雀，海鸥，知更鸟\n随机地打印鸟类\n"
        -   example:
                error_text: "或者他们有时会把随机地放置在一行的开头。\n"
                solution_text: "向您的学生强调始终需要用打印命令才能打印文本。\n"
        -   title: 学生忘记在列表中使用逗号
            example:
                error_code: "披萨是蘑菇披萨金枪鱼披萨四季披萨\n随机地打印披萨\n"
                solution_code: "披萨是蘑菇披萨, 金枪鱼披萨, 四季披萨\n随机地打印披萨\n"
        -   example:
                error_text: "例如\n"
                solution_text: "Hedy 不能随机地打印任何东西，因为没有可供选择的列表。\n"
        -   title: '学生尝试在没有列表的情况下使用添加/删除功能 '
            example:
                error_code: "名字是杰克\n你的_名字问你是谁？\n向名字添加你的_名字\n随机地打印名字\n"
                solution_code: "名字是杰克，艾米\n你的_名字是询问你是谁？\n将 你的_名字添加到名字中\n随机地打印名字\n"
        -   example:
                error_text: "没有 到/从，添加/删除命令将不起作用。\n"
                solution_code: "冒险活动是故事、鹦鹉、骰子\n选择是 你最喜欢哪个冒险活动？\n在冒险活动中添加选择\n从冒险活动中删除骰子\n打印我爱随机选择的冒险活动\n"
    -   level: '4'
        sections:
        -   example:
                error_text: "在这个级别打印和询问需要一组引号。一个在文本之前，一个在文本之后。\n"
                solution_text: "添加正确的引号。\n"
        -   title: 学生使用了错误的引号
            example:
                error_code: "print `欢迎来到本餐厅`。\n食物是询问 \"你想点什么？\"\n"
                solution_code: "打印 '欢迎来到本餐厅'\n食物是问'你想点什么？'\n"
        -   example:
                error_text: "从这一级开始，不允许使用撇号。它们在英语中经常被用于缩略语，如you're, don't或what's。\n"
                solution_text: "你可以选择使用错误的语法，直接不使用撇号。或者你可以把`作为一个撇号来使用。\n"
    -   sections:
        -   title: 学生忘记在如果命令中使用打印
            example:
                error_code: "如果名字是Hedy '太好了！'\n否则'Hedy更好！'\n"
                solution_code: "如果名字是 Hedy 打印 'Great!'\nelse 打印 'Hedy 更好！'\n"
        -   example:
                error_text: "在这个例子中，学生用'马'和'名字'来表示同一个变量。\n"
                solution_text: "始终检查变量在整个代码中是否具有相同的名字。微小的差异可能很难发现（例如复数），但它们会干扰代码。\n"
        -   title: 学生们仍然忘记了两边的引号
            example:
                error_code: "如果名字是Hedy，则打印 好玩\n否则打印 '嗯!\n"
                solution_code: "如果名字是 Hedy 打印 '好玩'\n否则打印'嗯！'\n"
        -   example:
                error_text: "在此级别中，变量名称两边没有引号。\n"
                solution_text: "删除引号以使代码正常工作。\n"
        -   title: 学生使用包含两个单词的长变量名
            example:
                error_code: "选择的门是询问'你选哪个门？'\n"
                solution_code: "选择_门是询问'你选哪个门？\n"
        -   example:
                error_text: "例如这个学生Hedy告诉他所有的朋友，他们很有趣，但其他同学会被告知他们不有趣。\n"
                solution_text: "你可以使用`in`命令来实现。这在更高的级别上有解释，但它在第5级上确实已经工作了。\n另一个解决方案是使用多个'如果'命令，没有'否则'命令。缺点是它不会告诉其他同学他们并不有趣。\n"
        -   title: 学生们使变量名与'如果'语句中的值相同
            example:
                error_code: "密码是询问 '密码是什么?'\n如果密码是密码，打印'允许进入'\n否则打印'拒绝访问！'\n"
                solution_code: "保密_密码是询问 '密码是什么'\n如果 保密_密码 是密码 打印'授予访问权限！'\n否则打印 '访问被拒绝！'\n"
    -   level: '6'
        sections:
        -   example:
                error_code: "打印 '5 + 5'\n"
                solution_text: "在这段代码中，输出屏幕将打印'10'。\n"
        -   example:
                solution_code: "价格=0\n打印 '欢迎来到我们的汉堡店' \n汉堡 = 询问 '你想吃汉堡吗？'\n如果汉堡 =是 价格 = 价格 + 10\n饮料 = 询问 '你想喝饮料吗？'\n如果饮料 = 是 价格 = 价格 + 4\n打印 '那将是 ' 价格 ' 欧元\n"
                error_code: "年龄=询问'你现在多大了？'\n打印'明年你的年龄是'年龄+ 1\n"
            title: 学生们对用变量做数学这个概念感到困惑
    -   sections:
        -   example:
                error_text: "确保学生知道同时使用完整的重复命令和打印命令。\n"
                solution_code: "重复3次 打印 '因为他是一个快乐的好伙伴'\n重复3次 打印 '没有人可以否认！'\n"
            title: 学生们忘记了重复命令中的一个词，或者他们忘记了打印命令
        -   example:
                solution_code: "饮料 = 询问'你想喝什么？'\n打印饮料\n饮料 = 询问'你想喝什么？'\n打印饮料\n饮料 =询问'你想喝什么？'\n打印饮料\n"
                solution_text: "您应该进入下一个级别，以便能够重复多行。因此，在这个级别上，您必须单独打印所有内容。\n"
        -   title: 学生编写的程序运行时间过长
            example:
                error_code: "重复100次打印'我可以重复多少次？'\n"
                solution_code: "重复20次打印'这就足够了'\n"
    -   sections:
        -   title: 学生用错了缩进
            example:
                error_code: "重复 3 次\n打印'你好'\n"
                solution_code: "重复 3 次\n    打印'你好'\n"
        -   example:
                solution_text: "在正确的代码里第三行有行首空格。这么一来它也属于“重复格”， 因此被重复3次。\n向学生们展示这些差别能帮助他们理解为何在运行代码时，需要行首空格。\n"
                error_text: "例如，在下面的这段代码中，学生想知道3个人各自点了哪种饮料。但这段代码只问了1次，而不是3次。\n"
        -   example:
                solution_code: "生日 = 询问 '是你的生日吗？'\n如果生日=是\n        打印'嗨，嗨，祝贺！'\n        打印'嗨，嗨，祝贺！'\n        打印'嗨，嗨，祝贺！'\n"
                error_code: "生日 = 询问 '是你的生日吗？'\n如果生日=是\n    重复3次\n        打印'嗨，嗨，祝贺！'\n"
            title: 学生想要嵌套如果语句，或者把如果语句放在一个循环中
        -   example:
                error_text: "在这个级别中，编写长代码非常容易。不允许学生编写需要很长时间才能加载的程序（以保护我们的服务器）。\n"
                solution_text: "确保代码不会太长\n"
        -   example:
                solution_text: "你可以通过添加引号来解决这个错误。这样计算机就知道 \"如果密码是 '密码'\"中的第二个密码是一个字符串值（所以是普通文本），而不是变量名。\n"
                error_text: "我们已经看到一些学生犯了这个错误。他们为自己的计算机设置了一个密码，但他们把密码设为 “密码”。\n在第2行，计算机被要求检查变量密码是否与变量密码相同，所以自己和自己是相同的。这意味着答案永远是“是”。\n所以用这段代码，无论玩家填写什么，答案永远是'你可以进来'。\n"
            title: 学生使用if（如果）命令检查变量值是否与变量名相同
    -   sections:
        -   title: 学生使用缩进时出错
            example:
                error_code: "打印'罗宾在市中心散步'\n位置 = 询问'Robin 是去商店还是回家？'\n如果位置是商店\n    打印print '她进了商店。'\n    打印 '罗宾看到一本有趣的书'\n    书 = 询问'Robin 买书了吗？'\n        如果书是是\n打印 '罗宾买了书，然后回家了'\n否则\n    打印'罗宾离开商店回家了'\n否则\n    打印'罗宾回家'\n"
                solution_code: "打印'罗宾正在市中心散步'\n位置 = 询问'罗宾是要进商店，还是要回家？'\n如果位置是商店\n    打印'她进入了商店。'\n    打印'罗宾看到一本看起来很有趣的书'\n    书 = 询问 '罗宾买了这本书吗？'\n    如果书是是\n        打印'罗宾买了这本书，然后回家了'\n    否则\n        打印'罗宾离开商店回家了' 。\n否则\n    打印'罗宾回家了'\n"
    -   sections:
        -   example:
                solution_text: "最后一行中的“动物们”一词应改为“动物”。\n"
                error_text: "我们经常看到学生尝试打印列表（在示例中的动物们）而不是列表中的项目。\n"
        -   title: 学生们忘记缩进了
            example:
                error_code: "动物们是狗，猫，水滴鱼\n取动物们中的动物\n打印'我爱'动物\n"
                solution_code: "动物们是狗，猫，水滴鱼\n取动物们中的动物\n  打印'我爱'动物\n"
    -   level: '11'
        sections:
        -   example:
                error_text: "确保学生使用缩进。\n"
                solution_text: "这就是正确的代码。\n"
        -   title: 学生们不理解i的意思
            example:
                error_code: "取 i 在 1 到 5 的范围内\n打印i\n"
                solution_code: "取香蕉在 1 到 5 的范围内\n    打印香蕉\n"
    -   sections:
        -   title: 学生们忘记引号了
            example:
                solution_text: "这就是正确的代码。\n"
                solution_code: "超级英雄们 = '蜘蛛侠'、'蝙蝠侠'、'钢铁侠'\n超级英雄=随机的超级英雄们\n如果超级英雄 = '蝙蝠侠'\n    打印'我是蝙蝠侠！'\n"
        -   example:
                error_text: "如果你想让电脑把数字识别成文字，你也能把他们放在引号里。这也代表了你无法使用这些数字来进行计算。\n在以下的例子里， 你无法使用数字25进行计算， 因为它在引号里。\n"
                solution_text: "这是正确的代码:\n"
        -   example:
                error_text: "从这个级别开始你能使用十位数，但不能使用逗号.\n"
                solution_text: "这是正确的代码:\n"
            title: 学生在十位数里使用了逗号而非句号
    -   sections:
        -   example:
                solution_code: "游戏是问“你想玩游戏吗？”\n时间是问'你有时间玩吗？\n如果游戏是“是”或时间是“是”\n     打印“让我们玩吧！”\n"
                error_code: "游戏是问“你想玩游戏吗？”\n时间是问'你有时间玩吗？\n如果游戏是“是”或时间是“是”\n     打印“让我们玩吧！”\n"
            title: 学生搞混了 `和` 与 `或`
    -   sections:
        -   title: 学生混淆“<” 和 “> ”符号
            example:
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students forget to use the == sign
            example:
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
                solution_code: "name = ask 'What is your name?'\nif name == 'Hedy'\n    print 'You are cool!'\n"
    -   sections:
        -   title: Students forget indentation in the while loop
            example:
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   sections:
        -   example:
                error_text: "From this level on lists should be in brackets.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students use the wrong brackets
            example:
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_text: "This is the correct code:\n"
        -   example:
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream at random ' icecream'\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
            title: Students still use the old at random command
        -   example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_text: "This is the correct code:\n"
        level: '16'
    -   sections:
        -   example:
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
        -   example:
                solution_text: "This is the correct code:\n"
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
            title: Students forget the colon
    -   sections:
        -   example:
                error_text: "Students will forget to put brackets around their text.\n"
                solution_text: "This is the correct code:\n"
            title: Students forget to use the brackets
        -   example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                solution_text: "This is the correct code:\n"
        -   example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                solution_text: "This is the correct code:\n"
            title: Students might use the brackets as quotation marks
    title: 常见错误
    key: 常见错误
title: 海迪（Hedy）文档
learn-more-sections:
-   title: "你喜欢Hedy海迪吗?"
    text: |
        我们很高兴听取您的意见和建议！
        [请点击这里给我们留言](mailto:hello@hedy.org "关于海迪")
-   title: "你发现了一个错误？"
    text: |
        [请到GitHub告知我们](https://github.com/hedyorg/hedy/issues/new/choose)page_title: Contact — Hedy
-   title: "编程周讲座"
    text: |
        想要了解更多有关海迪（Hedy）的信息？请观看翡丽娜（Felienne）在2020年欧洲编程周活动上所做的学术报告:

        <iframe width="560" height="315" class="mx-auto mt-4" src="https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
start-sections:
-   title: "什么是循序渐进的编程语言?"
    text: |
        学习编程是一件很难的事情。不是说编程本身很难! 而是你需要记住很多规则，就像你刚刚开始学习英语时一样。
        同样的，你也需要通过做大量练习题来学习编程。

        当然你现在可以轻松地读懂这段话。但你还记得你小时候是怎么学习阅读的吗？你那时候学习每个字都需要花费一定的时间!
        对于编程来说也是如此，刚刚开始学的时候可能会觉得很难，但以后会变得越来越容易!

        Hedy（海迪）最大的好处就是你可以*循序渐进*的学习编程。这意味着你不必一下子学会所有的规则
        最初的几个级别里面没有太多的规则，所以你一开始就可以轻松的学习编程。
        在每一个级别里面我们都会增加新的规则，增加你所知道的命令数量。命令是计算机的指令。
-   title: "为什么Hedy（海迪）是循序渐进的？"
    text: |
        在这段视频中，Hedy(海迪)的开发者Felienne（翡丽娜）解释了为什么海迪是循序渐进的

        <iframe width="560" height="315" class="mx-auto mt-4" src="https://www.youtube.com/embed/fmF7HpU_-9k" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
-   title: "谁适合学习Hedy（海迪）？"
    text: |
        Hedy（海迪）是为所有想学习编程的孩子们设计的! 当然你要有一定的英语基础。
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: "我需要有编程经验吗？"
    text: |
        不，这不需要。不过，如果你曾经用Scratch或Python编写过程序，你会觉得有些命令很熟悉
-   title: "Hedy（海迪）是免费的吗？"
    text: |
        是的！莱顿大学允许我们免费分享它。Hedy（海迪） 也是 "开源 "的，这意味着每个会编程的人都可以帮助我们把 Hedy（海迪） 做得更好。
        你可以在 GitHub上找到它的代码，[GitHub](https://github.com/hedyorg/hedy).
        如果你喜欢Hedy并想要捐助这个项目，我们愿意接受您的捐助（并非常感谢） [捐款](https://github.com/sponsors/hedyorg)!
-   title: "我要安装任何软件吗？"
    text: |-
        不需要。Hedy（海迪）可以通过浏览器直接运行，浏览器就是您现在查看这个页面所使用的程序。你可以选择使用 Chrome、Edge 或 Firefox等浏览器。Hedy（海迪） 也可以在您的手机或平板电脑上运行。
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Translating Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
