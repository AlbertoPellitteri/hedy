sections:
-   title: Въведение
    key: intro
    subsections:
    -   title: Какво е Хеди?
        text: "Хеди е текстов език за програмиране, специално създаден за младежи (на възраст между между 10 и 15 години).\nЗа разлика от езиците за програмиране за деца (като Scratch) Хеди използва текстов код вместо блокове от код.\nТака че с Хеди ще се научите как да пишете код като истинските програмисти, но на малки стъпки със забавни упражнения.\nПо този начин Хеди функционира като преход към реалните езици за програмиране като Python по достъпен и много забавен начин!\nТук може да видите видео [video](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) за развитието на Хеди като език за програмиране.\n"
    -   title: Целева аудитория
        text: "Хеди е разработен за учениците в началното и средното училище (10-15 годишни).\nВажно е учениците да могат да четат добре. Препоръчваме ви да не започвате със Хеди преди учениците да са достигнали поне трети клас.\nУчениците (и учителите!) нямат нужда от предварителни знания по програмиране преди да започнат с Хеди.\n"
    -   title: Как работи Хеди?
        text: "Хеди е разделена на нива, в които се преподават нови команди. Всяко ниво съдържа разнообразни приключения за практикуване на научените команди.\nКато учител вие решавате кои приключения да бъдат достъпни за вашите ученици. Дали в това ниво те ще правят ресторант, калкулатор или къща с призраци? Във всяко ниво приключенията са подредени от най-лесните към най-трудните.\nТака че учениците ви ще продължават да бъдат предизвикани. Приключенията могат да бъдат изпълнявани от учениците индивидуално или можете да ги използвате за работа в клас.\n\nПриключенията включват и пример за код, за да може и по-слабо запознатите с цифровите технологии учители да използват Хеди!\nРазбира се Хеди е подходяща и за креативните учители, които обичат да правят свои собствени планове на уроци и приключения!\n\nСлед като програмирате всички приключения от определено ниво, учениците ви могат да проверят знанията си във викторината.\nМожете да проследявате работата на учениците и техния напредък на страницата на класа.\n"
    -   title: Устройства
        text: "Хеди е уеб базиран, което означава, че работи на всяко устройство с браузър(Google Chrome, Firefox, Edge и т.н.) като лаптопи, хромбук, таблети и дори смарт телефони.\nНяма нужда да инсталирате нищо преди да работите с Хеди, просто отворете уебсайта и сте готови!\n"
    -   title: Общността на Хеди
        text: "Всички учители, програмисти и други фенове на Хеди са добре дошли да се присъединят към нашия [Discord сървър](https://discord.gg/8yY7dEme9r). Това е идеалното място за разговори за Хеди : имаме канали, в които можете да покажете страхотните си проекти и уроци, канали за докладване на грешки и канали за разговори с други учители и с екипа на Хеди.\n"
-   title: "Tutorial"
    key: "tutorial"
    subsections:
    -   title: "Tutorial"
        text: |
            Do you want to follow the tutorial (again)? Click [here](https://hedycode.com/tutorial)
-   title: Подготовка
    key: подготовка
    subsections:
    -   title: Създаване на клас
        text: "Като учител може да създадете клас за своите ученици. В този клас вие може да виждате профилите на учениците и техните програми, както и да наблюдавате техния прогрес.\nМоже да персонализирате вашия клас и да избирате кои предизвикателства са достъпни. По този начин учениците няма да се чувстват пренатоварени от предизвикателства и нива и ще могат да се фокусират върху предизвикателства, които вие предпочитате.\n"
    -   title: Профили на ученици
        text: "Вашите ученици могат да се включат в класа по два начина: сами да си създадат профили или вие да създадете профилите на тях.\n\n**Ученици, които сами създават профила си**\nВашите ученици модат да отварят сайта на Хеди и сами да си създадат профил, точно както вие създадохте собствения си профил. За да се включат в класа, те само трябва да кликнат на клинка с покана за включване.\nЛинкът с поканата за включване се намира на страницата на класа, оттам може да го копирате и пратите на учениците. Имайте предвид, че учениците трябва да са влезли в профила си преди да кликнат на линка, за да работи безпроблемно.\n\n**Ученици, за които вие създавате профил**\nПонякога е по-лесно да направите всички акаунти за учениците си. Това става като кликнете на бутона \"Създаване на профил за ученици\" и попълните потребителските имена и пароли.\nУчениците могат да влязат в профилите си като използват потребителските имена и пароли, които вие сте задали. По-късно вие може да промените името или паролата, ако някой пожелае, като ученикът ще продължи да е записан в класа.\n"
    -   title: Задаване на предпочитан език
        text: "Когато учениците създават профили, те трябва да изберат \"предпочитан език\". Хеди винаги ще се зарежда на избрания език.\nПромяната на избрания език винаги може да бъде направена по-късно, като се отидете на \"Моят профил\" и оттам в \"Моите лични настройки\".\nОт декември 2021 г. задаването на предпочитан език е задължително за всеки профил в Хеди.\nКогато Вашият акаунт или акаунтите на Вашите ученици са създадени по-рано от тази дата, ще получите съобщение, че липсва предпочитан език.\nНе се притеснявайте! Отидете в \"Моят профил\" и задайте език в настройките на профила си.\nДокато не зададете език, Хеди ще се показва на езика на Вашия браузър, а когато този език не се поддържа - на английски език.\n\n**За хора, които не говорят английски език**\nМожете не само да промените езика на приключенията на собствения си език. Можете също така да изберете на какъв език да бъдат ключовите думи (например \"отпечатай\" или \"попитай\").\nПо този начин можете да научите учениците си да програмират с английски ключови думи, но можете и да им позволите да програмират на собствения си език. Например холандските ученици могат да използват командата 'vraag' вместо 'ask'.\n"
    -   title: Запазване на програми
        text: "Тъй като вече сте влезли в системата, ще видите син банер с Моят профил и Моите програми.\nТези табове съществуват и за вашите ученици. В Моите програми можете да намерите всички кодове, които сте запазили.\n\nМожете лесно да запазвате проектите си като дадете име на проекта си в бялата лента и натиснете зеления бутон Запази кода.\nВие (и вашите ученици) можете също така да споделяте програми. Тези програми ще бъдат публикувани на нашата страница за изследване, за да могат всички да ги видят и използват.\nАко искате да отмените споделянето на програмата си, отидете в \"Моите програми\" и натиснете \"Отменете споделянето\".\n"
    -   text: "Because you are now logged in, you'll see the blue banner with My profile and My programs.\nThese tabs exist for your students too. In My programs you can find all the codes that you've saved.\n\nYou can save your projects easily by giving your project a name in the white bar and pressing the green button Save Code.\nYou (and your students) can also share programs. These programs will be posted on our [explore page](https://hedycode.com/explore), for everybody to see and use.\nIf you want to unshare your program, go to 'My programs' and click 'Unshare'.\n"
        title: Storing programs
-   key: преподаване
    subsections:
    -   text: "Хеди съдържа много различни нива, всяко от които е за ново умение. Ние препоръчваме да преподавате по едно ниво на урок. Това дава време на учениците напълно да усвоят всяка нова команда или концепция преди да продължите към следващото ниво.\nНие използваме следната структура в нашите уроци:\n"
        title: ' '
    -   title: Introduction
        text: "You can start your lessons by activating your students' prior knowledge: What do they already know about the subject, what did they learn in the previous lesson and which mistakes did they make that they've now learned from?\nThis way all the previously learned commands and frequently made mistakes are fresh in your students' memories, when you strat introducing the new lesson.\n"
    -   title: Въведение в новите концепции и команди
        text: "The new concepts and commands can be very hard for some students to fully understand.\nThat's why it's of importance to model the proper use of the new commands to your students.\nEspecially in the lower levels, where some students have no experience whith programming at all, it can be hard for them to understand the new abstract concepts.\nShowing a lot of examples makes an abstract concept (for instance: 'What is a variable?') more recognizable and easier to understand ('Look, the variable pet changed into dog').\n"
    -   title: Нека започнем работа
        text: "Each level contains different adventures that you can find in the pink tabs. The first pink tab explains the new commands in this level.\nThe following tabs are adventures that the students can try out and make their own.\nThe adventures are arranged from easiest to hardest, so we recommend to start on the left and your your way to the right.\nThe last tab 'what's next' gives a little teaser of what you'll learn in the next level. Of course, you can select the adventures you want your students to do for each level.\nThey don't always have to make every adventure. Every adventure contains an example code, that the students can try out with the green button.\nThe example code gets copied to the workfield, where the students can try out the code and adjust it to make it their own.\nStimulate your students to turn the example codes into their own projects by adding their own ideas and making their own variation of the adventure.\n"
    -   title: Тест
        text: "To test whether your students have picked up all the new info in the level, you can let them make the quiz.\nThe quiz contains 10 multiple choice questions about the new concepts and command to that level.\nNot every level has a quiz yet, as we are still building the quizzes.\n"
    -   title: Оценяване
        text: "Round up your lesson by having a brief evaluation. What did the students learn? Which hardships did they come across?\nHow did they learn from their mistakes? And of course: What did they create?\nStudents are often very proud of their own creations, so it's nice to save a little time and gove your students the opportunity to show their work to their classmates.\n"
    -   title: Evaluation
        text: "Round up your lesson by having a brief evaluation. What did the students learn? Which hardships did they come across?\nHow did they learn from their mistakes? And of course: What did they create?\nStudents are often very proud of their own creations, so it's nice to save a little time and gove your students the opportunity to show their work to their classmates.\n"
    title: Преподаване с Хеди
-   title: "Extra Hedy features"
    key: "features"
    subsections:
    -   title: "Teacher Statistics"
        text: |
            This [video](https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s) shows you more information on how to use the teacher statistics in your class.
    -   title: "Make your own adventure"
        text: |
            It is also possible for teachers to create your own adventure. [This video](https://www.youtube.com/watch?v=A0zbXpxX4q4) shows you how to create your own adventure as a teacher and add it to your class(es).
    -   title: "Explore page"
        text: |
            On the [explore](https://hedycode.com/explore) page you can view the work of other Hedy users. You can try out their programs and use them as inspiration to create something cool yourself.
            You can also add a program you've made to the explore page yourself by clicking 'Save and share code' in the coding screen or go to My Programs and click 'Share'.
            Don't want to share your work anymore? Simply go to 'My Programs' and click 'Unshare'.
            If you want more information about the explore page, check out this [video](https://www.youtube.com/watch?v=26boFjqvS5Q).
    -   title: "My achievements"
        text: |
            If you click on your username in the topright corner of your screen, you can go to [My achievements](https://hedycode.com/my-achievements). On this page you achievements are collected. Your students have such a page as well.
            When you hover over the badge with your mouse, you'll see how to earn the badge. There are hidden badges too, of which you'll have to find out yourself how to earn them.
            If you want more information on the achievements, check out this [video](https://www.youtube.com/watch?v=-FjmKejukCs).
    -   title: "High Scores"
        text: |
            On [this page](https://hedycode.com/highscores) you can see the high scores of all Hedy users.
            In this [video](https://www.youtube.com/watch?v=IqTiUkBVTo8) you can learn some more about the high scores.
    -   title: "Debugger"
        text: |
            Is your (student's) code not working? There must be a bug (coding mistake) in it! You can use the debugger to find the mistake.
            The debugger is the ladybig button in your coding screen. If you press it, you can run your code line by line to find your mistake.
            Have you found the mistake? Press the red stop button and the debugger will shut off.
    -   title: "Read aloud"
        text: |
            Do you want the output of your program to be read aloud? Then you can use the read aloud function that is found under the 'run code' button in your coding screen.
    -   title: "Programmers mode"
        text: |
            Distracted by all the adventures, or do you want to make a long program? Then check out the 'Programmers Mode' switch at the bottom of your coding screen.
            Programmers mode allows you and your students to use a bigger coding screen.
    -   title: "Other useful features"
        text: |
            This [video](https://www.youtube.com/watch?v=c4MntPPgl1Y) shows you even more features of Hedy, like the cheatsheets and the keyboard switcher.
-   levels:
    -   sections:
        -   {}
        -   example:
                error_code: "Попитай Защо кодът ми не работи?\nОтпечатай Защото използвам главни букви.\n"
        -   {}
        -   title: Учениците искат тяхната дума за принтиране да е в средата на изречението
        -   example:
                solution_code: "forward 100\nturn 90\n"
        -   {}
    -   sections:
        -   example:
                error_text: "Hedy can't recognize a command with a typo.\n"
        -   example:
                solution_text: "In this level you have to tell Hedy where to save your answer, so it can be used later on. This is called a variable.\n"
        -   {}
        -   example:
                error_text: "In the example below the word 'name' is used a a variable, but also as a normal text. The output of this code will be 'Hi my Hedy is Hedy'.\n"
        -   title: Students use long variable names containing two words.
        -   {}
    -   sections:
        -   example:
                error_text: "A list can't be printed. You can only print one item from the list with at random.\n"
        -   title: Students use the name of a variable or list as regular text.
        -   {}
        -   example:
                error_code: "fruit is apple, cherry, banana\nfruit at random\n"
        -   {}
        -   title: Students try to use at random without a list.
        -   example:
                solution_text: "There has to be a list first, so you have to add a second name to turn names into a list, for example Amy. If you don't want amy on your list, you can use remove to remove it after.\n"
        -   {}
    -   level: '4'
        sections:
        -   {}
        -   example:
                solution_text: "These are the correct quotation marks:\n"
        -   {}
    -   sections:
        -   title: Students forget to use print in an if command
        -   example:
                solution_text: "Always check wheter the variable has the same name throughout the code. Slight differences can be hard to spot (for example plurals) but they will interfere with the code.\n"
        -   {}
        -   example:
                error_text: "In this level there are no quotes around variable names.\n"
        -   example:
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   {}
        -   example:
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Acces denied!'\n"
    -   sections:
        -   example:
                solution_text: "In this code the output screen will print '10'.\n"
        -   {}
    -   sections:
        -   title: Students forget one of the word of the repeat command, or they forget the print command
        -   example:
                solution_text: "You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.\n"
        -   {}
    -   sections:
        -   title: Students use the indentation wrong
        -   example:
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
        -   {}
        -   example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
        -   title: Students use the if command to check if the variable value is the same as the variable name
    -   sections:
        -   {}
    -   sections:
        -   example:
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
        -   example:
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
    -   sections:
        -   {}
        -   title: Students don't understand the i
    -   sections:
        -   example:
                solution_text: "This is the correct code:\n"
        -   {}
        -   title: Students use commas instead of periods in decimal numbers
    -   sections:
        -   example:
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
    -   sections:
        -   example:
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   {}
        -   example:
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
    -   sections:
        -   example:
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   sections:
        -   {}
        -   example:
                error_code: "icecream = ('starwberry', 'chocolate'}\nprint 'I love ' icecream[random] ' icecream'\n"
        -   {}
        -   example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
        -   example:
                solution_text: "This is the correct code:\n"
    -   sections:
        -   example:
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
        -   {}
    -   sections:
        -   example:
                error_text: "Students will forget to put brackets around their text.\n"
        -   example:
                solution_code: "print('My name is Hedy!')\nname = input('What is your name?')\nprint('So your name is ', name)\n"
        -   {}
    title: Common mistakes
    key: common_mistakes
    intro: "You can learn from your mistakes, especially in coding!\nMaking mistakes is unavoidable, and a great opportunity to learn, but for teachers it can be a challenge to find the correct fix for a mistake!\nEspecially as the codes get longer and longer as the levels progress. That's why we've made a list with frequently made mistakes in each level, and their solutions.\n"
title: Документация на Хеди
learn-more-sections:
-   title: "Do you like Hedy?"
    text: |
        We love to hear from you!

        [Click here to send us a message](mailto:hello@hedy.org "About Hedy")
-   title: "Found a bug?"
    text: |
        [Let us know on GitHub](https://github.com/hedyorg/hedy/issues/new/choose)
-   title: "Want to help?"
    text: |
        The easiest way is to help with [translating Hedy](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)

        Below the current status, help us complete a language, or add a new one.
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Translation status" /></a>
start-sections:
-   title: "Textual programming made easy!"
    text: |
        Many schools and teachers around the world want to teach their students programming. Initially this is often done with playful tools, ranging from the Beebot robot to
        Scratch Junior or Scratch. After using such tools, kids often want to move to more powerful, textual programming languages, like Python.

        Python however is hard, because it is only available in English, and requires learners to learn complex programming concepts and syntax at once.
        Hedy is the easy way to get started with textual programming languages! Hedy is free to use, open source, and unlike any other textual programming language in three ways.

        1. Hedy is multi-lingual, you can use Hedy in your own language
        2. Hedy is gradual, so you can learn one concept and its syntax a time
        3. Hedy is built for the classroom, allowing teachers to fully customize their student's experience
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Step by step learning"
    text: |
        Learning a programming language can be overwhelming, since learners have to learn concepts (for example if-else or loops) and syntax (like quotation marks or round brackets) at the same time. In Hedy, concepts are first introduced with little syntax and then refined. A scientifically proven way to learn!
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: "Programming in context"
    text: |
        Hedy shows programming in the broadest way possible, and can be used in variety of exciting ways. Hedy allows for the creation of digital and interactive stories, colorful drawings that can be shown on the screen but also drawn with a pen plotter or embroidered on a shirt, and can be used to create games or apps with buttons and keyboard actions.
-   title: "Is Hedy free?"
    text: |
        Yes! Hedy is 'Open source', which means that everyone can help us make Hedy better.
        You can find our code on [GitHub](https://github.com/hedyorg/hedy).
        If you like Hedy and want to contribute, we accept (and are very grateful for) [donations](https://github.com/sponsors/hedyorg)!

-   title: "Do I need to install anything?"
    text: |-
        No. Hedy works in the browser, which is the program you are using to look at this page. Probably Chrome or Edge or Firefox. Hedy also works on phones and tablets.
-   title: "Do I need programming experience to teach with Hedy?"
    text: |-
        No, that is not needed. All concepts are explained in the slides and in the interface for learners.
        If you create a free teacher's account, you also get access to the teacher's manual with information on how to teach
        and frequently made mistakes.

join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Translating Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
