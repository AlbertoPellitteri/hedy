title: Hedy документація
sections:
-   title: Введення
    key: введення
    subsections:
    -   title: Що таке Hedy?
        text: "Hedy — це мова текстового програмування, спеціально розроблена для підлітків (від 10 до 15 років).\nНа відміну від мов програмування для дітей, таких як Scratch, Hedy використовує не блоки коду, а текстовий код.\nТож із Hedy ви навчитеся вводити код, як це роблять справжні програмісти, але маленькими кроками за допомогою ігрових вправ.\nТаким чином Hedy може функціонувати як сходинка до справжніх мов програмування, таких як Python, у доступний і переважно цікавий спосіб!\nТут ви можете переглянути [відео]: (https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) про розвиток Hedy як мови програмування.\n"
    -   title: Цільова аудиторія
        text: "Hedy розроблено для учнів середньої та молодшої школи (віком від 10 до 15 років).\nВажливо, щоб учні вміли добре читати. Ми рекомендуємо не починати з Hedy, поки учні не досягнуть рівня читання принаймні в 3-му класі.\nСтудентам (і вчителям!) не потрібен досвід програмування, перш ніж почати працювати з Hedy.\n"
    -   title: Як працює Hedy?
        text: "Hedy розділений на рівні, на яких навчаються новим командам. Кожен рівень містить різноманітні пригоди, щоб відпрацювати щойно вивчені команди.\nЯк учитель, ви вирішуєте, які пригоди доступні для ваших учнів. Чи будуть вони робити ресторан, калькулятор чи будинок з привидами такого рівня? На кожному рівні пригоди розташовані від найлегшого до найважчого.\nТож ваші студенти постійно отримують виклики. Пригоди можуть виконувати учні самостійно, або ви можете використати їх у класичному навчанні.\n\nПригоди також включають приклад коду, щоб переконатися, що вчителі, які менш обізнані з цифровими засобами, також зможуть використовувати Hedy!\nЗвичайно, Hedy також обслуговує творчих вчителів, які люблять складати власні плани уроків і пригоди!\n\nПісля програмування всіх пригод певного рівня ваші учні можуть перевірити свої знання у вікторині.\nВи можете відслідковувати роботу своїх учнів та їх прогрес на сторінці класу.\n"
    -   title: Прилади
        text: "Hedy базується в Інтернеті, що означає, що він працює на будь-якому пристрої з браузером (Google Chrome, Firefox, Edge тощо), тому для використання Hedy підходять ноутбуки, хромбуки, планшети та навіть смартфони.\nНе потрібно нічого завантажувати, перш ніж працювати з Hedy, просто перейдіть на веб-сайт, і все готово!\n"
    -   title: Спільнота Hedy
        text: "Усі вчителі Hedy, програмісти та інші шанувальники можуть приєднатися до нашого [сервера Discord](https://discord.gg/8yY7dEme9r). Це ідеальне місце для спілкування про Hedy: у нас є канали, де ви можете показати свої круті проекти та уроки, канали для повідомлення про помилки та канали для спілкування з іншими викладачами та командою Hedy.\n"
-   subsections:
    -   title: Створення класу
        text: "Як вчитель, ви можете створити клас для своїх учнів. У цьому класі ви можете бачити облікові записи студентів та їхні програми, а також контролювати їхній прогрес.\nВи також можете налаштувати свій клас і вибрати, які пригоди доступні для них. Таким чином ваші учні не будуть перевантажені кількістю пригод і рівнів, і вони зможуть спеціально зосередитися на пригодах, які ви хочете, щоб вони потренувалися.\n"
    -   text: "Є 2 способи дозволити студентам приєднатися до вашого класу: ви можете дозволити їм створювати власні облікові записи або ви можете створити для них облікові записи.\n\n**Студенти самостійно створюють облікові записи**\nВаші учні можуть перейти на веб-сайт Hedy і створити власні облікові записи, як це зробили ви. Щоб залучити їх до вашого класу, вони просто повинні натиснути посилання запрошення.\nВи можете знайти посилання для запрошення на сторінці класу та надіслати його своїм учням. Майте на увазі, що ваші студенти мають увійти в систему Hedy, коли вони натискають посилання, тому робота буде безперебійною.\n\n**Ви створюєте облікові записи для своїх учнів**\nІноді простіше самостійно створити цілу купу облікових записів для своїх учнів. Це можна зробити, натиснувши кнопку «створити облікові записи студентів» і ввівши імена користувачів і паролі для них.\nСтуденти можуть увійти за допомогою імені користувача та пароля, які ви вибрали. Після цього вони можуть змінити своє ім’я користувача чи пароль, якщо захочуть, і залишаться у вашому класі.\n"
    -   text: "Коли учні створюють профіль, вони повинні вибрати «бажану мову». Hedy завжди завантажуватиметься цією вибраною мовою.\nЗмінити цю мову можна будь-коли пізніше, знову перейшовши до «Мого облікового запису» та «Мої особисті налаштування».\nЗ грудня 2021 року встановлення бажаної мови є обов’язковим для кожного облікового запису Hedy.\nЯкщо ваш обліковий запис або облікові записи ваших студентів буде створено раніше цієї дати, ви отримаєте повідомлення про те, що бажана мова відсутня.\nНе переживай! Перейдіть до «Мого профілю» та встановіть мову в налаштуваннях профілю.\nДоки ви не виберете мову, Hedy відображатиметься мовою вашого браузера, а якщо ця мова не підтримується, англійською.\n\n**Для тих, хто не володіє англійською мовою**\nВи не тільки можете змінити мову пригод на свою мову. Ви також можете вибрати мову ключових слів (наприклад, «друкувати» або «запитати»).\nТаким чином ви можете навчити своїх учнів кодувати за допомогою англійських ключових слів, але ви також можете дозволити їм програмувати своєю мовою. Наприклад, голландські студенти можуть використовувати команду «vraag» замість «ask».\n"
    -   text: "Оскільки ви вже ввійшли в систему, ви побачите синій банер в розділах Мій профіль та Мої програми.\nЦі вкладки також існують для ваших учнів. У розділі Мої програми ви можете знайти всі коди, які ви зберегли.\n\nВи можете легко зберегти свої проекти, вказавши назву проекту на білій панелі та натиснувши зелену кнопку Зберегти код.\nВи (і ваші студенти) також можете ділитися програмами. Ці програми будуть опубліковані на нашій сторінці огляду, щоб усі бачили та використовували.\nЯкщо ви хочете скасувати спільний доступ до своєї програми, перейдіть до «Мої програми» та натисніть «Скасувати спільний доступ».\n"
    title: Приготування
    key: приготування
-   title: Навчання з Хеди
    key: teaching
    subsections:
    -   title: Навчання з Хеди
        text: "Hedy містить багато різних рівнів, кожен з яких навчає окремим новим навичкам. Ми рекомендуємо викладати один рівень за урок.\nЦе дає вашим учням час, щоб повністю зрозуміти нову команду чи концепцію та потренуватися з ними, перш ніж переходити до наступного рівня.\nМи використовуємо цю структуру на наших уроках:\n"
    -   title: Вступ
        text: "Ви можете розпочинати свої уроки, активізуючи попередні знання своїх учнів: що вони вже знають про предмет, чого навчилися на попередньому уроці та яких помилок вони припустилися, на яких тепер навчилися?\nТаким чином усі вивчені раніше команди та помилки, які часто допускаються, залишаються свіжими в пам’яті ваших учнів, коли ви розпочинаєте новий урок.\n"
    -   title: Введення нових понять і команд
        text: "Деяким студентам може бути дуже важко повністю зрозуміти нові концепції та команди.\nОсь чому важливо змоделювати належне використання нових команд для ваших учнів.\nОсобливо на нижчих рівнях, де деякі студенти взагалі не мають досвіду програмування, їм може бути важко зрозуміти нові абстрактні поняття.\nПоказ великої кількості прикладів робить абстрактне поняття (наприклад: «Що таке змінна?») більш впізнаваним і легшим для розуміння («Подивіться, змінна pet змінилася на dog»).\n"
    -   title: Приступаємо до роботи
        text: "Кожен рівень містить різні пригоди, які можна знайти на рожевих вкладках. Перша рожева вкладка пояснює нові команди на цьому рівні.\nНаступні вкладки — це пригоди, які учні можуть спробувати та створити власні.\nПригоди розташовані від найпростіших до найскладніших, тому ми рекомендуємо починати зліва, а ваш шлях - праворуч.\nОстання вкладка «що далі» дає невелику підказку про те, що ви дізнаєтесь на наступному рівні. Звичайно, ви можете вибрати пригоди, які ви хочете, щоб ваші учні зробили для кожного рівня.\nЇм не завжди потрібно робити всі пригоди. Кожна пригода містить приклад коду, який учні можуть спробувати за допомогою зеленої кнопки.\nПриклад коду копіюється в робоче поле, де студенти можуть випробувати код і налаштувати його, щоб зробити його власним.\nСтимулюйте своїх учнів перетворювати приклади кодів на власні проекти, додаючи власні ідеї та створюючи власну варіацію пригоди.\n"
    -   title: Тест
        text: "Щоб перевірити, чи ваші учні підібрали всю нову інформацію на рівні, ви можете дозволити їм виконати тест.\nТест містить 10 запитань з декількома варіантами відповідей про нові концепції та команди для цього рівня.\nЩе не на кожному рівні є вікторини, оскільки ми все ще створюємо вікторини.\n"
    -   text: "Завершіть свій урок короткою оцінкою. Чого навчилися учні? З якими труднощами вони зіткнулися?\nЯк вони вчилися на своїх помилках? І звичайно: що вони створили?\nСтуденти часто дуже пишаються своїми творіннями, тому приємно заощадити трохи часу та дати студентам можливість показати свої роботи своїм однокласникам.\n"
-   levels:
    -   sections:
        -   title: Учні забувають ввести команди
            example:
                error_code: "Hedy не може це надрукувати\n"
                solution_code: "print Hedy може надрукувати це!\n"
        -   example:
                error_text: "Команди не працюватимуть, якщо вони написані великими літерами.\n"
                solution_text: "Змініть великі літери.\n"
        -   title: Учні використовують echo без ask
            example:
                error_code: "echo Ваше ім'я\n"
                solution_code: "ask Як тебе звати?\necho Ваше ім'я\n"
        -   example:
                error_text: "І вони мають рацію! Ось чому вони навчаться використовувати правильні змінні на наступному рівні.\n"
                solution_text: "На першому рівні ми маємо зберегти це:\n"
        -   title: 'Черепаха: Учні відпускають черепаху від екрану'
            example:
                error_code: "forward 300\nturn 90\n"
                solution_code: "forward 100\nturn 90\n"
        -   example:
                error_text: "Backward не є командою.\n"
                solution_text: "Щоб змусити черепаху рухатися назад, ви використовуєте команду вперед і від’ємне число. Наприклад:\n"
    -   level: '2'
        sections:
        -   example:
                error_text: "Hedy не може розпізнати команду з помилкою.\n"
                solution_text: "Навчіть учнів читати повідомлення про помилки. Таким чином вони можуть самі дізнатися, що пішло не так.\n"
        -   title: Учні забувають, що команда ask змінилася
            example:
                error_text: "На цьому рівні учні дізнаються про змінні. Команда ask також вимагає змінної, але учні забувають про це.\n"
                solution_code: "order is ask Що б ви хотіли з'їсти?\n"
        -   example:
                error_code: "answer is ask Чому команда echo більше не працює?!\necho\n"
                solution_code: "answer is ask Чому команда echo більше не працює?!\nprint answer\n"
        -   title: Учні використовують назву змінної чи як звичайне слово
            example:
                error_code: "name is Hedy\nprint Привіт, моє name - є name\n"
                solution_code: "name is Hedy\nprint Привіт, я name\n"
        -   example:
                error_text: "Змінна має бути названа одним словом. Ви можете використовувати підкреслення, щоб з’єднати два слова. Це вважається за одне слово.\n"
                solution_text: "Додайте підкреслення.\n"
        -   title: Учні можуть використовувати дві різні назви для однієї змінної
            example:
                error_code: "horse is ask Як звати твого коня?\nprint Твого коня звати name\n"
                solution_code: "name is ask What is your horse called?\nprint Your horse is called name\n"
    -   sections:
        -   title: Students try to print whole lists
            example:
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_code: "print apples, milk, chocolate\n\nor\n\ngroceries is apples, milk, chocolate\nprint groceries at random\n"
        -   example:
                error_text: "This problem probably occured in level 2 as well. Now it can happen with lists too.\n"
                solution_text: "Don't use the names of variables or lists in regular text to print. In level 4 this problem is solves with quotation marks.\n"
        -   title: Students forget at in at random
            example:
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   example:
                error_text: "Or they will sometimes put at random at the beginning of the line.\n"
                solution_text: "Emphasize to your students that you always need a print to print text.\n"
        -   title: Students forget to use commas in their lists
            example:
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_code: "pizzas is funghi, tonno, quattro stagioni\nprint pizzas at random\n"
        -   example:
                error_code: "clubs is Manchester United\nprint clubs at random\n"
                solution_code: "clubs is Manchester United, Bayrn Munchen, FC Barcelona\nprint clubs at random\n"
        -   title: 'Students try to use add/remove without a list '
            example:
                error_code: "names is Jake\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
                solution_code: "names is Jake, Amy\nyour_name is ask Who are you?\nadd your_name to names\nprint names at random\n"
        -   example:
                error_text: "Without to/from the add/remove command won't work.\n"
                solution_text: "Hedy has to know which list the item should be added to/removed from.\n"
    -   level: '4'
        sections:
        -   example:
                error_text: "In this level print and ask need a set of quotation marks. One before of the text and one after.\n"
                solution_text: "Add the correct quotation marks.\n"
        -   example:
                solution_text: "These are the correct quotation marks:\n"
                error_code: "print `Welcome to the restaurant`\nfood is ask \"What would you like to order?\"\n"
            title: Students use the wrong quotation marks
        -   example:
                error_text: "From this level on apostrophes are not allowed. They are often used in English when thyping contractions like you're, don't or what's.\n"
                solution_text: "You can choose to use the wrong grammar and just leave the apostrophe out. Or you could use the ` as an apostrophe.\n"
    -   level: '5'
        sections:
        -   example:
                error_code: "if name is Hedy 'Great!'\nelse 'Hedy is better!'\n"
                solution_code: "if name is Hedy print 'Great!'\nelse print 'Hedy is better!'\n"
        -   title: Students might use two different names for the same variable
            example:
                error_code: "horse is ask 'What is your horse called?'\nif name is Bonfire print 'cool'\nelse print 'less cool!'\n"
                solution_code: "horse is ask 'What is your horse called'\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   example:
                error_text: "Codes using the `if` commando can get very long and students tend to forget to use quotes.\n"
                solution_text: "Always use 2 quotes in a print command.\n"
        -   title: Students use quotes around variable names
            example:
                error_code: "if 'name' is 'Hedy' print 'fun'\nelse print 'meh!'\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!\n"
        -   example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                solution_text: "Add an underscore.\n"
        -   title: Students want multiple answers to be correct
            example:
                error_text: "For example this student Hedy to tell all his friends that they are funny, but other classmates would be told that they are not.\n"
                solution_code: "friends is Jesse, David, Souf\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nor\n\nname is ask 'Who are you?'\nif naam is Jesse print 'You are funny'\nif naam is David print 'You are funny'\nif naam is Souf print 'You are funny'\n"
        -   example:
                error_text: "In the example below the password is 'password'. This will result in it always being correct.\n"
                solution_text: "Pick a different name for your variable.\n"
    -   sections:
        -   example:
                error_code: "print '5 + 5'\n"
                solution_text: "In this code the output screen will print '10'.\n"
            title: Students struggle with quotation marks
        -   example:
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                solution_text: "Or take it a step further like this.\n"
        level: '6'
    -   sections:
        -   example:
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students try to repeat multiple lines
            example:
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
        -   example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                solution_text: "Make sure the codes aren't too long\n"
        level: '7'
    -   sections:
        -   title: Students use the indentation wrong
            example:
                error_code: "repeat 3 times\nprint 'hello'\n"
                solution_code: "repeat 3 times\n    print 'hello'\n"
        -   example:
                error_text: "For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.\n"
                solution_text: "In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.\nShowing your students these differences can help them understand why we need indentation to make our programs work.\n"
        -   title: Students want to nest if statements, or put if statements inside a loop
            example:
                error_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    repeat 3 times\n        print 'Hip Hip Hooray!'\n"
                solution_code: "birthday = ask 'Is it you birthday?'\nif birthday = yes\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n    print 'Hip Hip Hooray!'\n"
        -   example:
                error_text: "In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).\n"
                solution_text: "Make sure the codes aren't too long\n"
        -   title: Students use the if command to check if the variable value is the same as the variable name
            example:
                solution_code: "password is ask 'What is the password?'\nif password is 'password'\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
                error_code: "password is ask 'What is the password?'\nif password is password\n    print 'You can come in'\nelse\n    print 'You are not allowed'\n"
    -   sections:
        -   title: Students make mistakes with indentation
            example:
                error_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n        if book is yes\nprint 'Robin buys the book and goes home'\nelse\n    print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
                solution_code: "print 'Robin is walking downtown'\nlocation = ask 'Is Robin going into a shop, or does she go home?'\nif location is shop\n    print 'She enters the shop.'\n    print 'Robin sees an interesting looking book'\n    book = ask 'Does Robin buy the book?'\n    if book is yes\n        print 'Robin buys the book and goes home'\n    else\n        print 'Robin leaves the shop and goes home'\nelse\n    print 'Robin goes home'\n"
    -   sections:
        -   example:
                error_text: "We often see that students try to print the list (in the example animals) instead of the items of the list.\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
        -   title: Students forget the indentation
            example:
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
    -   level: '11'
        sections:
        -   example:
                error_text: "Make sure that the students use indentation.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students don't understand the i
            example:
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   sections:
        -   example:
                error_text: "Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.\n"
                solution_text: "This is the correct code:\n"
        -   example:
                solution_text: "This is the correct code:\n"
                error_code: "score = '25'\nanswer is ask 'Do you want a point?'\nif answer is 'yes'\n    score = score + 1\n    print score\n"
            title: Students use quotation marks on numbers they want to use for calculations
        -   example:
                error_code: "print 2,5 + 2,5\n"
                solution_code: "print 2.5 + 2.5\n"
        level: '12'
    -   sections:
        -   title: Students confuse `and` with `or`
            example:
                solution_text: "In this case, the person should answer yes on both questions, so you should use `and`.\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
    -   sections:
        -   title: Students confuse the < and > signs
            example:
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                solution_text: "This is the correct code:\n"
        -   example:
                solution_text: "This is the correct code:\n"
                error_text: "In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.\n"
            title: Students forget to use the == sign
    -   sections:
        -   title: Students forget indentation in the while loop
            example:
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   sections:
        -   title: Students forget the brackets
            example:
                error_code: "icecream = 'starwberry', 'chocolate'\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                error_text: "From this level on lists should be in brackets.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
        -   title: Students forget the quotation marks while focussing on the brackets
            example:
                error_code: "icecream = [starwberry, chocolate]\nprint 'I love ' icecream[random] ' icecream'\n"
                solution_code: "icecream = ['starwberry', 'chocolate']\nprint 'I love ' icecream[random] ' icecream'\n"
    -   sections:
        -   example:
                error_text: "The elif command needs a condition behind it. It cannot be used like else, without a condition.\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
        -   title: Students forget the colon
            example:
                error_code: "answer = ask 'How are you doing?'\nif answer is 'great'\n    print 'Me too!'\nelif answer is 'bad'\n    print 'Let me cheer you up!'\nelse\n    print 'Im great!'\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
    -   level: '18'
        sections:
        -   example:
                error_text: "Students will forget to put brackets around their text.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students will still use the ask command
            example:
                solution_text: "This is the correct code:\n"
                error_code: "print('My name is Hedy!')\nname = ask('What is your name?')\nprint('So your name is ', name)\n"
        -   example:
                error_text: "They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.\n"
                solution_text: "This is the correct code:\n"
    title: Часті помилки
    key: типові_помилки
learn-more-sections:
-   title: Do you like Hedy?
    text: "We love to hear from you!\n[Click here to send us a message](mailto:hello@hedy.org \"About Hedy\")\n"
-   text: "[Let us know on GitHub](https://github.com/hedyorg/hedy/issues/new/choose)\n"
    title: Found a bug?
-   title: Code week talk
    text: "Want to know more about Hedy? Check out this talk Felienne gave at the European Code Week 2020:\n\n<iframe width=\"560\" height=\"315\" class=\"mx-auto mt-4\" src=\"https://www.youtube.com/embed/R2U9MEowYag?wmode=opaque\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n"
start-sections:
-   title: "Textual programming made easy!"
    text: |
        Many schools and teachers around the world want to teach their students programming. Initially this is often done with playful tools, ranging from the Beebot robot to
        Scratch Junior or Scratch. After using such tools, kids often want to move to more powerful, textual programming languages, like Python.

        Python however is hard, because it is only available in English, and requires learners to learn complex programming concepts and syntax at once.
        Hedy is the easy way to get started with textual programming languages! Hedy is free to use, open source, and unlike any other textual programming language in three ways.

        1. Hedy is multi-lingual, you can use Hedy in your own language
        2. Hedy is gradual, so you can learn one concept and its syntax a time
        3. Hedy is built for the classroom, allowing teachers to fully customize their student's experience
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Step by step learning"
    text: |
        Learning a programming language can be overwhelming, since learners have to learn concepts (for example if-else or loops) and syntax (like quotation marks or round brackets) at the same time. In Hedy, concepts are first introduced with little syntax and then refined. A scientifically proven way to learn!
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: "Programming in context"
    text: |
        Hedy shows programming in the broadest way possible, and can be used in variety of exciting ways. Hedy allows for the creation of digital and interactive stories, colorful drawings that can be shown on the screen but also drawn with a pen plotter or embroidered on a shirt, and can be used to create games or apps with buttons and keyboard actions.
-   title: "Is Hedy free?"
    text: |
        Yes! Hedy is 'Open source', which means that everyone can help us make Hedy better.
        You can find our code on [GitHub](https://github.com/hedyorg/hedy).
        If you like Hedy and want to contribute, we accept (and are very grateful for) [donations](https://github.com/sponsors/hedyorg)!

-   title: "Do I need to install anything?"
    text: |-
        No. Hedy works in the browser, which is the program you are using to look at this page. Probably Chrome or Edge or Firefox. Hedy also works on phones and tablets.
-   title: "Do I need programming experience to teach with Hedy?"
    text: |-
        No, that is not needed. All concepts are explained in the slides and in the interface for learners.
        If you create a free teacher's account, you also get access to the teacher's manual with information on how to teach
        and frequently made mistakes.

join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Translating Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
