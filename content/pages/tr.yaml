title: Hedy belgeleri
sections:
-   title: "Giriş"
    key: "tanıtım"
    subsections:
    -   title: "Hedy nedir?"
        text: |
            Hedy, özellikle (ön)gençler (10 ila 15 yaş arası) için geliştirilmiş metinsel bir programlama dilidir.
            Scratch gibi çocuklara yönelik programlama dillerinin aksine, Hedy kod blokları değil, metinsel kod kullanır.
            Böylece Hedy ile gerçek programcıların yaptığı gibi kod yazmayı öğreneceksiniz, ancak eğlenceli alıştırmalarla ve küçük adımlarla.
            Bu şekilde Hedy, Python gibi gerçek programlama dillerine doğru erişilebilir ve çoğunlukla eğlenceli bir şekilde bir basamak olarak işlev görebilir!
            Daha fazlasını öğrenmek istiyorsanız, Hedy'nin bir programlama dili olarak gelişimi hakkındaki bu <a href="https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s" target="_blank">video</a> 'yu izleyebilirsiniz.
    -   title: "Hedef kitle"
        text: |
            Hedy, ortaokul ve lise öğrencileri (10 - 15 yaş) düşünülerek geliştirilmiştir.
            Öğrencilerin iyi okuyabilmeleri önemlidir. Öğrenciler en az 3. sınıf okuma seviyesine ulaşmadan Hedy ile başlamamalarını öneririz.
            Öğrencilerin (ve öğretmenlerin!) Hedy ile başlamadan önce herhangi bir programlama deneyimine ihtiyaçları yoktur.
    -   title: "Hedy nasıl işliyor?"
        text: |
            Hedy, her birinde yeni komutların öğretildiği seviyelere ayrılmıştır. Her seviye, yeni öğrenilen komutları uygulamak için çeşitli maceralar içerir.
            Bir öğretmen olarak, öğrencilerinizin hangi maceraları yaşayacağına siz karar verirsiniz. Bu seviyede bir restoran mı, hesap makinesi mi yoksa perili bir ev mi yapacaklar? Her seviyede maceralar en kolaydan en zora doğru sıralanmıştır.
            Böylece öğrencilerinize meydan okumaya devam eder. Maceralar öğrenciler tarafından bireysel olarak yapılabilir veya bunları klasik bir eğitimde kullanabilirsiniz.

            Maceralar, dijital bilgisi daha az olan öğretmenlerin de Hedy'yi kullanabilmelerini sağlamak için bir kod örneği de içerir!
            Elbette Hedy, kendi ders planlarını ve maceralarını yapmayı seven yaratıcı öğretmenlere de hitap ediyor!

            Belirli bir seviyedeki tüm maceraları programladıktan sonra, öğrencileriniz bilgilerini kısa sınavda test edebilirler.
            Öğrencilerinizin çalışmalarını ve ilerlemelerini sınıf sayfasından takip edebilirsiniz.
    -   title: "Cihazlar"
        text: |
            Hedy web tabanlıdır, yani tarayıcısı olan herhangi bir cihazda (Google Chrome, Firefox, Edge vb.) çalışır, bu sayede dizüstü bilgisayarlar, Chromebook'lar, tabletler ve hatta akıllı telefonlar Hedy'yi kullanmak için uygundur.
            Hedy ile çalışmadan önce herhangi bir şey indirmenize gerek yok, sadece web sitesine gidin ve her şey çalışmaya hazır sizi bekler!
    -   title: "Hedy Topluluğu"
        text: |
            Bütün Hedy öğretmenleri, programcıları ve diğer hayranları <a href="https://discord.gg/8yY7dEme9r" target="_blank">Discord sunucumuza</a> katılmaya davetlidir. Burası Hedy hakkında sohbet etmek için ideal bir yer: harika projelerinizi ve derslerinizi gösterebileceğiniz kanallarımız, hataları bildirebileceğiniz kanallarımız ve diğer öğretmenlerle ve Hedy ekibiyle sohbet edebileceğiniz kanallarımız var.
            <a href="https://www.youtube.com/watch?v=Lyz_Lnd-_aI" target="_blank">Burada</a> Discord Topluluğuna nasıl katılacağınıza dair bir video bulabilirsiniz.
-   title: "Öğretici"
    key: "öğretici"
    subsections:
    -   title: "Öğretici"
        text: |
            Öğreticiyi (tekrar) izlemek ister misiniz? <a href="https://hedycode.com/tutorial" target="_blank">Buraya</a> tıklayın.
-   title: "Öğretim hazırlıkları"
    key: "hazırlıklar"
    subsections:
    -   title: "Bir Sınıf Oluşturma"
        text: |
            Bir öğretmen olarak, öğrencileriniz için bir sınıf oluşturabilirsiniz. Bu sınıfta öğrencilerin hesaplarını ve programlarını görebilir ve ilerlemelerini izleyebilirsiniz.
            Bu <a href="https://www.youtube.com/watch?v=Y3RTIWftJQg" target="_blank">video</a> Hedy'de nasıl hızlı bir şekilde sınıf oluşturacağınızı gösterir.
    -   title: "Sınıfınızı Özelleştirin"
        text: |
            Ayrıca, sınıfınızı özelleştirebilir ve onlar için hangi maceraların kullanılabilir olacağını seçebilirsiniz. Bu şekilde öğrencileriniz maceraların ve seviyelerin çokluğundan bunalmayacak ve özellikle pratik yapmalarını istediğiniz maceralara odaklanabilecekler.
            Bu <a href="https://www.youtube.com/watch?v=qva9gXBoUwY&t=10s" target="_blank">video</a> sınıfınızı nasıl özelleştireceğinizi gösterir.
    -   title: "Öğrenci Hesapları"
        text: |
            Öğrencilerinizin sınıfınıza katılmasını sağlamanın 2 yolu vardır: Onlar için hesap oluşturabilirsiniz ya da onlar kendi hesaplarını oluşturabilirler.

            **Öğrencileriniz için hesapları siz oluşturursunuz**
            Sınıfınıza öğrenci eklemenin en kolay yolu onlar için bir hesap oluşturmaktır. Bu, 'öğrenci hesapları oluştur' düğmesine tıklayarak ve onlar için kullanıcı adlarını ve şifreleri doldurarak yapılabilir.
            Öğrenciler seçtiğiniz kullanıcı adı ve şifre ile giriş yapabilirler. Daha sonra, isterlerse kullanıcı adlarını veya şifrelerini değiştirebilirler ve sınıfınızda kalmaya devam ederler.
            Bu <a href="https://www.youtube.com/watch?v=eEQvik-Ce5M" target="_blank">video</a> sınıfınıza en hızlı ve en kolay şekilde nasıl öğrenci ekleyeceğinizi gösterir.

            **Öğrenciler kendi hesaplarını oluşturur**
            Öğrencileriniz de Hedy web sitesine gidebilir ve tıpkı sizin yaptığınız gibi kendi hesaplarını oluşturabilirler. Onları sınıfınıza almak için davet bağlantısını tıklamaları yeterlidir.
            Davet bağlantısını sınıf sayfasında bulabilir ve öğrencilerinize gönderebilirsiniz. Bunun sorunsuz çalışması için öğrencilerinizin bağlantıya tıkladıklarında Hedy'de oturum açmış olmaları gerektiğini unutmayın.
            Ayrıca 'Kullanıcı adı ile davet' düğmesini kullanarak bir öğrenciyi sınıfınıza kendiniz davet edebilirsiniz.

    -   title: "Tercih edilen dili ayarlama"
        text: |
            Öğrenciler profil oluşturduklarında bir 'tercih edilen dil' seçmeleri gerekmektedir. Hedy her zaman bu seçilen dilde yüklenecektir.
            Bu dilin değiştirilmesi daha sonra 'Hesabım' ve 'Kişisel ayarlarım' bölümlerine tekrar gidilerek her zaman yapılabilir.
            Aralık 2021'den itibaren, her Hedy hesabı için tercih edilen bir dilin belirlenmesi zorunludur.
            Hesabınız veya öğrencilerinizin hesapları bu tarihten daha önce oluşturulmuşsa, tercih edilen dilin eksik olduğunu belirten bir mesaj alacaksınız.
            Endişelenmeyin! 'Profilim' bölümüne gidin ve profil ayarlarınızdan bir dil belirleyin.
            Siz bir dil belirleyene kadar Hedy, tarayıcınızın ayarlı dilinde ve eğer bu dil desteklenmiyorsa İngilizce olarak gösterilecektir.

            **İngilizce bilmeyenler için**
            Sadece maceraların dilini kendi dilinize çevirmekle kalmazsınız. Ayrıca anahtar kelimelerin (örneğin 'yazdır' veya 'sor') hangi dilde olması gerektiğini de seçebilirsiniz.
            Bu şekilde öğrencilerinize İngilizce anahtar kelimelerle kodlamayı öğretebilir, ancak kendi dillerinde programlamalarını da sağlayabilirsiniz. Örneğin, Türk öğrenciler 'ask' yerine 'sor' komutunu kullanabilirler.

            **Video**
            Bu  <a href="https://www.youtube.com/watch?v=QrVZETj4oLM" target="_blank">video</a> tercih edilen bir dili nasıl ayarlayacağınızı ve anahtar kelimeleri de tercih ettiğiniz dile nasıl değiştireceğinizi gösterir.

    -   title: "Programların kaydedilmesi"
        text: |
            Giriş yaptığınızda, profil simgenizin yanında Programlarım'ı göreceksiniz.
            Bu seçenek öğrencileriniz için de mevcuttur. Programlarım bölümünde üzerinde çalıştığınız tüm programları bulabilirsiniz.
            Varsayılan olarak programlar, kodu çalıştırdığınızda ve her 10 saniyede bir varsayılan isimleri ve seviyeleri (örneğin: Hikaye 5) altında 'Programlarım'a kaydedilecektir.
            Bir programı yeni bir isim altında saklamak isterseniz, isim çubuğuna yeni ismini yazmanız yeterlidir.
            Şu anda, seviye ve sekme başına yalnızca bir program kaydedilebilmektedir.

            Siz (ve öğrencileriniz) ayrıca program adlarının yanındaki paylaş düğmesini kullanarak programları paylaşabilirsiniz de.
            Bu programlar, herkesin görmesi ve kullanması için, sitemizin <a href="https://hedy.org/explore" target="_blank">Keşfet sayfaları</a> içinde yayınlanacaktır.
            Programınızın paylaşımını kaldırmak istiyorsanız, 'Programlarım'a gidin ve 'Paylaşımı kaldır'a tıklayın.

            Kağıt uçak simgesi, programları bir sınıfın öğretmenine teslim etmek için kullanılabilir. Teslim edilen programlar artık düzenlenemeyecektir.

-   title: "Hedy ile Öğretme"
    key: "öğretim"
    subsections:
    -   title: "Hedy ile Öğretme"
        text: |
            Hedy, her biri farklı bir yeni beceri öğreten birçok farklı seviye içerir. Her ders için bir seviye öğretilmesini öneriyoruz.
            Bu, öğrencilerinize bir sonraki seviyeye geçmeden önce yeni bir komutu veya kavramı tam olarak kavramaları ve onunla pratik yapmaları için zaman verir.
            Derslerimizde bu yapıyı kullanıyoruz: Giriş, Yeni kavramlar ve komutlar, Hadi çalışalım, bulmacalar ve kısa sınavlar.
    -   title: "Slaytlar"
        text: |
            **ÇOK YAKINDA** Burada yakında derslerinizde kullanabileceğiniz slaytları bulacaksınız.
    -   title: "Giriş"
        text: |
            Derslerinize öğrencilerinizin ön bilgilerini harekete geçirerek başlayabilirsiniz: Konu hakkında zaten ne biliyorlar, bir önceki derste ne öğrendiler ve şimdi ders çıkardıkları hangi hataları yaptılar?
            Bu şekilde, yeni dersi anlatmaya başladığınızda daha önce öğrenilen tüm komutlar ve sık yapılan hatalar öğrencilerinizin hafızasında tazelenmiş olur.
    -   title: "Yeni kavram ve komutlara giriş"
        text: |
            Yeni kavramlar ve komutlar bazı öğrenciler için tam olarak anlaşılması oldukça zor olabilir.
            Bu nedenle, öğrencilerinize yeni komutların doğru kullanımını modellemeniz önemlidir.
            Özellikle bazı öğrencilerin programlama konusunda hiç deneyimi olmadığı alt seviyelerde, yeni soyut kavramları anlamaları zor olabilir.
            Çok sayıda örnek göstermek, soyut bir kavramı (örneğin: "Değişken nedir?") daha tanınabilir ve daha kolay anlaşılabilir hale getirir ("Bakın, evcil_hayvan değişkeni şimdi bir köpeğe dönüştü").
    -   title: "Hadi çalışalım"
        text: |
            Her seviye, pembe sekmelerde bulabileceğiniz farklı maceralar içerir. İlk pembe sekme bu seviyedeki yeni komutları açıklar.
            Sonraki sekmeler öğrencilerin deneyebilecekleri ve kendilerinin yapabilecekleri maceralardır.
            Maceralar en kolaydan en zora doğru sıralanmıştır, bu nedenle soldan başlayıp sağa doğru ilerlemenizi öneririz.
            Son sekme olan 'sırada ne var', bir sonraki seviyede neler öğreneceğinize dair küçük bir ipucu verir. Elbette, öğrencilerinizin her seviye için yapmasını istediğiniz maceraları seçebilirsiniz.
            Öğrenciler her zaman her macerayı yapmak zorunda değiller. Her macera, öğrencilerin yeşil düğme ile deneyebilecekleri örnek bir kod içerir.
            Örnek kod çalışma alanına kopyalanabilir ve öğrenciler burada kodu deneyebilir ve kendilerine göre değiştirebilirler.
            Öğrencilerinizi, kendi fikirlerini eklemeleri ve maceraya kendi yorumlarını ekleyerek örnek kodları kendilerine ait projelere dönüştürmeleri için teşvik edin.
    -   title: "Kısa sınavlar ve bulmacalar"
        text: |
            Öğrencilerinizin, bir seviyedeki tüm yeni bilgileri anlayıp anlamadıklarını test etmek için, kısa bir sınava girmelerini sağlayabilirsiniz.
            Sınav, bu seviyedeki yeni kavramlarla ve komutlarla ilgili 10 çoktan seçmeli soru içerir.
            Bu sınavları hazırlamaya devam ettiğimiz için henüz her seviye için sınavlar tamamlanmış değil.
            Bazı seviyelerde bulmacalar da bulunuyor. Bu bulmacalar öğrencilere, çalışması için doğru sıraya koymaları gereken birkaç kod satırı verir.

            Bu <a href="https://www.youtube.com/watch?v=lNh5EdZVUwc" target="_blank">video</a> kısa sınavları ve bulmacaları gösterir.
    -   title: "Değerlendirme"
        text: |
            Dersinizi kısa bir değerlendirme yaparak tamamlayın. Öğrenciler ne öğrendi? Hangi zorluklarla karşılaştılar?
            Hatalarından nasıl ders çıkardılar? Ve tabii ki: Neler oluşturdular?
            Öğrenciler genellikle kendi eserleriyle gurur duyarlar, bu nedenle öğrencilerinize çalışmalarını sınıf arkadaşlarına gösterme fırsatı verecek molalar verin.
-   title: "Hedy'nin diğer özellikleri"
    key: "özellikler"
    subsections:
    -   title: "Öğretmen İstatistikleri"
        text: |
            Bu <a href="https://www.youtube.com/watch?v=iwHVG4NRKI4&t=5s" target="_blank">video</a> öğretmen istatistiklerini sınıfınızda nasıl kullanacağınız hakkında daha fazla bilgi verir.
    -   title: "Kendi maceranızı oluşturun"
        text: |
            Öğretmenlerin kendi maceralarını oluşturmaları da mümkündür. Bu <a href="https://www.youtube.com/watch?v=A0zbXpxX4q4" target="_blank">video</a> bir öğretmen olarak kendi maceranızı nasıl yaratacağınızı ve sınıf(lar)ınıza nasıl ekleyeceğinizi gösteriyor.
    -   title: "Keşfet sayfası"
        text: |
            <a href="https://hedycode.com/explore" target="_blank">Keşfet sayfasında</a> diğer Hedy kullanıcılarının çalışmalarını görüntüleyebilirsiniz. Onların programlarını deneyebilir ve kendiniz harika bir şey oluşturmak için ilham kaynağı olarak kullanabilirsiniz.
            Ayrıca, kodlama ekranında 'Kodu kaydet ve paylaş'a tıklayarak veya 'Programlarım'a gidip 'Paylaş'a tıklayarak kendi yaptığınız bir programı da keşfet sayfasına ekleyebilirsiniz.
            Çalışmanızı artık paylaşmak istemiyor musunuz? Sadece 'Programlarım'a gidin ve 'Paylaşımı Kaldır'a tıklayın.
            Keşfet sayfası hakkında daha fazla bilgi istiyorsanız, bu <a href="https://www.youtube.com/watch?v=26boFjqvS5Q" target="_blank">video</a>'ya bir göz atın.
    -   title: "Başarımlarım"
        text: |
            Ekranınızın sağ üst köşesindeki kullanıcı adınıza tıklarsanız, <a href="https://hedycode.com/my-achievements" target="_blank">Başarımlarım</a> sayfasına gidebilirsiniz. Bu sayfada başarılarınız toplanıyor. Öğrencilerinizin de böyle bir sayfası var.
            Farenizle rozetin üzerine geldiğinizde, rozeti nasıl kazanacağınızı göreceksiniz. Nasıl kazanacağınızı kendiniz bulmanız gereken gizli rozetler de vardır.
            Başarılar hakkında daha fazla bilgi edinmek istiyorsanız, bu <a href="https://www.youtube.com/watch?v=-FjmKejukCs" target="_blank">video</a> 'ya bir göz atın.
    -   title: "Yüksek Puanlar"
        text: |
            <a href="www.https://hedycode.com/highscores" target="_blank">Bu sayfa</a> 'da, tüm Hedy kullanıcılarının yüksek puanlarını görebilirsiniz.
            Bu <a href="https://www.youtube.com/watch?v=IqTiUkBVTo8" target="_blank">video</a>'da, yüksek skorlar hakkında biraz daha bilgi edinebilirsiniz.
    -   title: "Hata Ayıklayıcı"
        text: |
            Sizin (veya öğrencinizin) kodunuz çalışmıyor mu? İçinde bir hata (kodlama hatası) olmalı! Hatayı bulmak için hata ayıklayıcıyı kullanabilirsiniz.
            Hata ayıklayıcı, kodlama ekranınızdaki uğur böceği düğmesidir. Buna basarsanız, hatanızı bulmak için kodunuzu satır satır çalıştırabilirsiniz.
            Hatayı buldunuz mu? Kırmızı durdurma düğmesine basarsanız hata ayıklayıcı kapanacaktır.
    -   title: "Sesli oku"
        text: |
            Programınızın çıktısının yüksek sesle okunmasını ister misiniz? O zaman kodlama ekranınızdaki 'kodu çalıştır' düğmesinin altında bulunan sesli okuma işlevini kullanabilirsiniz.
    -   title: "Programcı kipi"
        text: |
            Tüm maceralar dikkatinizi mi dağıtıyor, yoksa uzun bir program mı yapmak istiyorsunuz? O zaman kodlama ekranınızın altındaki 'Programcı Kipi' anahtarına göz atın.
            Programcı modu, sizin ve öğrencilerinizin daha büyük bir kodlama ekranı kullanmasını sağlar.
    -   title: "Kopya kağıdı"
        text: |
            Her seviyede üstünde 🤔 emojisi olan bir düğme vardır. Siz ve öğrencileriniz "kopya kağıdını" orada bulabilirsiniz. Bu kopya kağıdında, bu seviyede kullanılabilen tüm komutları doğru biçimlerinde bulabilirsiniz.
            Dolayısıyla, bir komutun nasıl çalıştığını unutacak olursanız, kopya kağıdına bir göz atmanız yeterli!
    -   title: "Video"
        text: |
            Bu <a href="https://www.youtube.com/watch?v=c4MntPPgl1Y" target="_blank">video</a> size, Hedy'nin kopya kağıdı ve anahtar kelime değiştirici gibi diğer özelliklerini gösterir.
-   title: "Alıştırmaların cevapları"
    key: cevaplar
    intro: |
        Tüm alıştırmaların cevapları 'Hedy_answers' kullanıcı hesabının herkese açık profilinde bulunabilir. Öğrencileri genellikle cevaplarında kendi yaratıcılıklarını kullanmaya teşvik ediyoruz, bu nedenle bu cevaplar yalnızca olası bir doğru cevabın nasıl görünebileceğine dair bir kılavuz olarak kullanılmalıdır.

        'Hedy_answers' profiline gitmek için, lütfen <a href="https://hedy.org/user/hedy_answers" target="_blank">buraya</a> tıklayın.
-   title: "Yaygın hatalar"
    key: "common_mistakes"
    intro: |
        Hatalarınızdan ders çıkarabilirsiniz, özellikle de kodlama yaparken!
        Hata yapmak kaçınılmazdır ve öğrenmek için harika bir fırsattır, ancak öğretmenler için bir hata olduğunda doğru çözümü bulmak zor olabilir!
        Özellikle de seviyeler ilerledikçe kodlar uzadıkça uzar. Bu yüzden her seviyede sıkça yapılan hataları ve çözümlerini içeren bir liste hazırladık.
    levels:
    -   level: '1'
        sections:
        -   title: "Öğrenciler komutları yazmayı unutmuş olabilir"
            example:
                error_text: |
                    Örneğin, yazdır kullanmadan bir cümle yazarlar.
                error_code: |
                    Hedy bunu yazdır'amaz.
                solution_text: |
                    Bu seviyede, öğrencilerinize bir kod satırına her zaman bir komutla başlamalarını öğretin.
                solution_code: |
                    yazdır Hedy bunu yazdırabilir!
        -   title: "Öğrenciler komutları yazarken büyük harf kullanmış olabilirler"
            example:
                error_text: |
                    Komutlar büyük harflerle yazılırsa çalışamazlar.
                error_code: |
                    Sor Kodum neden başarısız oldu?.
                    Yazdır Çünkü büyük harf kullanıyorum.
                solution_text: |
                    Büyük harfleri kaldırın.
                solution_code: |
                    sor Kodum şimdi neden çalışıyor?
                    yazdır Çünkü büyük harfleri kaldırdım!
        -   title: "Öğrenciler yakıla'yı sor olmadan kullanmış olabilir"
            example:
                error_text: |
                    Bu seviyede, yankıla komutu bir sor komutundan sonra alınan cevabı tekrarlamak için yapıldı. sor komutu olmadan yankıla hiçbir şey yapmaz.
                error_code: |
                    yankıla Senin ismin
                solution_text: |
                    Kodun çalışabilmesi için bir sor komutu ekleyin.
                solution_code: |
                    sor Adınız nedir?
                    yankıla Demek adınız
        -   title: "Öğrenciler yankılanan kelimelerin (değişken) bir cümlenin ortasında olmasını istiyorlar"
            example:
                error_text: |
                    Ve bunda haklılar! İşte bu yüzden değişkenleri kullanmayı öğrenecekler, ama bir sonraki seviyede.
                error_code: |
                    sor En eğlenceli programlama dili hangisidir?
                    yankıla dili en iyisidir!
                solution_text: |
                    1. seviye için bunu şu şekilde kullanmak gerekiyor:
                solution_code: |
                    sor En eğlenceli programlama dili hangisidir?
                    yankıla En iyi olan dil...
        -   title: "Kaplumbağa: Öğrenciler kaplumbağanın ekrandan çıkıp gitmesine sebep olmuştur"
            example:
                error_text: |
                    Genellikle öğrenciler kaplumbağayı kullanırken büyük sayıları denemeyi severler, ama bu onun ekrandan çıkmasına neden olur.
                error_code: |
                    ileri 300
                    döndür 90
                solution_text: |
                    Bu örnekte, öğrenciler dönüş komutunun çalışmadığını düşünme eğilimindedir. Çalışıyor olsa bile, ekran dışında olduğundan bunun gerçekleştiğini göremezsiniz. Bunun olmasını önlemek için daha küçük sayılar kullanın.
                solution_code: |
                    ileri 100
                    döndür 90
        -   title: "Kaplumbağa: Öğrenciler geriye gibi bir komutu kullanmayı deniyor, ancak böyle bir komut yok"
            example:
                error_text: |
                    geriye diye bir komutumuz yok.
                error_code: |
                    geriye 100
                solution_text: |
                    Kaplumbağanın geriye doğru gitmesini sağlamak için ileri komutu ile negatif bir sayı kullanırsınız. Örneğin:
                solution_code: |
                    ileri -100
    -   level: '2'
        sections:
        -   title: "Öğrenciler komutlarında yazım hataları yapmış olabilirler"
            example:
                error_text: |
                    Hedy yazım hatası olan bir komutu tanıyamaz.
                error_code: |
                    yazzdır Yazım hatası yapma!
                solution_text: |
                    Öğrencilerinize hata mesajlarını okumayı öğretin. Bu şekilde neyin yanlış gittiğini kendileri bulabilirler.
                solution_code: |
                    yazdır Yazım hatası yapmayın!
        -   title: "Öğrenciler sor komutunun artık değiştiğini unutmuş olabilir"
            example:
                error_text: |
                    Bu seviyede öğrenciler değişkenleri öğrenirler. sor komutu da bir değişken kullanmayı gerektirir, ancak öğrenciler bu değişikliği unutabilirler.
                error_code: |
                    sor Ne yemek istersiniz?
                solution_text: |
                    Bu seviyede Hedy'ye cevabınızı nereye kaydedeceğinizi söylemeniz gerekir, böylece onu daha sonra kullanılabilirsiniz. Buna değişken denir.
                solution_code: |
                    sipariş eşit sor Ne yemek istersiniz?
        -   title: "Öğrenciler echo komutunu kullanmayı deniyor olabilirler "
            example:
                error_text: |
                    Bazı öğrenciler için yankıla komutunun artık çalışmadığını öğrenmek biraz sinir bozucu olabilir. Bu yüzden değişken kullanmanın avantajlarını açıklamak çok önemlidir. Örneğin, bir kodda birden fazla değişken kullanabilir ve bunları bir cümle içinde istediğiniz yere koyabilirsiniz!
                error_code: |
                    cevap eşit sor yankıla neden artık çalışmıyor?!
                    yankıla
                solution_text: |
                    Bunun yerine bir değişken kullanın.
                solution_code: |
                    cevap eşit sor yankı komutu neden artık çalışmıyor?!
                    yazdır cevap
        -   title: "Öğrenciler bir değişken adını normal bir kelime gibi olarak kullanmaya çalışır"
            example:
                error_text: |
                    Aşağıdaki örnekte 'adım' kelimesi hem bir değişken hem de normal bir metin olarak kullanılmıştır. Bu kodun çıktısı 'Merhaba, benim Hedy, Hedy' olacaktır.
                error_code: |
                    adım eşit Hedy
                    yazdır Merhaba, benim adım, adım
                solution_text: |
                    Bu nedenle, metin içinde kullanmak istediğiniz bir kelimeyi değişken adı olarak kullanmayın. Seviye 4'te bu sorun tırnak işaretleri kullanımı ile çözülecek.
                solution_code: |
                    isim eşit Hedy
                    yazdır Merhaba, benim adım isim
        -   title: "Öğrenciler iki kelime içeren uzun değişken isimleri kullanmayı deneyebilir."
            example:
                error_text: |
                    Bir değişken tek bir kelime ile adlandırılmalıdır. İki kelime gerekiyorsa bunları bağlamak için alt çizgi kullanabilirsiniz. Bu şekilde yine bir kelime olarak sayılır.
                error_code: |
                    seçili kapı eşit sor Hangi kapıyı seçiyorsun?
                solution_text: |
                    Alt çizgi kullanın.
                solution_code: |
                    seçili_kapı eşit sor Hangi kapıyı seçiyorsun?
        -   title: "Öğrenciler aynı değişken için iki farklı isim kullanmış olabilirler"
            example:
                error_text: |
                    Bu örnekte öğrenci aynı değişken için 'at' ve 'isim' kelimelerini kullanmıştır.
                error_code: |
                    at eşit sor Atının adı ne?
                    yazdır Demek, atınızın adı isim
                solution_text: |
                    Değişkenin kod boyunca aynı isme sahip olup olmadığını her zaman kontrol edin. Küçük farklılıkları fark etmek zor olabilir (örneğin çoğullar) ancak bunlar doğrudan koda etki edecektir.
                solution_code: |
                    isim eşit sor Atının adı ne?
                    yazdır Demek, atınızın adı isim
    -   level: '3'
        sections:
        -   title: "Öğrenciler bir listenin tamamını yazdırmaya çalışıyor olabilir"
            example:
                error_text: |
                    Bir listenin tamamı yazdırılamaz. (şimdilik) yalnızca listeden bir öğeyi şuradan rastgele kullanarak yazdırabilirsiniz.
                error_code: |
                    alışveriş eşit elma, süt, çikolata
                    yazdır alışveriş
                solution_text: |
                    Tüm yiyeceklerin bir listesini yazdırmak için, bunları bir `{print}` komutundan sonra tek tek koymanız yeterlidir. Aksi takdirde, listeyi `{at}` `{random}` ile kullanıp tek bir öğeyi yazdırmak için kullanabilirsiniz.
                solution_code: |
                    yazdır elma, süt, çikolata

                    ya da

                    alışveriş eşit elma, süt, çikolata
                    yazdır alışveriş şuradan rastgele
        -   title: "Öğrenciler bir değişkenin veya listenin adını normal metin gibi kullanıyor olabilir"
            example:
                error_text: |
                    Bu sorun muhtemelen 2. seviyede de ortaya çıkmıştır. Şimdi listelerde de olabilir.
                error_code: |
                    adım eşit Hedy
                    yazdır Merhaba, benim adım adım

                    ya da

                    hayvan eşit gergedan, arı, kuğu
                    yazdır En iyi hayvan ... hayvan şuradan rastgele
                solution_text: |
                    Yazdırmak için değişkenlerin veya listelerin adlarını normal metin içinde kullanmayın ya da onlara başka isimler verin. Seviye 4'te bu sorun tırnak işaretleri ile çözülecek.
                solution_code: |
                    isim {is} Hedy
                    {print} Merhaba, benim adım isim

                    ya da

                    hayvanlar {is} gergedan, arı, kuğu
                    {print} En iyi hayvan ... hayvanlar {at} {random}
        -   title: "Öğrenciler `{at}` `{random}` içinde `{at}` kullanmayı unutmuş olabilirler"
            example:
                error_text: |
                    Örnekte olduğu gibi
                error_code: |
                    kuşlar eşit serçe, martı, kızılgerdan
                    yazdır kuşlar rastgele
                solution_text: |
                    Bu sorun şuradan kelimesinin eklenmesiyle çözülür.
                solution_code: |
                    kuşlar eşit serçe, martı, kızılgerdan
                    yazdır kuşlar şuradan rastgele
        -   title: "Öğrenciler `{at}` `{random}` komutunu kullanırken de `{print}` komutunu kullanmayı unutmuş olabilirler"
            example:
                error_text: |
                    Ya da bazen satırın başına `{at}` `{random}` koyarlar.
                error_code: |
                    meyve eşit elma, kiraz, muz
                    meyve şuradan rastgele
                solution_text: |
                    Öğrencilerinize bir metni yazdırmak için her zaman bir yazdır kullanmaları gerektiğini vurgulayın.
                solution_code: |
                    meyve {is} elma, kiraz, muz
                    {print} meyve {at} {random}
        -   title: "Öğrenciler listelerinde virgül kullanmayı unutmuş olabilirler"
            example:
                error_text: |
                    Bir listede öğeler virgülle ayrılır.
                error_code: |
                    pizzalar {is} mantar ton balığı dört mevsim
                    {print} pizzalar {at} {random}
                solution_text: |
                    Listenizdeki her maddeden sonra bir virgül olmalıdır
                solution_code: |
                    pizzalar eşit mantar, ton balığı, dört mevsim
                    yazdır pizzalar şuradan rastgele
        -   title: "Öğrenciler liste olmadan `{at}` `{random}` kullanmaya çalışıyor olabilirler"
            example:
                error_text: |
                    Örneğin
                error_code: |
                    kulüpler {is} Manchester United
                    {print} kulüpler {at} {random}
                solution_text: |
                    Hedy rastgele bir şey yazdıramaz, çünkü seçim yapabileceği bir liste yoktur.
                solution_code: |
                    kulüpler {is} Manchester United, Bayern Munchen, FC Barcelona
                    {print} kulüpler {at} {random}
        -   title: "Öğrenciler liste olmadan ekle/kaldır yöntemini kullanmaya çalışıyor olabilirler "
            example:
                error_text: |
                    Aşağıdaki örnekte 'isimler' bir liste değil, bir tekli değişkendir. İçine herhangi bir şey ekleyemezsiniz.
                error_code: |
                    isimler {is} Jake
                    senin_ismin {is} {ask} Kimsin sen?
                    {add} senin_ismin {to} isimler
                    {print} isimler {at} {random}
                solution_text: |
                    Öncelikle elinizde bir liste olması gerekir, bu nedenle isimleri bir listeye dönüştürmek için ikinci bir isim eklemeniz gerekir, örneğin Amy. Amy'yi listenizde istemiyorsanız, daha sonra kaldırmak için kaldır kullanabilirsiniz.
                solution_code: |
                    isimler {is} Jake, Amy
                    senin_ismin {is} {ask} Kimsin sen?
                    {add} senin_ismin {to} isimler
                    {print} isimler {at} {random}
        -   title: "Öğrenciler ekle/kaldır işleminde şuraya/şuradan kullanmayı unuturlar"
            example:
                error_text: |
                    şuraya/şuradan olmadan ekle/kaldır komutu çalışmayacaktır.
                error_code: |
                    maceralar {is} hikaye, papağan, zar
                    seçim {is} En çok hangi macerayı seviyorsunuz?
                    {add} seçim
                    {remove} zar
                    {print} En çok sevdiğim maceralar {at} {random}
                solution_text: |
                    Hedy, öğenin hangi listeye ekleneceğini ve hangi listeden çıkarılacağını bilmelidir.
                solution_code: |
                    maceralar eşit hikaye, papağan, zar
                    seçim eşit En çok hangi macerayı seviyorsunuz?
                    ekle seçim şuraya maceralar
                    kaldır zar şuradan maceralar
                    yazdır Benim sevdiğim adventures şurada rastgele
    -   level: '4'
        sections:
        -   title: "Öğrenciler metnin her iki tarafında da tırnak işareti kullanmayı unutmuş olabilirler"
            example:
                error_text: |
                    Bu seviyede yazdırmak ve sormak için artık bir çift tırnak işareti kullanmak gerekiyor. Biri metinden önce ve diğeri sonra.
                error_code: |
                    yazdır Merhaba
                    ruh_hali eşit sor 'Nasılsın?
                solution_text: |
                    Doğru tırnak işaretlerini ekleyin.
                solution_code: |
                    yazdır 'Hello'
                    ruh_hali eşit sor 'Nasılsın?'
        -   title: "Öğrenciler yanlış tırnak işaretini kullanıyor"
            example:
                error_text: |
                    Dersinize öğrencilerin tırnak işaretini doğru yazmayı bilip bilmediklerini kontrol ederek başlamanız önemlidir. Aksi takdirde "çift tırnak" veya `ters tırnak` kullanabilirler.
                error_code: |
                    yazdır `Restorana hoş geldiniz`
                    yemek eşit sor "Ne sipariş etmek istersiniz?"
                solution_text: |
                    Doğrusu aşağıdaki gibi 'tek tırnak' işaretleridir:
                solution_code: |
                    yazdır 'Restorana hoş geldiniz'
                    yemek eşit sor 'Ne sipariş etmek istersiniz?'
        -   title: "Öğrenciler metinlerinde kesme işareti kullanmış olabilirler"
            example:
                error_text: |
                    Bu seviyeden itibaren, kesme işaretlerine izin verilmez çünkü bunlarda tek tırnak işareti kullanırlar. İngilizce you're veya don't, Türkçe'de Ali'nin veya TC'de gibi ifadelerde kullanılırlar.
                error_code: |
                    yazdır 'Hedy'de böyle yazmaya izniniz yok.'
                solution_text: |
                    Yanlış dilbilgisini kullanmayı seçebilir ve kesme işaretini atlayabilirsiniz. Ya da kesme işareti olarak ters tırnak ` kullanabilirsiniz.
                solution_code: |
                    yazdır 'Hedy de böyle yazmana izin var.'
                    yazdır 'Hedy`de böyle de yazabilirsin'
    -   level: '5'
        sections:
        -   title: "Öğrenciler bir `{if}` komutunda `{print}` kullanmayı unutmuş olabilirler"
            example:
                error_text: |
                    Öğrenciler `{if}` veya `{else}` komutlarını kullandıktan sonra `{print}` veya `{ask}` gibi ikinci bir komut kullanmayı unutabilirler.
                error_code: |
                    eğer isim eşit Hedy 'Harika!'
                    değilse 'Hedy daha iyi!'
                solution_text: |
                    Düzeltmek için yazdır komutunu ekleyin.
                solution_code: |
                    eğer isim eşit Hedy yazdır 'Harika!'
                    değilse yazdır 'Hedy daha iyi!'
        -   title: "Öğrenciler aynı değişken için iki farklı isim kullanmış olabilir"
            example:
                error_text: |
                    Bu örnekte öğrenci aynı değişkenler için 'at' ve 'isim' kelimelerini kullanmıştır.
                error_code: |
                    at eşit sor 'Atının adı ne?'
                    eğer isim eşit 'Şenlik Ateşi' yazdır 'havalı'
                    değilse yazdır 'az havalı!'
                solution_text: |
                    Değişkenin kod boyunca aynı ada sahip olup olmadığını her zaman kontrol edin. Küçük farklılıkları fark etmek zor olabilir (örneğin çoğullar) ancak bunlar kodu doğrudan etkileyecektir.
                solution_code: |
                    at eşit sor 'Atının adı ne?'
                    eğer at eşit 'Şenlik Ateşi' yazdır 'havalı'
                    değilse yazdır 'az havalı!
        -   title: "Öğrenciler hala her iki taraftaki tırnakları unutuyor olabilir"
            example:
                error_text: |
                    `eğer` komutunu kullanan kodlar çok uzun olabilir ve öğrenciler tırnak işaretlerini kullanmayı unutabilirler.
                error_code: |
                    eğer isim eşit Hedy yazdır eğlenceli
                    değilse yazdır 'eh işte!
                solution_text: |
                    yazdır komutunda her zaman 2 tırnak işareti kullanın.
                solution_code: |
                    eğer isim eşit Hedy yazdır 'eğlenceli'
                    değilse yazdır 'eh işte!'
        -   title: "Öğrenciler değişken isimlerinin etrafında tırnak işareti kullanıyor olabilir"
            example:
                error_text: |
                    Bu seviyede değişken isimlerinin etrafında tırnak işareti yoktur.
                error_code: |
                    eğer 'isim' eşit 'Hedy' yazdır 'eğlenceli'
                    değilse yazdır 'eh işte!'
                solution_text: |
                    Kodun çalışması için tırnak işaretlerini kaldırın.
                solution_code: |
                    eğer isim eşit Hedy yazdır 'eğlenceli'
                    değilse yazdır 'eh işte!
        -   title: "Öğrenciler iki sözcük içeren uzun değişken adları kullanmaya çalışabilirler"
            example:
                error_text: |
                    Bir değişken tek bir kelime ile adlandırılmalıdır. İki kelimeyi bağlamak için aralarına alt çizgi koyabilirsiniz. Bu şekilde bir kelime olarak sayılır.
                error_code: |
                    seçilen kapı eşit sor 'Hangi kapıyı seçiyorsun?'
                solution_text: |
                    Bir alt çizgi ekleyin.
                solution_code: |
                    seçilen_kapı eşit sor 'Hangi kapıyı seçiyorsun?'
        -   title: "Öğrenciler birden fazla cevabın doğru olmasını isteyebilir"
            example:
                error_text: |
                    Örneğin bu Hedy isimli öğrenci tüm kendi arkadaşlarına komik olduklarını söylerken, diğer sınıf arkadaşlarına komik olmadıklarını söyleyecektir.
                error_code: |
                    eğer isim Jesse, David, Souf yazdır 'Komiksin' değilse yazdır 'Komik değilsin'
                solution_text: |
                    Bunun için `içinde` komutunu kullanabilirsiniz. Bu daha ileriki bir seviyede açıklanmıştır, ancak 5. seviyede de çalışmaktadır.
                    Başka bir çözüm de birden fazla eğer komutu kullanmak ve değilse komutunu kullanmamaktır. Ama bunun kötü yanı, diğer sınıf arkadaşlarına komik olmadıklarını söyleyemeyecek olmasıdır.
                solution_code: |
                    arkadaşlar eşit Jesse, David, Souf
                    isim eşit sor 'Kimsin sen?'
                    eğer isim içinde arkadaşlar yazdır 'Çok komiksin.'
                    değilse yazdır 'Hiç komik değilsin.'

                    ya da

                    isim eşit sor 'Kimsin sen?'
                    eğer isim eşit Jesse yazdır 'Çok komiksin.'
                    eğer isim eşit David yazdır 'Çok komiksin.'
                    eğer isim eşit Souf yazdır 'Çok komiksin.'
        -   title: "Öğrenciler değişken adını `{if}` ifadesindeki değerle aynı yapmış olabilirler"
            example:
                error_text: |
                    Aşağıdaki örnekte parola 'parola'dır. Bu, her zaman karşılaştırmanın doğru olmasıyla sonuçlanacaktır.
                error_code: |
                    parola eşit sor 'Parola nedir?'
                    eğer parola eşit parola yazdır 'Erişim izni verildi'
                    değilse yazdır 'Erişim reddedildi!'
                solution_text: |
                    Değişkeniniz için farklı bir ad seçin.
                solution_code: |
                    gizli_parola eşit sor 'Parola nedir'
                    eğer gizli_parola eşit parola yazdır 'Erişim izni verildi!'
                    değilse yazdır 'Erişim reddedildi!'
    -   level: '6'
        sections:
        -   title: "Öğrenciler tırnak işaretleriyle mücadele etmeye devam ediyor"
            example:
                error_text: |
                    Bazı öğrenciler tırnak işareti ekleyip eklememekte zorlanırlar. Tırnak işareti eklerseniz, çıktı ekranı tam anlamıyla '5+5' gösterecektir.
                error_code: |
                    yazdır '5 + 5'
                solution_text: |
                    Bu kodda ise, çıktı ekranı '10' yazdıracaktır.
                solution_code: |
                    yazdır 5 + 5
        -   title: "Öğrenciler bir değişkenle matematik yapma kavramını anlamakta zorlanıyor olabilir"
            example:
                error_text: |
                    Bazı öğrenciler değişkenlerle matematik yapmakta zorlanacaktır. Onlara çok basit örnekler göstermeye çalışın:
                error_code: |
                    age = ask 'How old are you?'
                    print 'Next year you will be ' age + 1
                solution_text: |
                    Or take it a step further like this.
                solution_code: |
                    price = 0
                    print 'Welcome to our burger restaurant'
                    burger = ask 'Would you like a burger?'
                    if burger = yes price = price + 10
                    drink = ask 'Would you like a drink?'
                    if drink = yes price = price + 4
                    print 'That will be ' price ' euros please'
    -   level: '7'
        sections:
        -   title: "Students forget one of the word of the repeat command, or they forget the print command"
            example:
                error_text: |
                    Make sure that the students know to use both the full repeat command and the print command.
                error_code: |
                    repeat 3 times 'For he`s a jolly good fellow'
                    repeat 3 print 'Which nobody can deny!'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    repeat 3 times print 'For he`s a jolly good fellow'
                    repeat 3 times print 'Which nobody can deny!'
        -   title: "Students try to repeat multiple lines"
            example:
                error_text: |
                    In this level you can only repeat one line of code multiple times. In this code the student wanted to print 3 different drinks, but it won't work. It will ask the question 3 times and only print the last answer.
                error_code: |
                    repeat 3 times drink = ask 'What would you like to drink?'
                    print drink
                solution_text: |
                    You should go to the next level to be able to repeat multiple lines. So on this level you'll have to print everything seperately.
                solution_code: |
                    drink = ask 'What would you like to drink?'
                    print drink
                    drink = ask 'What would you like to drink?'
                    print drink
                    drink = ask 'What would you like to drink?'
                    print drink
        -   title: "Students make programs that take too long to run"
            example:
                error_text: |
                    In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).
                error_code: |
                    repeat 100 times print 'How many times can I repeat this?'
                solution_text: |
                    Make sure the codes aren't too long
                solution_code: |
                    repeat 20 times print 'This is enough'
    -   level: '8'
        sections:
        -   title: "Students use the indentation wrong"
            example:
                error_text: |
                    Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.
                error_code: |
                    repeat 3 times
                    print 'hello'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    repeat 3 times
                        print 'hello'
        -   title: "Students only repeat 1 line when they wanted to repeat multiple lines"
            example:
                error_text: |
                    For instance, in the code below the student wanted to take the drinks order of 3 people. But insted the program asked 3 times, but only wrote down one order.
                error_code: |
                    repeat 3 times
                        drink = ask 'What would you like to drink?'
                    print drink
                solution_text: |
                    In the correct code the third line starts with indentation too. This way it belongs to the repeat block and therefore it will be repeated 3 times.
                    Showing your students these differences can help them understand why we need indentation to make our programs work.
                solution_code: |
                    repeat 3 times
                        drink = ask 'What would you like to drink?'
                        print drink
        -   title: "Students want to nest if statements, or put if statements inside a loop"
            example:
                error_text: |
                    In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.
                    In the next level this is allowed.
                error_code: |
                    birthday = ask 'Is it you birthday?'
                    if birthday = yes
                        repeat 3 times
                            print 'Hip Hip Hooray!'
                solution_text: |
                    This is the correct code for this level:
                solution_code: |
                    birthday = ask 'Is it you birthday?'
                    if birthday = yes
                        print 'Hip Hip Hooray!'
                        print 'Hip Hip Hooray!'
                        print 'Hip Hip Hooray!'
        -   title: "Students make programs that take too long to run"
            example:
                error_text: |
                    In this level it's very easy to make long codes. The students aren't allowed to make programs that take to long to load (to save our servers).
                error_code: |
                    repeat 100 times
                        print 'How many times can I repeat this?'
                solution_text: |
                    Make sure the codes aren't too long
                solution_code: |
                    repeat 20 times
                        print 'This is enough'
        -   title: "Students use the if command to check if the variable value is the same as the variable name"
            example:
                error_text: |
                    We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.
                    In line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.
                    So with this code the answer will always be 'You can come in' no matter what the player fills in.
                error_code: |
                    password is ask 'What is the password?'
                    if password is password
                        print 'You can come in'
                    else
                        print 'You are not allowed'
                solution_text: |
                    You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.
                solution_code: |
                    password is ask 'What is the password?'
                    if password is 'password'
                        print 'You can come in'
                    else
                        print 'You are not allowed'
    -   level: '9'
        sections:
        -   title: "Students make mistakes with indentation"
            example:
                error_text: |
                    The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.
                error_code: |
                    print 'Robin is walking downtown'
                    location = ask 'Is Robin going into a shop, or does she go home?'
                    if location is shop
                        print 'She enters the shop.'
                        print 'Robin sees an interesting looking book'
                        book = ask 'Does Robin buy the book?'
                            if book is yes
                    print 'Robin buys the book and goes home'
                    else
                        print 'Robin leaves the shop and goes home'
                    else
                        print 'Robin goes home'
                solution_text: |
                    This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.
                solution_code: |
                    print 'Robin is walking downtown'
                    location = ask 'Is Robin going into a shop, or does she go home?'
                    if location is shop
                        print 'She enters the shop.'
                        print 'Robin sees an interesting looking book'
                        book = ask 'Does Robin buy the book?'
                        if book is yes
                            print 'Robin buys the book and goes home'
                        else
                            print 'Robin leaves the shop and goes home'
                    else
                        print 'Robin goes home'

    -   level: '10'
        sections:
        -   title: "Students so not use the for command correctly"
            example:
                error_text: |
                    We often see that students try to print the list (in the example animals) instead of the items of the list.
                error_code: |
                    animals is dog, cat, blobfish
                    for animal in animals
                      print 'I love ' animals
                solution_text: |
                    The word animals in the last line should be changed into animal.
                solution_code: |
                    animals is dog, cat, blobfish
                    for animal in animals
                      print 'I love ' animal
        -   title: "Students forget the indentation"
            example:
                error_text: |
                    Students tend to forget to use indentation after a for command.
                error_code: |
                    animals is dog, cat, blobfish
                    for animal in animals
                    print 'I love ' animals
                solution_text: |
                    You should use indentation after a for command.
                solution_code: |
                    animals is dog, cat, blobfish
                    for animal in animals
                      print 'I love ' animal
    -   level: '11'
        sections:
        -   title: "Students forget to use indentation"
            example:
                error_text: |
                    Make sure that the students use indentation.
                error_code: |
                    for i in range 1 to 5
                    print i
                solution_text: |
                    This is the correct code:
                solution_code: |
                    for i in range 1 to 5
                        print i
        -   title: "Students don't understand the i"
            example:
                error_text: |
                    Some students don't understand that i is a variable. i is chosen, because it is used in Python programming, but you could just as easily use a different variable name.
                    For example, this code:
                error_code: |
                    for i in range 1 to 5
                    print i
                solution_text: |
                    Could just as well be replaced with this code. It works the same.
                solution_code: |
                    for banana in range 1 to 5
                        print banana
    -   level: '12'
        sections:
        -   title: "Students forget quotation marks"
            example:
                error_text: |
                    Students need more quotation marks now than in the previous levels. In this example quotation marks were forgotten in the list and in the if command.
                error_code: |
                    superheroes = Spiderman, Batman, Iron Man
                    superhero = superheroes at random
                    if superhero = Batman
                        print 'IM BATMAN!'

                solution_text: |
                    This is the correct code:
                solution_code: |
                    superheroes = 'Spiderman', 'Batman', 'Iron Man'
                    superhero = superheroes at random
                    if superhero is 'Batman'
                        print 'IM BATMAN!'
        -   title: "Students use quotation marks on numbers they want to use for calculations"
            example:
                error_text: |
                    You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.
                    In the example below, you can't do maths with the number 25, because it's in quotation marks.
                error_code: |
                    score = '25'
                    answer is ask 'Do you want a point?'
                    if answer is 'yes'
                        score = score + 1
                        print score
                solution_text: |
                    This is the correct code:
                solution_code: |
                    score = 25
                    answer is ask 'Do you want a point?'
                    if answer is 'yes'
                        score = score + 1
                        print score
        -   title: "Students use commas instead of periods in decimal numbers"
            example:
                error_text: |
                    Decimal numbers can be used from this level on, but you can't use commas.
                error_code: |
                    print 2,5 + 2,5
                solution_text: |
                    This is the correct code:
                solution_code: |
                    print 2.5 + 2.5
    -   level: '13'
        sections:
        -   title: "Students confuse `and` with `or`"
            example:
                error_text: |
                    Both commands might appear similar, but their functions are very different.
                error_code: |
                    game is ask 'Do you want to play a game?'
                    time is ask 'Do you have time to play?'
                    if game is 'yes' or time is 'yes'
                        print 'Lets play!'
                solution_text: |
                    In this case, the person should answer yes on both questions, so you should use `and`.
                solution_code: |
                    game is ask 'Do you want to play a game?'
                    time is ask 'Do you have time to play?'
                    if game is 'yes' and time is 'yes'
                        print 'Lets play!'
    -   level: '14'
        sections:
        -   title: "Students confuse the < and > signs"
            example:
                error_text: |
                    Often, students are already familiar with these signs from maths class. But if your students don't know these signs yet, they might have a challenge with it.
                error_code: |
                    age = ask 'How old are you?'
                    if age < 12
                        print 'You are older than I am!'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    age = ask 'How old are you?'
                    if age > 12
                        print 'You are older than I am!'
        -   title: "Students use the wrong signs for `!=` `<=` and `>=`"
            example:
                error_text: |
                    These signs are probably new for most students. Make sure to explain these signs to your students.
                error_code: |
                    name = ask 'What is your name?'
                    if name =< 'Hedy'
                        print 'You are not Hedy'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    name = ask 'What is your name?'
                    if name != 'Hedy'
                        print 'You are not Hedy'
        -   title: "Students forget to use the == sign"
            example:
                error_text: |
                    In this level, students are still allowed to use = or is. But on other levels, or in python, they might get in trouble for that. So it is best to train them to use it.
                error_code: |
                    name = ask 'What is your name?'
                    if name = 'Hedy'
                        print 'You are cool!'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    name = ask 'What is your name?'
                    if name == 'Hedy'
                        print 'You are cool!'
    -   level: '15'
        sections:
        -   title: "Students forget indentation in the while loop"
            example:
                error_text: |
                    Indentation is often hard for students.
                error_code: |
                    answer = 0
                    while answer != 25
                    answer = ask 'What is 5 times 5?'
                    print 'A correct answer has been given'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    answer = 0
                    while answer != 25
                        answer = ask 'What is 5 times 5?'
                    print 'A correct answer has been given'
    -   level: '16'
        sections:
        -   title: "Students forget the brackets"
            example:
                error_text: |
                    From this level on lists should be in brackets.
                error_code: |
                    icecream = 'starwberry', 'chocolate'
                    print 'I love ' icecream[random] ' icecream'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    icecream = ['starwberry', 'chocolate']
                    print 'I love ' icecream[random] ' icecream'
        -   title: "Students use the wrong brackets"
            example:
                error_text: |
                    From this level on lists should be in brackets.
                error_code: |
                    icecream = ('starwberry', 'chocolate'}
                    print 'I love ' icecream[random] ' icecream'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    icecream = ['starwberry', 'chocolate']
                    print 'I love ' icecream[random] ' icecream'
        -   title: "Students forget the quotation marks while focussing on the brackets"
            example:
                error_text: |
                    Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.
                error_code: |
                    icecream = [starwberry, chocolate]
                    print 'I love ' icecream[random] ' icecream'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    icecream = ['starwberry', 'chocolate']
                    print 'I love ' icecream[random] ' icecream'
        -   title: "Students still use the old at random command"
            example:
                error_text: |
                    Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.
                error_code: |
                    icecream = [starwberry, chocolate]
                    print 'I love ' icecream at random ' icecream'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    icecream = ['starwberry', 'chocolate']
                    print 'I love ' icecream[random] ' icecream'
        -   title: "Students forget the quotation marks while focussing on the brackets"
            example:
                error_text: |
                    Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.
                error_code: |
                    icecream = [starwberry, chocolate]
                    print 'I love ' icecream[random] ' icecream'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    icecream = ['starwberry', 'chocolate']
                    print 'I love ' icecream[random] ' icecream'
    -   level: '17'
        sections:
        -   title: "Students use elif like else, so without a condition"
            example:
                error_text: |
                    The elif command needs a condition behind it. It cannot be used like else, without a condition.
                error_code: |
                    color = ask 'What is your favorite color?'
                    if color == 'green':
                        print 'green is nice'
                    elif:
                        print 'I like green'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    color = ask 'What is your favorite color?'
                    if color == 'green':
                        print 'green is nice'
                    elif color == yellow:
                        print 'yellow is alright'
                    else:
                        print 'I like green'
        -   title: "Students forget the colon"
            example:
                error_text: |
                    After each command that requires indentation, a colon should be used.
                error_code: |
                    answer = ask 'How are you doing?'
                    if answer is 'great'
                        print 'Me too!'
                    elif answer is 'bad'
                        print 'Let me cheer you up!'
                    else
                        print 'Im great!'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    answer = ask 'How are you doing?'
                    if answer is 'great':
                        print 'Me too!'
                    elif answer is 'bad':
                        print 'Let me cheer you up!'
                    else:
                        print 'Im great!'
    -   level: '18'
        sections:
        -   title: "Students forget to use the brackets"
            example:
                error_text: |
                    Students will forget to put brackets around their text.
                error_code: |
                    print 'my name is Hedy!'
                solution_text: |
                    This is the correct code:
                solution_code: |
                    print('my name is Hedy!')
        -   title: "Students will still use the ask command"
            example:
                error_text: |
                    The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.
                error_code: |
                    print('My name is Hedy!')
                    name = ask('What is your name?')
                    print('So your name is ', name)
                solution_text: |
                    This is the correct code:
                solution_code: |
                    print('My name is Hedy!')
                    name = input('What is your name?')
                    print('So your name is ', name)
        -   title: "Students might use the brackets as quotation marks"
            example:
                error_text: |
                    They have learned to keep the variables outside of the quotation marks, so they might do the same with the brackets. Which is not the correct way to use them.
                error_code: |
                    temperature = 25
                    print('It is ') temperature ('degrees outside')
                solution_text: |
                    This is the correct code:
                solution_code: |
                    temperature = 25
                    print('It is ', temperature, 'degrees outside')
learn-more-sections:
-   title: "Do you like Hedy?"
    text: |
        We love to hear from you!

        [Click here to send us a message](mailto:hello@hedy.org "About Hedy")
-   title: "Found a bug?"
    text: |
        [Let us know on GitHub](https://github.com/hedyorg/hedy/issues/new/choose)
-   title: "Want to help?"
    text: |
        The easiest way is to help with [translating Hedy](https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial)

        Below the current status, help us complete a language, or add a new one.
        <a href="https://hosted.weblate.org/engage/hedy/">
        <img src="https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg" alt="Translation status" /></a>
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   title: Translating Hedy
    text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/wiki/Hedy-Translation-Tutorial)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
start-sections:
-   text: "Many schools and teachers around the world want to teach their students programming. Initially this is often done with playful tools, ranging from the Beebot robot to\nScratch Junior or Scratch. After using such tools, kids often want to move to more powerful, textual programming languages, like Python.\n\nPython however is hard, because it is only available in English, and requires learners to learn complex programming concepts and syntax at once.\nHedy is the easy way to get started with textual programming languages! Hedy is free to use, open source, and unlike any other textual programming language in three ways.\n\n1. Hedy is multi-lingual, you can use Hedy in your own language\n2. Hedy is gradual, so you can learn one concept and its syntax a time\n3. Hedy is built for the classroom, allowing teachers to fully customize their student's experience\n"
    title: Textual programming made easy!
-   title: Multi-lingual programming
    text: "While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.\n"
-   text: "Learning a programming language can be overwhelming, since learners have to learn concepts (for example if-else or loops) and syntax (like quotation marks or round brackets) at the same time. In Hedy, concepts are first introduced with little syntax and then refined. A scientifically proven way to learn!\n"
    title: Step by step learning
-   title: Built for the classroom
    text: "Hedy is suitable for kids aged 10 and up and designed for classroom use.\nTeachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.\n"
-   title: Programming in context
    text: "Hedy shows programming in the broadest way possible, and can be used in variety of exciting ways. Hedy allows for the creation of digital and interactive stories, colorful drawings that can be shown on the screen but also drawn with a pen plotter or embroidered on a shirt, and can be used to create games or apps with buttons and keyboard actions.\n"
-   title: Is Hedy free?
    text: "Yes! Hedy is 'Open source', which means that everyone can help us make Hedy better.\nYou can find our code on [GitHub](https://github.com/hedyorg/hedy).\nIf you like Hedy and want to contribute, we accept (and are very grateful for) [donations](https://github.com/sponsors/hedyorg)!\n"
-   title: Do I need to install anything?
    text: No. Hedy works in the browser, which is the program you are using to look at this page. Probably Chrome or Edge or Firefox. Hedy also works on phones and tablets.
-   title: Do I need programming experience to teach with Hedy?
    text: "No, that is not needed. All concepts are explained in the slides and in the interface for learners.\nIf you create a free teacher's account, you also get access to the teacher's manual with information on how to teach\nand frequently made mistakes."
