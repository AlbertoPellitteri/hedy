title: Hedy dokumentatsioon
sections:
-   title: Sissejuhatus
    key: sissejuhatus
    subsections:
    -   title: Mis on Hedy?
        text: "Hedy on tekstipõhine programmeerimiskeel, mis on spetsiaalselt välja töötatud (eel)teismelistele (10-15 aastastele).\nErinevalt lastele mõeldud programmeerimiskeeltest, nagu Scratch, ei kasuta Hedy koodiplokke, vaid tekstilist koodi.\nNii et Hedyga õpid sa koodi kirjutama nagu tõelised programmeerijad, kuid väikeste sammude ja mänguliste harjutuste abil.\nNii saab Hedy toimida vaheastena tõeliste programmeerimiskeelte, nagu Python, õppimisel ning teha seda ligipääsetaval ja mis veel tähtsam, lõbusal viisil!\nSiit saate vaadata (inglisekeelset) [videot](https://www.youtube.com/watch?v=EdqT313rM40&amp;t=2s) Hedy arendamisest.\n"
    -   title: Sihtrühm
        text: "Hedy on välja töötatud, pidades silmas põhikooli õpilasi (vanuses 10 - 15).\nÕplilaste hea lugemisoskus on oluline. Me ei soovita alustada Hedyga enne, kui õpilastel on vähemalt kolmanda klassi lugemisoskus.\nEi õpilastel ega õpetajatel ei ole vaja varasemat programmeerimisoskust.\n"
    -   title: Kuidas Hedy töötab?
        text: "Hedy on jaotatud tasemeteks, kus igal tasemel õpitakse juurde mõni uus käsk. Igal tasemel on erinevaid seiklusi, et saaks harjutada värskelt õpitud käske.\nÕpetajana saate otsustada, millised seiklused on teie õpilastele kättesaadavad. Kas nad teevad sel tasemel restorani, kalkulaatori või kummitava maja? Igal tasemel on seklused järjestatud lihtsaimast raskeimani.\nNiimoodi on teie õpilastel pidev väljakutse. Õpilased võivad seiklusi ette võtta omaette või teie juhendamisel.\n\nSeiklused sisaldavad koodinäiteid, et ka vähem digi-oskajad õpetajad saaksid Hedy kasutamisega hakkama!\nLoomulikult võimaldab Hedy loomingulistel õpetajatel koostada oma õppeplaani ja seiklused!\n\nKui kõik taseme seiklused on läbi programmeeritud, saavad teie õpilased oma teadmisi testida küsimustiku abil.\nSaad jälgida oma õpilaste tööd ja edenemist klassi leheküljel.\n"
    -   title: Seadmed
        text: "Hedy on veebipõhine. See tähendab, et Hedy töötab igal pool, kus saab kasutada brauserit (Chrome, Firefox, Edge, Opera, jne.) ehk sülearvutid, tahvelarvutid ja muud nutiseadmed sobivad Hedy kasutamiseks.\nHedy kasutamiseks ei ole vaja midagi alla laadida, lihtsalt ava veebileht ja hakka pihta!\n"
    -   title: Hedy kogukond
        text: "Kutsume kõiki Hedy õpetajaid, programmeerijaid ja teisi fänneliituma oma [Discord'i serveriga](https://discord.gg/8yY7dEme9r). See on ideaalne koht Hedy teemadel vestlemiseks: meil on kanalid, kus saad teistega jagada oma lahedaid projekte ja õppeplaane, kanalid vigade raporteerimiseks ja kanalid teiste õpetajatega ja Hedy meeskonnaga vestlemiseks.\n"
-   title: Ettevalmistused
    key: Ettevalmistused
    subsections:
    -   title: Klassi loomine
        text: "Õpetajana saate luua oma õpilastele klassi. Selles klassis näete õpilaste kontosid ja programme ning saate jälgida nende edusamme.\nSamuti saate oma klassi kohandada ja valida, millised seiklused on neile kättesaadavad. Nii ei ole teie õpilased seikluste ja tasemete hulgast ülekoormatud ning nad saavad keskenduda konkreetselt nendele seiklustele, millega te soovite, et nad harjutaksid.\n"
    -   text: "On kaks võimalust, kuidas lasta õpilastel oma klassiga liituda: te võite lasta neil oma kontod ise teha või luua neile kontod.\n\n**Õpilased teevad ise oma kontod**\nTeie õpilased võivad minna Hedy veebisaidile ja luua oma kontod, täpselt nagu teie ise tegite. Selleks, et nad teie klassi pääseksid, peavad nad lihtsalt klõpsama kutselingile.\nKutselingi leiate klassi lehelt, saatke see oma õpilastele. Pidage meeles, et teie õpilased peavad olema Hedy'sse sisse logitud, kui nad lingile klõpsavad.\n\n**Teie loote õpilastele kontod**\nMõnikord on lihtsam luua oma õpilastele ise kontosid. Seda saab teha klõpsates nupule \"loo õpilaste kontod\" ja täites nende kasutajanimed ja paroolid.\nÕpilased saavad sisse logida teie valitud kasutajanime ja parooliga. Pärast seda võivad nad soovi korral oma kasutajanime või parooli muuta ning nad jäävad ikkagi teie klassi.\n"
    -   text: "Kui õpilased oma konto loovad, siis nad peavad valima 'eelistatud keele'. Hedy laetakse alati selles keeles.\nSeda keelt saab hiljem alati muuta, kui minna uuesti menüüsse \"Minu konto\" ja \"Minu isiklikud seaded\".\nAlates detsembrist 2021 on eelistatud keele määramine kohustuslik iga Hedy konto jaoks.\nKui teie konto või teie õpilaste kontod on loodud enne seda kuupäeva, saate teate, et eelistatud keel puudub.\nÄrge muretsege! Minge vahekaardile 'Minu konto' ja määrake keel oma konto seadetes.\nKuni keel on määratud kuvatakse Hedy teie brauseri keeles ja kui ka see keel ei ole määratud, siis inglise keeles.\n\n**Kui inglise keel ei ole su emakeel**\nTe ei saa mitte ainult seikluste keelt muuta, te saate ka valida millises keeles võtmesõnad (näiteks \"print\" või \"ask\") on. Nii saate õpetada oma õpilastele inglise keelsete märksõnadega programmeerimist, kuid võite lasta neil programmeerida ka oma emakeeles. Näiteks võivad eestikeelsed õpilased kasutada käsku 'küsi' käsu 'ask' asemel.\n\nNB! Käskude tõlkimine eesti keelde ei ole veel valmis, nii et see ei ole veel võimalik.\n"
    -   text: "Because you are now logged in, you'll see the blue banner with My profile and My programs.\nThese tabs exist for your students too. In My programs you can find all the codes that you've saved.\n\nYou can save your projects easily by giving your project a name in the white bar and pressing the green button Save Code.\nYou (and your students) can also share programs. These programs will be posted on our explore page, for everybody to see and use.\nIf you want to unshare your program, go to 'My programs' and click 'Unshare'.\n"
-   title: Õpetamine Hedy'ga
    key: õpetamine
    subsections:
    -   title: Õpetamine Hedy'ga
        text: "Hedy contains a lot of different levels that each teach a different new skill. We recommend to teach one level per lesson.\nThis gives your students the time to fully grasp a new command or concept and practice with it, before moving on to the next level.\nWe use this structure in our lessons:\n"
    -   title: Sissejuhatus
        text: "You can start your lessons by activating your students' prior knowledge: What do they already know about the subject, what did they learn in the previous lesson and which mistakes did they make that they've now learned from?\nThis way all the previously learned commands and frequently made mistakes are fresh in your students' memories, when you strat introducing the new lesson.\n"
    -   title: Uute mõistete ja käskude tutvustus
        text: "Mõndadele õpilastele võib olla uutest mõistetest ja käskudest raske aru saada.\nSellepärast on väga tähtis näidata õpilastele head eeskuju, kuidas uusi käske õigesti kasutada.\nEriti tähtis on see madalamatel tasemetel, kus õpilastel ei ole üldse mingit programmeerimiskogemust. Neile võib olla abstraktsete mõistete mõistmine keeruline olla.\n\nNäidete abil saab abstraktsed mõisted (näiteks: 'Mis on muutuja?') äratuntavamaks ja kergemini arusaadavaks teha('Näe, muutuja lemmikloom sai väärtuseks koer').\n"
    -   title: Hakkame pihta
        text: "Each level contains different adventures that you can find in the pink tabs. The first pink tab explains the new commands in this level.\nThe following tabs are adventures that the students can try out and make their own.\nThe adventures are arranged from easiest to hardest, so we recommend to start on the left and your your way to the right.\nThe last tab 'what's next' gives a little teaser of what you'll learn in the next level. Of course, you can select the adventures you want your students to do for each level.\nThey don't always have to make every adventure. Every adventure contains an example code, that the students can try out with the green button.\nThe example code gets copied to the workfield, where the students can try out the code and adjust it to make it their own.\nStimulate your students to turn the example codes into their own projects by adding their own ideas and making their own variation of the adventure.\n"
    -   title: Teadmiste kontroll
        text: "Kontrollimaks, kas teie õpilased on tasemel tutvustatud infost aru saanud, võite lasta neil teha teadmiste kontrolli.\nTeadmiste kontroll koosnev 10 valikvastusega küsimusest tasemel tutvustatud uute mõistete ja käskude kohta.\nKõikidel tasemetel ei ole veel teadmiste kontrolli - me alles tegeleme nende koostamisega.\n"
    -   text: "Round up your lesson by having a brief evaluation. What did the students learn? Which hardships did they come across?\nHow did they learn from their mistakes? And of course: What did they create?\nStudents are often very proud of their own creations, so it's nice to save a little time and gove your students the opportunity to show their work to their classmates.\n"
-   title: Sagedasemad vead
    levels:
    -   sections:
        -   example:
                error_text: "Näiteks kirjutavad nad lause, kasutamata võtmesõna {print}.\n"
                solution_text: "Õpetage oma õpilastele, et nad alustaks koodirida alati käsuga.\n"
        -   title: Õpilased kasutavad käskudes suurtähti
            example:
                error_code: "Küsi: „Miks mu kood ei tööta?“\nPrindi Sest ma kasutan suurtähti.\n"
                solution_code: "{ask} Miks mu kood nüüd töötab?\n{print} Sest ma ei kasuta enam suurtähti!\n"
        -   example:
                solution_code: "{ask} Mis on sinu nimi?\n{echo} Sinu nimi on\n"
                error_code: "{echo} Sinu nimi on\n"
        -   title: Õpilased tahavad, et {echo} väljastaks nende vastuse (muutuja) lause keskel
            example:
                error_code: "{ask} Milline programmeerimiskeel on kõige lõbusam?\n{echo} on parim!\n"
                solution_code: "{ask} Milline programmeerimiskeel on kõige lahedam?\n{echo} Parim on ...\n"
        -   example:
                error_text: "Often students love to try out big numbers when using the turtle, which causes the arrow to walk off the screen.\n"
                solution_text: "In the example. students tend to think that the turn command doesn't work. Eventhough is does work, but you can't see it happening off screen. Use smaller numbers to prevent this from happening.\n"
        -   title: "Kilpkonn: Õpilased üritavad kasutada käsku tagasi, aga seda käsku pole olemas"
            example:
                error_code: "tagasi 100\n"
                solution_code: "{forward} -100\n"
    -   sections:
        -   title: Õpilased teevad käskudes kirjavigu
            example:
                error_code: "prinndi Ära tee kirjavigu!\n"
                solution_code: "{print} Ära tee kirjavigu!\n"
        -   example:
                error_code: "{ask} Mida te süüa sooviksite?\n"
                solution_code: "order is What would you like to eat?\n"
        -   title: 'Students try to use the echo command. '
            example:
                error_code: "answer is ask Why doesn't echo work anymore?!\necho\n"
                solution_code: "answer is ask Why doens't echo work anymore?!\nprint answer\n"
        -   example:
                error_code: "name is Hedy\nprint Hi my name is name\n"
                solution_code: "name is Hedy\nprint Hi I'm name\n"
        -   example:
                error_text: "A variable should be named with one word. You could use an underscore to connect two words. That counts as one.\n"
                solution_text: "Add an underscore.\n"
            title: Students use long variable names containing two words.
        -   example:
                error_code: "horse is ask What is your horse called?\nprint Your horse is called name\n"
                solution_code: "name is ask What is your horse called?\nprint Your horse is called name\n"
        level: '2'
    -   sections:
        -   title: Students try to print whole lists
            example:
                error_code: "groceries is apples, milk, chocolate\nprint groceries\n"
                solution_code: "print apples, milk, chocolate\n\nor\n\ngroceries is apples, milk, chocolate\nprint groceries at random\n"
        -   example:
                error_text: "This problem probably occured in level 2 as well. Now it can happen with lists too.\n"
                solution_text: "Don;t use the names of variables or lists in regular text to print. In level 4 this problem is solves with quotation marks.\n"
        -   title: Students forget at in at random
            example:
                error_code: "birds is sparrow, seagull, robin\nprint birds random\n"
                solution_code: "birds is sparrow, seagull, robin\nprint birds at random\n"
        -   example:
                error_text: "Or they will sometimes put at random at the beginning of the line.\n"
                solution_text: "Emphasize to your students that you always need a print to print text.\n"
        -   title: Students forget to use commas in their lists
            example:
                error_code: "pizzas is funghi tonno quattro stagioni\nprint pizzas at random\n"
                solution_code: "pizzas is funghi, tonno, quattro stagioni\nprint pizzas at random\n"
        -   example:
                error_text: "For example\n"
                solution_text: "Hedy can't print anything at random, because there is no list to choose from.\n"
        -   title: 'Students try to use add/remove without a list '
            example:
                error_text: "In the example below 'names' is not a list, but a variable. You cannot add anything to it.\n"
                solution_text: "There has to be a list first, so you have to add a second name to turn names into a list, for example Amy. If you don't want amy on your list, you can use remove to remove it after.\n"
        -   example:
                error_text: "Without to/from the add/remove command won't work.\n"
                solution_text: "Hedy has to know which list the item should be added to/removed from.\n"
    -   sections:
        -   title: Students forget to use quotation marks on both sides of the text
            example:
                error_code: "print Hello\nmood is ask 'How are you?\n"
                solution_code: "print 'Hello'\nmood is ask 'How are you?'\n"
        -   example:
                error_text: "It is important to start your lesson by checking if the students know how to type a quotation mark properly. ELse they might use the \"double quotes\" or the `skewed one`.\n"
                solution_text: "These are the correct quotation marks:\n"
        -   title: Students use an apostrophe in their text
            example:
                error_text: "From this level on apostrophes are not allowed. They are often used in English when thyping contractions like you're, don't or what's.\n"
                solution_code: "print 'Youre allowed to type this'\nprint 'And you`re able to do this'\n"
    -   sections:
        -   title: Students forget to use print in an if command
            example:
                error_code: "if name is Hedy 'Great!'\nelse 'Hedy is better!'\n"
                solution_code: "if name is Hedy print 'Great!'\nelse print 'Hedy is better!'\n"
        -   example:
                error_text: "In this example the student has used 'horse' and 'name' for the same variables.\n"
                solution_code: "horse is ask 'What is your horse called'\nif horse is Bonfire print 'cool!'\nelse print 'less cool!'\n"
        -   title: Students still forget the quotes on both sides.
            example:
                error_code: "if name is Hedy print fun\nelse print 'meh!\n"
                solution_code: "if name is Hedy print 'fun'\nelse print 'meh!'\n"
        -   example:
                solution_text: "Remove the quotes to get the code to work.\n"
                error_text: "In this level there are no quotes around variable names.\n"
        -   title: Students use long variable names containing two words.
            example:
                error_code: "chosen door is ask 'Which door do you pick?'\n"
                solution_code: "chosen_door is ask 'which door do you pick?'\n"
        -   example:
                error_code: "if name is Jesse, David, Souf print 'You are funny' else print 'You are not funny'\n"
                solution_code: "friends is Jesse, David, Souf\nname is ask 'Who are you?'\nif name in friends print 'You are funny'\nelse print 'You are not funny'\n\nor\n\nname is ask 'Who are you?'\nif naam is Jesse print 'You are funny'\nif naam is David print 'You are funny'\nif naam is Souf print 'You are funny'\n"
        -   example:
                error_code: "password is ask 'What is the password?'\nif password is password print 'Access granted'\nelse print 'Acces denied!'\n"
                solution_code: "secret_password is ask 'What is the password'\nif secret_password is password print 'Access granted!'\nelse print 'Access denied!'\n"
            title: The students make the variable name the same as the value in the if statement
    -   sections:
        -   title: Students struggle with quotation marks
            example:
                error_code: "print '5 + 5'\n"
                solution_code: "print 5 + 5\n"
        -   example:
                error_text: "Some students will find it hard to do maths with variables. Try to show them very simple examples, like:\n"
                solution_code: "price = 0\nprint 'Welcome to our burger restaurant'\nburger = ask 'Would you like a burger?'\nif burger = yes price = price + 10\ndrink = ask 'Would you like a drink?'\nif drink = yes price = price + 4\nprint 'That will be ' price ' euros please'\n"
        level: '6'
    -   sections:
        -   example:
                error_text: "Make sure that the students know to use both the full repeat command and the print command.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students try to repeat multiple lines
            example:
                error_code: "repeat 3 times drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_code: "drink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\ndrink = ask 'What would you like to drink?'\nprint drink\n"
        -   example:
                error_code: "repeat 100 times print 'How many times can I repeat this?'\n"
                solution_code: "repeat 20 times print 'This is enough'\n"
        level: '7'
    -   sections:
        -   example:
                error_text: "Indentation is a new concept in this level, that is hard to use for some students. Make sure they practise some simple codes before making a whole program with it.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students only repeat 1 line when they wanted to repeat multiple lines
            example:
                error_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\nprint drink\n"
                solution_code: "repeat 3 times\n    drink = ask 'What would you like to drink?'\n    print drink\n"
        -   example:
                error_text: "In this level students aren't allowed yet to put if statements inside other if statements or inside repeat loops.\nIn the next level this is allowed.\n"
                solution_text: "This is the correct code for this level:\n"
        -   title: Students make programs that take too long to run
            example:
                error_code: "repeat 100 times\n    print 'How many times can I repeat this?'\n"
                solution_code: "repeat 20 times\n    print 'This is enough'\n"
        -   example:
                solution_text: "You can fix this mistake by adding quotation marks. This way the computer knows that the second password in `if password is 'password'` is a string value (so normal text) and not the variable name.\n"
                error_text: "We have seen this mistake by some of our students. They make a password for their computer, but they make the password 'password'.\nIn line 2 the computer is asked to check wheter the variable password is the same as the variable password, so itself. Which means the answer is alway yes.\nSo with this code the answer will always be 'You can come in' no matter what the player fills in.\n"
        level: '8'
    -   sections:
        -   example:
                solution_text: "This is the correct code. Try to keep track of all the different constructions when putting if statements inside other if statements.\n"
                error_text: "The hardest part about this level is getting the indentation right. Students love nesting if statements, sometimes even inside other nested if statements. Keeping track of indentation can get pretty tough.\n"
            title: Students make mistakes with indentation
    -   sections:
        -   title: Students so not use the for command correctly
            example:
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animals\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
        -   example:
                error_code: "animals is dog, cat, blobfish\nfor animal in animals\nprint 'I love ' animals\n"
                solution_code: "animals is dog, cat, blobfish\nfor animal in animals\n  print 'I love ' animal\n"
    -   level: '11'
        sections:
        -   example:
                error_text: "Make sure that the students use indentation.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students don't understand the i
            example:
                error_code: "for i in range 1 to 5\nprint i\n"
                solution_code: "for banana in range 1 to 5\n    print banana\n"
    -   sections:
        -   title: Students forget quotation marks
            example:
                error_code: "superheroes = Spiderman, Batman, Iron Man\nsuperhero = superheroes at random\nif superhero = Batman\n    print 'IM BATMAN!'\n"
                solution_code: "superheroes = 'Spiderman', 'Batman', 'Iron Man'\nsuperhero = superheroes at random\nif superhero is 'Batman'\n    print 'IM BATMAN!'\n"
        -   example:
                error_text: "You can use quotation marks on numbers, but only if you want the computer to think of them as text. This means you can't do calculations with the number.\nIn the example below, you can't do maths with the number 25, because it's in quotation marks.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students use commas instead of periods in decimal numbers
            example:
                error_code: "print 2,5 + 2,5\n"
                solution_code: "print 2.5 + 2.5\n"
    -   sections:
        -   example:
                error_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' or time is 'yes'\n    print 'Lets play!'\n"
                solution_code: "game is ask 'Do you want to play a game?'\ntime is ask 'Do you have time to play?'\nif game is 'yes' and time is 'yes'\n    print 'Lets play!'\n"
        level: '13'
    -   sections:
        -   title: Students confuse the < and > signs
            example:
                error_code: "age = ask 'How old are you?'\nif age < 12\n    print 'You are older than I am!'\n"
                solution_code: "age = ask 'How old are you?'\nif age > 12\n    print 'You are older than I am!'\n"
        -   example:
                error_text: "These signs are probably new for most students. Make sure to explain these signs to your students.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students forget to use the == sign
            example:
                solution_text: "This is the correct code:\n"
                error_code: "name = ask 'What is your name?'\nif name = 'Hedy'\n    print 'You are cool!'\n"
    -   sections:
        -   title: Students forget indentation in the while loop
            example:
                error_code: "answer = 0\nwhile answer != 25\nanswer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
                solution_code: "answer = 0\nwhile answer != 25\n    answer = ask 'What is 5 times 5?'\nprint 'A correct answer has been given'\n"
    -   sections:
        -   example:
                error_text: "From this level on lists should be in brackets.\n"
                solution_text: "This is the correct code:\n"
        -   example:
                error_text: "From this level on lists should be in brackets.\n"
                solution_text: "This is the correct code:\n"
            title: Students use the wrong brackets
        -   example:
                solution_text: "This is the correct code:\n"
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
        -   title: Students still use the old at random command
            example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_text: "This is the correct code:\n"
        -   example:
                error_text: "Students are sometimes very focussed on the new aspect of the syntax, that they forget the quotation marks.\n"
                solution_text: "This is the correct code:\n"
        level: '16'
    -   sections:
        -   title: Students use elif like else, so without a condition
            example:
                error_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif:\n    print 'I like green'\n"
                solution_code: "color = ask 'What is your favorite color?'\nif color == 'green':\n    print 'green is nice'\nelif color == yellow:\n    print 'yellow is alright'\nelse:\n    print 'I like green'\n"
        -   example:
                solution_text: "This is the correct code:\n"
                solution_code: "answer = ask 'How are you doing?'\nif answer is 'great':\n    print 'Me too!'\nelif answer is 'bad':\n    print 'Let me cheer you up!'\nelse:\n    print 'Im great!'\n"
    -   sections:
        -   title: Students forget to use the brackets
            example:
                error_text: "Students will forget to put brackets around their text.\n"
                solution_code: "print('my name is Hedy!')\n"
        -   example:
                error_text: "The ask command has been used since level 1. So it might be hard for the students to switch to input instead of ask.\n"
                solution_text: "This is the correct code:\n"
        -   title: Students might use the brackets as quotation marks
            example:
                error_code: "temperature = 25\nprint('It is ') temperature ('degrees outside')\n"
                solution_code: "temperature = 25\nprint('It is ', temperature, 'degrees outside')\n"
    key: common_mistakes
start-sections:
-   title: "Textual programming made easy!"
    text: |
        Many schools and teachers around the world want to teach their students programming. Initially this is often done with playful tools, ranging from the Beebot robot to
        Scratch Junior or Scratch. After using such tools, kids often want to move to more powerful, textual programming languages, like Python.

        Python however is hard, because it is only available in English, and requires learners to learn complex programming concepts and syntax at once.
        Hedy is the easy way to get started with textual programming languages! Hedy is free to use, open source, and unlike any other textual programming language in three ways.

        1. Hedy is multi-lingual, you can use Hedy in your own language
        2. Hedy is gradual, so you can learn one concept and its syntax a time
        3. Hedy is built for the classroom, allowing teachers to fully customize their student's experience
-   title: "Multi-lingual programming"
    text: |
        While almost all textual programming language have keywords in English, such as `for` or `repeat`, Hedy can be used in any language! We currently support 39 different languages, including Spanish, Arabic, Simplified Chinese and Hindi. If your language is not available you can always start a a new translation.
-   title: "Step by step learning"
    text: |
        Learning a programming language can be overwhelming, since learners have to learn concepts (for example if-else or loops) and syntax (like quotation marks or round brackets) at the same time. In Hedy, concepts are first introduced with little syntax and then refined. A scientifically proven way to learn!
-   title: "Built for the classroom"
    text: |
        Hedy is suitable for kids aged 10 and up and designed for classroom use.
        Teachers can use our free, built-in lesson plans, but can also author their own lessons and load these into the Hedy user interface.
-   title: "Programming in context"
    text: |
        Hedy shows programming in the broadest way possible, and can be used in variety of exciting ways. Hedy allows for the creation of digital and interactive stories, colorful drawings that can be shown on the screen but also drawn with a pen plotter or embroidered on a shirt, and can be used to create games or apps with buttons and keyboard actions.
-   title: "Is Hedy free?"
    text: |
        Yes! Hedy is 'Open source', which means that everyone can help us make Hedy better.
        You can find our code on [GitHub](https://github.com/hedyorg/hedy).
        If you like Hedy and want to contribute, we accept (and are very grateful for) [donations](https://github.com/sponsors/hedyorg)!

-   title: "Do I need to install anything?"
    text: |-
        No. Hedy works in the browser, which is the program you are using to look at this page. Probably Chrome or Edge or Firefox. Hedy also works on phones and tablets.
-   title: "Do I need programming experience to teach with Hedy?"
    text: |-
        No, that is not needed. All concepts are explained in the slides and in the interface for learners.
        If you create a free teacher's account, you also get access to the teacher's manual with information on how to teach
        and frequently made mistakes.

learn-more-sections:
-   title: Do you like Hedy?
    text: "We love to hear from you!\n\n[Click here to send us a message](mailto:hello@hedy.org \"About Hedy\")\n"
-   title: Found a bug?
    text: "[Let us know on GitHub](https://github.com/hedyorg/hedy/issues/new/choose)\n"
-   title: Want to help?
    text: "The easiest way is to help with [translating Hedy](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nBelow the current status, help us complete a language, or add a new one.\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
join-sections:
-   text: "# There are three ways in which you can support Hedy!\n"
    title: Supporting Hedy
-   title: Improving the language
    text: "The gradual and multi-lingual nature of Hedy create a lot of interesting technical challenges.\nFind those issues on [Github](https://github.com/hedyorg/hedy/issues?q=is%3Aopen+is%3Aissue+label%3Alanguage).\n"
-   text: "Not a programmer? No problem! Another way to support Hedy is by [translating keywords, error messages, adventures are other content](https://github.com/hedyorg/hedy/blob/main/TRANSLATING.md)\n\nThis is the current status, help us complete a language, or add a new one!\n<a href=\"https://hosted.weblate.org/engage/hedy/\">\n<img src=\"https://hosted.weblate.org/widgets/hedy/-/multi-auto.svg\" alt=\"Translation status\" /></a>\n"
    title: Translating Hedy
-   title: Help teachers get started
    text: "Hedy is designed to support teachers in providing programming lessons in class. We have specific teacher features like the option to create a class, customize it and see how your students are doing.\nIf you like Hedy, you can reach out to schools that you know to help teachers get started! We can help you find schools or teachers via [Discord](https://discord.gg/8yY7dEme9r).\n"
